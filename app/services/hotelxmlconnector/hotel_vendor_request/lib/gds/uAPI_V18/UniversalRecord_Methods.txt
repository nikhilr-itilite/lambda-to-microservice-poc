
Prefixes:
     ns5: http://www.travelport.com/schema/hotel_v46_0
     ns0: http://www.travelport.com/soa/common/security/SessionContext_v1
     ns6: http://www.travelport.com/schema/rail_v46_0
     ns3: http://www.travelport.com/schema/air_v46_0
     ns8: http://www.travelport.com/schema/cruise_v46_0
     ns1: http://www.travelport.com/schema/universal_v46_0
     ns4: http://www.travelport.com/schema/vehicle_v46_0
     ns2: http://www.travelport.com/schema/common_v46_0
     xsd: http://www.w3.org/2001/XMLSchema
     ns7: http://www.travelport.com/schema/passive_v46_0

Global elements:
     ns3:APISRequirements(Document: ns3:Document[], Key: xsd:anyType, Level: xsd:string, GenderRequired: xsd:boolean, DateOfBirthRequired: xsd:boolean, RequiredDocuments: xsd:string, NationalityRequired: xsd:boolean)
     ns3:APISRequirementsList(APISRequirements: ns3:APISRequirements[])
     ns3:AccountRelatedRules(BookingRules: ns3:BookingRules[], RoutingRules: ns3:RoutingRules)
     ns3:ActionDetails(PseudoCityCode: ns2:typePCC, AgentSine: xsd:string, EventDate: xsd:date, EventTime: xsd:time, Text: xsd:string)
     ns3:AdditionalInfo(Category: xsd:string)
     ns3:AddlBookingCodeInformation(ns2:typeNonBlanks)
     ns3:Adjustment(({Amount: ns2:typeMoney} | {Percent: xsd:float}), AdjustedTotalPrice: ns2:typeMoney, ApproximateAdjustedTotalPrice: ns2:typeMoney, BookingTravelerRef: ns2:typeRef)
     ns3:Affiliations(TravelArranger: ns3:TravelArranger[])
     ns3:AirAvailInfo(BookingCodeInfo: ns3:BookingCodeInfo[], FareTokenInfo: {FareInfoRef: xsd:string, HostTokenRef: xsd:string}[], ProviderCode: ns2:typeProviderCode, HostTokenRef: xsd:string)
     ns3:AirExchangeBundle(AirExchangeInfo: ns2:AirExchangeInfo, AirPricingInfoRef: ns3:AirPricingInfoRef[], TaxInfo: ns2:typeTaxInfo[], Penalty: ns2:Penalty[])
     ns3:AirExchangeBundleList(AirExchangeBundle: ns3:AirExchangeBundle[])
     ns3:AirExchangeBundleTotal(AirExchangeInfo: ns2:AirExchangeInfo, Penalty: ns2:Penalty[])
     ns3:AirExchangeModifiers(ContractCodes: {ContractCode: ns3:ContractCode[]}, BookingDate: xsd:string, TicketingDate: xsd:string, AccountCode: xsd:string, TicketDesignator: ns3:typeTicketDesignator, AllowPenaltyFares: xsd:boolean, PrivateFaresOnly: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string)
     ns3:AirExchangeMulitQuoteList(AirExchangeMultiQuoteOption: ns3:AirExchangeMultiQuoteOption[])
     ns3:AirExchangeMultiQuoteOption(AirSegmentData: ns3:AirSegmentData[], AirExchangeBundleTotal: ns3:AirExchangeBundleTotal, AirExchangeBundleList: ns3:AirExchangeBundleList[])
     ns3:AirExchangeTicketBundle(TicketNumber: ns2:StringLength1to13, FormOfPayment: ns2:FormOfPayment[], FormOfPaymentRef: ns2:FormOfPaymentRef, WaiverCode: ns3:WaiverCode)
     ns3:AirFareDiscount(Percentage: xsd:double, Amount: ns2:typeMoney, DiscountMethod: ns3:typeFareDiscount)
     ns3:AirFareDisplayModifiers(TripType: ns3:typeFareTripType[], CabinClass: ns2:CabinClass, PenaltyFareInformation: ns3:PenaltyFareInformation, MaxResponses: xsd:integer, DepartureDate: xsd:date, TicketingDate: xsd:date, ReturnDate: xsd:date, BaseFareOnly: xsd:boolean, UnrestrictedFaresOnly: xsd:boolean, FaresIndicator: ns3:typeFaresIndicator, CurrencyType: ns2:typeCurrency, IncludeTaxes: xsd:boolean, IncludeEstimatedTaxes: xsd:boolean, IncludeSurcharges: xsd:boolean, GlobalIndicator: ns3:typeATPCOGlobalIndicator, ProhibitMinStayFares: xsd:boolean, ProhibitMaxStayFares: xsd:boolean, ProhibitAdvancePurchaseFares: xsd:boolean, ProhibitNonRefundableFares: xsd:boolean, ValidatedFaresOnly: xsd:boolean, ProhibitTravelRestrictedFares: xsd:boolean, FiledCurrency: ns2:typeCurrency)
     ns3:AirFareDisplayRuleKey(ns2:typeNonBlanks, ProviderCode: ns2:typeProviderCode)
     ns3:AirFareRuleCategory(CategoryCode: ns3:typeFareRuleCategoryCode[], FareInfoRef: ns2:typeRef)
     ns3:AirFareRulesModifier(AirFareRuleCategory: ns3:AirFareRuleCategory[])
     ns3:AirItinerary(AirSegment: ns3:typeBaseAirSegment[], HostToken: ns2:HostToken[], APISRequirements: ns3:APISRequirements[])
     ns3:AirItineraryDetails(AirSegmentDetails: ns3:AirSegmentDetails[], PassengerDetails: ns3:PassengerDetails[], Key: ns2:typeRef)
     ns3:AirItinerarySolution(AirSegmentRef: ns3:AirSegmentRef[], Connection: ns3:Connection[], Key: ns2:typeRef)
     ns3:AirItinerarySolutionRef(Key: ns2:typeRef)
     ns3:AirLegModifiers(PermittedCabins: ns3:PermittedCabins, PreferredCabins: ns3:PreferredCabins, PermittedCarriers: ns3:PermittedCarriers, ProhibitedCarriers: ns3:ProhibitedCarriers, PreferredCarriers: ns3:PreferredCarriers, PermittedConnectionPoints: {ConnectionPoint: ns2:typeLocation[]}, ProhibitedConnectionPoints: {ConnectionPoint: ns2:typeLocation[]}, PreferredConnectionPoints: {ConnectionPoint: ns2:typeLocation[]}, PermittedBookingCodes: {BookingCode: ns3:BookingCode[]}, PreferredBookingCodes: ns3:PreferredBookingCodes, PreferredAlliances: {Alliance: ns3:Alliance[]}, ProhibitedBookingCodes: {BookingCode: ns3:BookingCode[]}, DisfavoredAlliances: {Alliance: ns3:Alliance[]}, FlightType: ns3:FlightType, AnchorFlightData: ns3:typeAnchorFlightData, ProhibitOvernightLayovers: xsd:boolean, MaxConnectionTime: xsd:integer, ReturnFirstAvailableOnly: xsd:boolean, AllowDirectAccess: xsd:boolean, ProhibitMultiAirportConnection: xsd:boolean, PreferNonStop: xsd:boolean, OrderBy: ns3:OrderBy, MaxJourneyTime: ns3:typeMaxJourneyTime)
     ns3:AirPricePoint(AirPricingInfo: ns3:AirPricingInfo[], AirPricingResultMessage: ns2:typeResultMessage[], FeeInfo: ns2:typeFeeInfo[], FareNote: ns3:FareNote[], TaxInfo: ns2:typeTaxInfo[], Key: ns2:typeRef, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, CompleteItinerary: xsd:boolean)
     ns3:AirPricePointList(AirPricePoint: ns3:AirPricePoint[])
     ns3:AirPriceResult(AirPricingSolution: ns3:AirPricingSolution[], FareRule: ns3:FareRule[], AirPriceError: ns2:typeResultMessage, CommandKey: ns3:CommandKey)
     ns3:AirPricingAdjustment(Adjustment: ns3:Adjustment, Key: ns2:typeRef)
     ns3:AirPricingCommand(AirPricingModifiers: ns3:AirPricingModifiers, AirSegmentPricingModifiers: ns3:AirSegmentPricingModifiers[], CommandKey: ns3:CommandKey, CabinClass: xsd:string)
     ns3:AirPricingInfo(FareInfo: ns3:FareInfo[], FareStatus: ns3:FareStatus, FareInfoRef: ns3:FareInfoRef[], BookingInfo: ns3:BookingInfo[], TaxInfo: ns2:typeTaxInfo[], FareCalc: xsd:string, PassengerType: ns3:PassengerType[], BookingTravelerRef: ns2:BookingTravelerRef[], WaiverCode: ns3:WaiverCode, PaymentRef: ns3:PaymentRef[], ChangePenalty: ns3:typeFarePenalty[], CancelPenalty: ns3:typeFarePenalty[], NoShowPenalty: ns3:typeFarePenalty[], FeeInfo: ns2:typeFeeInfo[], Adjustment: ns3:Adjustment[], Yield: ns3:Yield[], AirPricingModifiers: ns3:AirPricingModifiers, TicketingModifiersRef: ns3:TicketingModifiersRef[], AirSegmentPricingModifiers: ns3:AirSegmentPricingModifiers[], FlightOptionsList: ns3:FlightOptionsList, BaggageAllowances: ns3:BaggageAllowances, FareRulesFilter: ns3:FareRulesFilter, PolicyCodesList: ns3:PolicyCodesList, PriceChange: ns3:PriceChangeType[], ActionDetails: ns3:ActionDetails, Commission: ns2:Commission[], Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, Key: ns2:typeRef, CommandKey: ns3:CommandKey, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, AmountType: ns2:StringLength1to32, IncludesVAT: xsd:boolean, ExchangeAmount: ns2:typeMoney, ForfeitAmount: ns2:typeMoney, Refundable: xsd:boolean, Exchangeable: xsd:boolean, LatestTicketingTime: xsd:string, PricingMethod: ns3:typePricingMethod, Checksum: xsd:string, ETicketability: ns3:typeEticketability, PlatingCarrier: ns2:typeCarrier, ProviderReservationInfoRef: ns2:typeRef, AirPricingInfoGroup: xsd:int, TotalNetPrice: ns2:typeMoney, Ticketed: xsd:boolean, PricingType: ns3:PricingType, TrueLastDateToTicket: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, InPolicy: xsd:boolean, PreferredOption: xsd:boolean, FareCalculationInd: ns3:FareCalculationInd, Cat35Indicator: xsd:boolean)
     ns3:AirPricingInfoList(AirPricingInfo: ns3:AirPricingInfo[])
     ns3:AirPricingInfoRef(Key: ns2:typeRef)
     ns3:AirPricingModifiers(ProhibitedRuleCategories: {FareRuleCategory: ns3:FareRuleCategory[]}, AccountCodes: {AccountCode: ns2:AccountCode[]}, PermittedCabins: ns3:PermittedCabins, ContractCodes: {ContractCode: ns3:ContractCode[]}, ExemptTaxes: ns3:ExemptTaxes, PenaltyFareInformation: ns3:PenaltyFareInformation, DiscountCard: ns2:DiscountCard[], PromoCodes: {PromoCode: ns3:PromoCode[]}, ManualFareAdjustment: ns3:ManualFareAdjustment[], PointOfSale: ns2:PointOfSale, BrandModifiers: ns3:BrandModifiers, MultiGDSSearchIndicator: ns3:MultiGDSSearchIndicator[], ProhibitMinStayFares: xsd:boolean, ProhibitMaxStayFares: xsd:boolean, CurrencyType: ns2:typeCurrency, ProhibitAdvancePurchaseFares: xsd:boolean, ProhibitNonRefundableFares: xsd:boolean, ProhibitRestrictedFares: xsd:boolean, FaresIndicator: ns3:typeFaresIndicator, FiledCurrency: ns2:typeCurrency, PlatingCarrier: ns2:typeCarrier, OverrideCarrier: ns2:typeCarrier, ETicketability: ns3:typeEticketability, AccountCodeFaresOnly: xsd:boolean, Key: ns2:typeRef, ProhibitNonExchangeableFares: xsd:boolean, ForceSegmentSelect: xsd:boolean, InventoryRequestType: ns3:typeInventoryRequest, OneWayShop: xsd:boolean, ProhibitUnbundledFareTypes: xsd:boolean, ReturnServices: xsd:boolean, ChannelId: ns3:ChannelId, ReturnFareAttributes: xsd:boolean, SellCheck: xsd:boolean)
     ns3:AirPricingPayment(Payment: ns2:Payment[], ({FormOfPayment: ns2:FormOfPayment[]} | {FormOfPaymentRef: ns2:FormOfPaymentRef}), AirPricingInfoRef: ns3:AirPricingInfoRef[])
     ns3:AirPricingSolution(AirSegment: ns3:typeBaseAirSegment[], AirSegmentRef: ns3:AirSegmentRef[], Journey: ns3:Journey[], LegRef: ns3:LegRef[], AirPricingInfo: ns3:AirPricingInfo[], FareNote: ns3:FareNote[], FareNoteRef: ns3:FareNoteRef[], Connection: ns3:Connection[], MetaData: ns2:MetaData[], AirPricingResultMessage: ns2:typeResultMessage[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns2:typeTaxInfo[], AirItinerarySolutionRef: ns3:AirItinerarySolutionRef[], HostToken: ns2:HostToken[], OptionalServices: ns3:OptionalServices, AvailableSSR: ns3:AvailableSSR, PricingDetails: ns3:PricingDetails, Key: ns2:typeRef, CompleteItinerary: xsd:boolean, QuoteDate: xsd:date, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, Itinerary: ns3:Itinerary)
     ns3:AirPricingTicketingModifiers(AirPricingInfoRef: ns3:AirPricingInfoRef[], TicketingModifiers: ns3:TicketingModifiers)
     ns3:AirRefundBundle(AirRefundInfo: ns3:AirRefundInfo, Name: ns2:Name[], TaxInfo: ns2:typeTaxInfo[], WaiverCode: ns3:WaiverCode, TicketNumber: xsd:string, PTC: xsd:anyType, RefundType: ns3:RefundType)
     ns3:AirRefundInfo(RefundRemark: ns2:RefundRemark[], RefundAmount: ns2:typeMoney, RetainAmount: ns2:typeMoney, RefundFee: ns2:typeMoney, RefundableTaxes: xsd:string, FiledCurrency: ns2:typeCurrency, ConversionRate: xsd:decimal, Taxes: ns2:typeMoney, OriginalTicketTotal: ns2:typeMoney, ForfeitAmount: ns2:typeMoney, Retain: xsd:boolean, Refund: xsd:boolean)
     ns3:AirRefundModifiers(RefundDate: xsd:string, AccountCode: xsd:string, TicketDesignator: ns3:typeTicketDesignator)
     ns3:AirReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, OptionalServices: ns3:OptionalServices, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], DocumentInfo: ns3:DocumentInfo, BookingTravelerRef: ns2:BookingTravelerRef[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], AirSegment: ns3:typeBaseAirSegment[], SvcSegment: ns3:SvcSegment[], AirPricingInfo: ns3:AirPricingInfo[], Payment: ns2:Payment[], CreditCardAuth: ns2:CreditCardAuth[], FareNote: ns3:FareNote[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns3:typeTaxInfoWithPaymentRef[], TicketingModifiers: ns3:TicketingModifiers[], AssociatedRemark: ns3:AssociatedRemark[], PocketItineraryRemark: ns3:PocketItineraryRemark[], AirExchangeBundleTotal: ns3:AirExchangeBundleTotal, AirExchangeBundle: ns3:AirExchangeBundle[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string)
     ns3:AirReservationLocatorCode(ns2:typeLocatorCode)
     ns3:AirScheduleChangedInfo(AirPricingSolution: ns3:AirPricingSolution)
     ns3:AirSearchAsynchModifiers(InitialAsynchResult: {MaxWait: xsd:positiveInteger})
     ns3:AirSearchModifiers(DisfavoredProviders: {Provider: ns2:Provider[]}, PreferredProviders: {Provider: ns2:Provider[]}, DisfavoredCarriers: {Carrier: ns2:Carrier[]}, PermittedCarriers: ns3:PermittedCarriers, ProhibitedCarriers: ns3:ProhibitedCarriers, PreferredCarriers: ns3:PreferredCarriers, PermittedCabins: ns3:PermittedCabins, PreferredCabins: ns3:PreferredCabins, PreferredAlliances: {Alliance: ns3:Alliance[]}, DisfavoredAlliances: {Alliance: ns3:Alliance[]}, PermittedBookingCodes: {BookingCode: ns3:BookingCode[]}, PreferredBookingCodes: ns3:PreferredBookingCodes, ProhibitedBookingCodes: {BookingCode: ns3:BookingCode[]}, FlightType: ns3:FlightType, MaxLayoverDuration: ns3:MaxLayoverDurationType, NativeSearchModifier: ns3:typeNativeSearchModifier, DistanceType: ns2:typeDistance, IncludeFlightDetails: xsd:boolean, AllowChangeOfAirport: xsd:boolean, ProhibitOvernightLayovers: xsd:boolean, MaxSolutions: xsd:integer, MaxConnectionTime: xsd:integer, SearchWeekends: xsd:boolean, IncludeExtraSolutions: xsd:boolean, ProhibitMultiAirportConnection: xsd:boolean, PreferNonStop: xsd:boolean, OrderBy: ns3:OrderBy, ExcludeOpenJawAirport: xsd:boolean, ExcludeGroundTransportation: xsd:boolean, MaxJourneyTime: ns3:typeMaxJourneyTime, JetServiceOnly: xsd:boolean)
     ns3:AirSegment(ns3:typeBaseAirSegment)
     ns3:AirSegmentData(AirSegmentRef: ns3:AirSegmentRef[], BaggageAllowance: ns3:BaggageAllowance[], Brand: ns3:Brand[], CabinClass: xsd:string, ClassOfService: ns2:typeClassOfService)
     ns3:AirSegmentDetails(PassengerDetailsRef: ns3:PassengerDetailsRef[], BrandID: ns3:BrandID[], BookingCodeList: xsd:string, Key: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Carrier: ns2:typeCarrier, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:dateTime, ArrivalTime: xsd:dateTime, Equipment: ns3:typeEquipment, ClassOfService: ns2:typeClassOfService, CabinClass: xsd:string, OperatingCarrier: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber)
     ns3:AirSegmentError(AirSegment: ns3:typeBaseAirSegment, ErrorMessage: xsd:string)
     ns3:AirSegmentList(AirSegment: ns3:typeBaseAirSegment[])
     ns3:AirSegmentPricingModifiers(PermittedBookingCodes: {BookingCode: ns3:BookingCode[]}, AirSegmentRef: ns2:typeRef, CabinClass: xsd:string, AccountCode: xsd:string, ProhibitAdvancePurchaseFares: xsd:boolean, ProhibitNonRefundableFares: xsd:boolean, ProhibitPenaltyFares: xsd:boolean, FareBasisCode: xsd:string, FareBreak: ns3:typeFareBreak, ConnectionIndicator: ns3:typeConnectionIndicator, BrandTier: ns2:StringLength1to10)
     ns3:AirSegmentRef(Key: ns2:typeRef)
     ns3:AirSegmentSellFailureInfo(AirSegmentError: ns3:AirSegmentError[])
     ns3:AirSegmentTicketingModifiers(AirSegmentRef: ns2:typeRef, BrandTier: ns2:StringLength1to10)
     ns3:AirSolution(SearchTraveler: ns3:SearchTraveler[], AirSegment: ns3:typeBaseAirSegment[], HostToken: ns2:HostToken[], FareBasis: ns3:FareBasis[])
     ns3:AirSolutionChangedInfo(AirPricingSolution: ns3:AirPricingSolution, ReasonCode: ns3:ReasonCode)
     ns3:AirTicketingModifiers(DocumentModifiers: ns3:DocumentModifiers, AirPricingInfoRef: ns3:AirPricingInfoRef[], TourCode: ns3:TourCode, TicketEndorsement: ns3:TicketEndorsement[], Commission: ns2:Commission, FormOfPayment: ns2:FormOfPayment[], CreditCardAuth: ns2:CreditCardAuth[], Payment: ns2:Payment[], PlatingCarrier: ns2:typeCarrier, TicketedFareOverride: xsd:boolean, SuppressTaxAndFee: xsd:boolean, NoComparisonSFQ: xsd:boolean)
     ns3:Alliance(Code: xsd:string)
     ns3:AlternateLocationDistance(Distance: ns2:Distance, Key: ns2:typeRef, SearchLocation: ns2:typeIATACode, AlternateLocation: ns2:typeIATACode)
     ns3:AlternateLocationDistanceList(AlternateLocationDistance: ns3:AlternateLocationDistance[])
     ns3:AlternateLocationDistanceRef(Key: ns2:typeRef)
     ns3:AlternateRoute(Leg: ns3:Leg[], Key: ns2:typeRef)
     ns3:AlternateRouteList(AlternateRoute: ns3:AlternateRoute[])
     ns3:ApplicableSegment(ns3:typeApplicableSegment)
     ns3:AssociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, SegmentRef: ns2:typeRef)
     ns3:AsyncProviderSpecificResponse(ns2:BaseAsyncProviderSpecificResponse)
     ns3:AuditData(TaxInfo: ns2:typeTaxInfo[], Key: ns2:typeRef, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney)
     ns3:AutoPricingInfo(AirSegmentRef: ns3:AirSegmentRef[], BookingTravelerRef: ns2:BookingTravelerRef[], AirPricingModifiers: ns3:AirPricingModifiers, AirSegmentPricingModifiers: ns3:AirSegmentPricingModifiers[], Key: ns2:typeRef, PricingType: ns3:PricingType, PlatingCarrier: ns2:typeCarrier, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:AutoSeatAssignment(SegmentRef: ns2:typeRef, Smoking: xsd:boolean, SeatType: ns2:typeReqSeat, Group: xsd:boolean, BookingTravelerRef: ns2:typeRef)
     ns3:AvailabilityErrorInfo(Code: xsd:string, Service: xsd:string, Type: xsd:string, Description: xsd:string, TransactionId: xsd:string, TraceId: xsd:string, CommandHistory: xsd:string, Auxdata: ns2:Auxdata, StackTrace: xsd:string, AirSegmentError: ns3:AirSegmentError[])
     ns3:AvailableDiscount(LoyaltyProgram: ns2:LoyaltyProgram[], Amount: ns2:typeMoney, Percent: ns2:typePercentageWithDecimal, Description: xsd:string, DiscountQualifier: xsd:string)
     ns3:AvailableSSR(SSR: ns2:SSR[], SSRRules: ns2:ServiceRuleType[], IndustryStandardSSR: ns2:IndustryStandardSSR[])
     ns3:BackOfficeHandOff(Type: ns3:typeBackOffice, Location: xsd:string, PseudoCityCode: ns2:typePCC)
     ns3:BagDetails(BaggageRestriction: ns3:BaggageRestriction[], AvailableDiscount: ns3:AvailableDiscount[], ApplicableBags: xsd:string, BasePrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, TotalPrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney)
     ns3:BaggageAllowance(NumberOfPieces: xsd:integer, MaxWeight: ns3:typeWeight)
     ns3:BaggageAllowanceInfo(URLInfo: ns3:URLInfo[], TextInfo: ns3:TextInfo[], BagDetails: ns3:BagDetails[], Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, Carrier: ns2:typeCarrier, TravelerType: ns2:typePTC, FareInfoRef: ns2:typeRef)
     ns3:BaggageAllowances(BaggageAllowanceInfo: ns3:BaggageAllowanceInfo[], CarryOnAllowanceInfo: ns3:CarryOnAllowanceInfo[], EmbargoInfo: ns3:BaseBaggageAllowanceInfo[])
     ns3:BaggageRestriction(Dimension: ns3:Dimension[], MaxWeight: ns3:typeUnitOfMeasure[], TextInfo: ns3:TextInfo[])
     ns3:BillingDetailItem(Name: ns3:typeBillingDetailsName, DataType: ns3:typeBillingDetailsDataType, MinLength: xsd:string, MaxLength: xsd:string, Value: xsd:string)
     ns3:BookingCode(Code: ns2:typeClassOfService)
     ns3:BookingCodeInfo(CabinClass: xsd:string, BookingCounts: xsd:string)
     ns3:BookingInfo(BookingCode: xsd:string, BookingCount: xsd:string, CabinClass: xsd:string, FareInfoRef: ns2:typeRef, SegmentRef: ns2:typeRef, CouponRef: ns2:typeRef, AirItinerarySolutionRef: ns2:typeRef, HostTokenRef: ns2:typeRef)
     ns3:BookingRules(BookingRulesFareReference: ns3:BookingRulesFareReference[], RuleInfo: {ChargesRules: ns3:ChargesRules}[], Restriction: ns3:Restriction[], DocumentRequired: ns3:DocumentRequired[], GenderDobRequired: xsd:boolean)
     ns3:BookingRulesFareReference(xsd:string, ClassOfService: ns2:typeClassOfService, TicketDesignatorCode: ns3:typeTicketDesignator, AccountCode: xsd:string, UpgrageAllowed: xsd:boolean, UpgradeClassOfService: ns2:typeClassOfService)
     ns3:Brand(Title: ns3:typeTextElement[], Text: ns3:typeTextElement[], ImageLocation: ns3:ImageLocation[], OptionalServices: ns3:OptionalServices, Rules: ns3:Rules[], ServiceAssociations: ns3:ServiceAssociations, UpsellBrand: ns3:UpsellBrand, ApplicableSegment: ns3:typeApplicableSegment[], DefaultBrandDetail: ns3:typeDefaultBrandDetail[], Key: ns2:typeRef, BrandID: ns3:typeBrandId, Name: xsd:string, AirItineraryDetailsRef: ns2:typeRef, UpSellBrandID: ns3:typeBrandId, BrandFound: xsd:boolean, UpSellBrandFound: xsd:boolean, BrandedDetailsAvailable: xsd:boolean, Carrier: ns2:typeCarrier, BrandTier: ns2:StringLength1to10, BrandMaintained: ns2:StringLength1to99)
     ns3:BrandID(Id: xsd:string)
     ns3:BrandInfo(Key: ns2:typeRef, BrandID: ns3:typeBrandId, AirPricingInfoRef: ns2:typeRef, FareInfoRef: ns2:typeRef)
     ns3:BrandModifiers(({FareFamilyDisplay: {ModifierType: xsd:string}} | {BasicDetailsOnly: {ReturnBasicDetails: xsd:boolean}}))
     ns3:BrandingInfo(PriceRange: ns3:PriceRange[], Text: ns3:typeTextElement[], Title: ns3:typeTextElement[], ImageLocation: ns3:ImageLocation[], ServiceGroup: ns3:ServiceGroup, AirSegmentRef: ns2:typeSegmentRef[], Key: ns2:typeRef, ServiceSubCode: xsd:string, ExternalServiceName: xsd:string, ServiceType: xsd:string, CommercialName: xsd:string, Chargeable: xsd:string)
     ns3:BundledService(Carrier: ns2:typeCarrier, CarrierSubCode: xsd:boolean, ServiceType: xsd:string, ServiceSubCode: xsd:string, Name: xsd:string, Booking: ns3:Booking, Occurrence: xsd:positiveInteger)
     ns3:BundledServices(BundledService: ns3:BundledService[])
     ns3:CO2Emission(AirSegmentRef: ns2:typeRef, Value: xsd:float)
     ns3:CO2Emissions(CO2Emission: ns3:CO2Emission[], TotalValue: xsd:float, Unit: ns2:StringLength1to64, Category: ns2:StringLength1to64, Source: ns2:StringLength1to64)
     ns3:CarrierCode(ns2:typeCarrier)
     ns3:CarrierList(CarrierCode: ns3:CarrierCode[], IncludeCarrier: xsd:boolean)
     ns3:CarryOnAllowanceInfo(URLInfo: ns3:URLInfo[], TextInfo: ns3:TextInfo[], CarryOnDetails: {BaggageRestriction: ns3:BaggageRestriction[], ApplicableCarryOnBags: xsd:string, BasePrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, TotalPrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney}[], Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, Carrier: ns2:typeCarrier)
     ns3:Characteristic(Value: xsd:string, Position: ns3:typePosition, RowLocation: ns3:typeRowLocation, PADISCode: ns2:StringLength1to99)
     ns3:ChargesRules(VoluntaryChanges: {Penalty: ns3:Penalty, VolChangeInd: xsd:boolean}[], VoluntaryRefunds: {Penalty: ns3:Penalty, VolChangeInd: xsd:boolean}[])
     ns3:CodeshareInfo(xsd:string, OperatingCarrier: ns2:typeCarrier, OperatingFlightNumber: ns2:typeFlightNumber)
     ns3:CompanyName(SupplierCode: ns2:typeCarrier)
     ns3:ConjunctedTicketInfo(Number: xsd:string, Status: ns2:typeTicketStatus)
     ns3:Connection(FareNote: ns3:FareNote, ChangeOfPlane: xsd:boolean, ChangeOfTerminal: xsd:boolean, ChangeOfAirport: xsd:boolean, StopOver: xsd:boolean, MinConnectionTime: xsd:int, Duration: xsd:int, SegmentIndex: xsd:int, FlightDetailsIndex: xsd:int, IncludeStopOverToFareQuote: ns3:typeIgnoreStopOver)
     ns3:ContractCode(Code: ns3:Code, CompanyName: xsd:string, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode)
     ns3:Coupon(TicketDesignator: ns3:TicketDesignator[], Key: ns2:typeRef, CouponNumber: xsd:integer, OperatingCarrier: ns2:typeCarrier, OperatingFlightNumber: ns2:typeFlightNumber, MarketingCarrier: ns2:typeCarrier, MarketingFlightNumber: ns2:typeFlightNumber, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string, StopoverCode: xsd:boolean, BookingClass: ns3:BookingClass, FareBasis: xsd:string, NotValidBefore: xsd:date, NotValidAfter: xsd:date, Status: ns3:Status, SegmentGroup: xsd:integer, MarriageGroup: xsd:integer, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:CreditSummary(CurrencyCode: ns2:typeCurrency, CurrentBalance: xsd:decimal, InitialCredit: xsd:decimal)
     ns3:CustomerReceiptInfo(BookingTravelerRef: ns2:typeRef, EmailRef: ns2:typeRef)
     ns3:CustomerSearch()
     ns3:DefaultBrandDetail(ns3:typeDefaultBrandDetail)
     ns3:DestinationPurposeCode(Destination: ns3:typeDestinationCode, Purpose: ns3:typePurposeCode)
     ns3:DetailedBillingInformation(FormOfPaymentRef: ns2:FormOfPaymentRef, AirPricingInfoRef: ns3:AirPricingInfoRef[], BillingDetailItem: ns3:BillingDetailItem[])
     ns3:Dimension(ns3:typeUnitOfMeasure, Value: xsd:float, Unit: xsd:string, type: xsd:string)
     ns3:Document(Sequence: xsd:positiveInteger, Type: xsd:string, Level: xsd:string)
     ns3:DocumentInfo(TicketInfo: ns3:TicketInfo[], MCOInfo: ns2:MCOInformation[], TCRInfo: ns3:TCRInfo[])
     ns3:DocumentModifiers(GenerateItineraryInvoice: xsd:boolean, GenerateAccountingInterface: xsd:boolean)
     ns3:DocumentOptions(PassengerReceiptOverride: ns3:PassengerReceiptOverride, OverrideOption: ns3:typeOverrideOption[], SuppressItineraryRemarks: xsd:boolean, GenerateItinNumbers: xsd:boolean)
     ns3:DocumentRequired(DocType: xsd:string, IncludeExcludeUseInd: xsd:boolean, DocId: xsd:string, AllowedIds: xsd:string)
     ns3:DocumentSelect(BackOfficeHandOff: ns3:BackOfficeHandOff, Itinerary: ns3:Itinerary, IssueTicketOnly: xsd:boolean, IssueElectronicTicket: xsd:boolean, FaxIndicator: xsd:boolean)
     ns3:EMD(FulfillmentType: ns3:FulfillmentType, FulfillmentTypeDescription: xsd:string, AssociatedItem: xsd:string, AvailabilityChargeIndicator: ns3:AvailabilityChargeIndicator, RefundReissueIndicator: ns3:RefundReissueIndicator, Commissionable: ns3:Commissionable, MileageIndicator: ns3:MileageIndicator, Location: ns3:Location, Date: ns3:Date, Booking: ns3:Booking, DisplayCategory: ns3:DisplayCategory, Reusable: xsd:boolean)
     ns3:EMDCommission(Type: ns2:typeAdjustmentType, Value: xsd:decimal, CurrencyCode: ns2:typeCurrency)
     ns3:EMDCoupon(Number: xsd:integer, Status: xsd:string, SvcDescription: xsd:string, ConsumedAtIssuanceInd: xsd:boolean, RFIC: ns3:RFIC, RFISC: ns3:RFISC, RFIDescription: ns3:RFIDescription, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, FlightNumber: ns2:typeFlightNumber, PresentTo: ns3:PresentTo, PresentAt: ns3:PresentAt, NonRefundableInd: xsd:boolean, MarketingCarrier: ns2:typeCarrier, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:EMDEndorsement(ns3:EMDEndorsement)
     ns3:EMDInfo(EMDTravelerInfo: ns3:EMDTravelerInfo, SupplierLocator: ns2:SupplierLocator[], ElectronicMiscDocument: ns3:ElectronicMiscDocument[], Payment: ns2:Payment, FormOfPayment: ns2:FormOfPayment, EMDPricingInfo: ns3:EMDPricingInfo, EMDEndorsement: ns3:EMDEndorsement[], FareCalc: xsd:string, EMDCommission: ns3:EMDCommission, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:EMDPricingInfo(TaxInfo: ns2:typeTaxInfo[], BaseFare: ns2:typeMoney, TotalFare: ns2:typeMoney, TotalTax: ns2:typeMoney, EquivFare: ns2:typeMoney)
     ns3:EMDSummary(EMDCoupon: ns3:EMDCoupon[], Number: ns3:typeEMDNumber, PrimaryDocumentIndicator: xsd:boolean, InConjunctionWith: ns3:typeEMDNumber, AssociatedTicketNumber: ns2:typeTicketNumber, PlatingCarrier: ns2:typeCarrier, IssueDate: xsd:dateTime, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:EMDSummaryInfo(EMDSummary: ns3:EMDSummary[], EMDTravelerInfo: ns3:EMDTravelerInfo, Payment: ns2:Payment, ProviderReservationInfoRef: ns2:typeRef, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:EMDTravelerInfo(NameInfo: {Prefix: ns2:Prefix, First: ns2:First, Middle: ns2:Middle, Last: ns2:typeTravelerLastName, Suffix: ns2:Suffix}, TravelerType: ns2:typePTC, Age: xsd:integer)
     ns3:ETR(AirReservationLocatorCode: ns3:AirReservationLocatorCode, AgencyInfo: ns2:AgencyInfo, BookingTraveler: ns2:BookingTraveler, FormOfPayment: ns2:FormOfPayment[], Payment: ns2:Payment[], CreditCardAuth: ns2:CreditCardAuth[], SupplierLocator: ns2:SupplierLocator[], FareCalc: xsd:string, Ticket: ns3:Ticket[], Commission: ns2:Commission[], AirPricingInfo: ns3:AirPricingInfo, AuditData: ns3:AuditData, Restriction: ns2:Restriction[], WaiverCode: ns3:WaiverCode, BaggageAllowances: ns3:BaggageAllowances, Key: ns2:typeRef, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, Refundable: xsd:boolean, Exchangeable: xsd:boolean, TourCode: ns3:typeTourCode, IssuedDate: xsd:string, BulkTicket: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, IATANumber: ns2:typeIATA, PseudoCityCode: ns2:typePCC, PlatingCarrier: ns2:typeCarrier, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:ElectronicMiscDocument(EMDCoupon: ns3:EMDCoupon[], Number: ns3:typeEMDNumber, PrimaryDocumentIndicator: xsd:boolean, InConjunctionWith: ns3:typeEMDNumber, AssociatedTicketNumber: ns2:typeTicketNumber, PlatingCarrier: ns2:typeCarrier, IssueDate: xsd:dateTime, Status: xsd:string, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:Embargo(Key: ns2:typeRef, Carrier: ns2:typeCarrier, SegmentRef: ns2:typeRef, Name: ns3:Name, Text: xsd:string, SecondaryType: xsd:string, Type: ns2:typeMerchandisingService, Url: xsd:anyURI, ServiceSubCode: ns3:ServiceSubCode)
     ns3:EmbargoInfo(ns3:BaseBaggageAllowanceInfo)
     ns3:EmbargoList(Embargo: ns3:Embargo[])
     ns3:Enumeration(SolutionGroup: ns3:SolutionGroup[])
     ns3:ExchangeAirSegment(AirSegment: ns3:typeBaseAirSegment, CabinClass: ns2:CabinClass, FareBasisCode: xsd:string)
     ns3:ExchangeEligibilityInfo(ExchangePenaltyInfo: ns3:ExchangePenaltyInfo[], EligibleFares: xsd:string, RefundableFares: xsd:string, PassedAutomationChecks: xsd:boolean)
     ns3:ExchangePenaltyInfo(PenaltyInformation: ns3:PenaltyInformation[], PTC: ns2:typePTC, MinimumChangeFee: ns2:typeMoney, MaximumChangeFee: ns2:typeMoney)
     ns3:ExchangedTicketInfo(Number: ns2:typeTicketNumber)
     ns3:ExcludeTicketing(BookingTravelerRef: ns2:typeRef[])
     ns3:ExemptOBFee(SubCode: ns3:typeSubCode[])
     ns3:ExemptTaxes(CountryCode: ns2:typeCountry[], TaxCategory: xsd:string[], AllTaxes: xsd:boolean, TaxTerritory: ns3:TaxTerritory, CompanyName: ns3:CompanyName)
     ns3:ExpertSolution(LegPrice: ns3:LegPrice[], Key: ns2:typeRef, TotalPrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, CreatedDate: xsd:date)
     ns3:ExpertSolutionList(ExpertSolution: ns3:ExpertSolution[])
     ns3:Facility(Characteristic: ns3:Characteristic[], Remark: ns2:Remark[], PassengerSeatPrice: ns3:PassengerSeatPrice[], TaxInfo: ns2:typeTaxInfo[], EMD: ns3:EMD, ServiceData: ns2:ServiceData[], TourCode: ns3:TourCode, Type: ns3:typeFacility, SeatCode: xsd:string, Availability: ns3:typeSeatAvailability, SeatPrice: ns2:typeMoney, Paid: xsd:boolean, ServiceSubCode: ns3:ServiceSubCode, SSRCode: ns2:typeSSRCode, IssuanceReason: ns3:IssuanceReason, BaseSeatPrice: ns2:typeMoney, Taxes: ns2:typeMoney, Quantity: xsd:integer, SequenceNumber: xsd:integer, InclusiveOfTax: xsd:boolean, InterlineSettlementAllowed: xsd:boolean, GeographySpecification: xsd:string, Source: xsd:string, OptionalServiceRef: ns2:typeRef, SeatInformationRef: ns2:typeRef)
     ns3:FareBasis(Code: xsd:string, SegmentRef: ns2:typeRef)
     ns3:FareCalc(xsd:string)
     ns3:FareDetails(FareTicketDesignator: ns3:FareTicketDesignator, Key: ns2:typeRef, PassengerDetailRef: ns2:typeRef, FareBasis: ns2:typeFareBasisCode)
     ns3:FareDetailsRef(Key: ns2:typeRef)
     ns3:FareDisplay(FareDisplayRule: ns3:FareDisplayRule, FarePricing: ns3:FarePricing[], FareRestriction: ns3:FareRestriction[], FareRoutingInformation: xsd:string, FareMileageInformation: xsd:string, AirFareDisplayRuleKey: ns3:AirFareDisplayRuleKey, BookingCode: ns3:BookingCode[], AccountCode: ns2:AccountCode[], AddlBookingCodeInformation: ns3:AddlBookingCodeInformation, FareRuleFailureInfo: ns3:FareRuleFailureInfo, PriceChange: ns3:PriceChangeType[], Carrier: ns2:typeCarrier, FareBasis: xsd:string, Amount: ns2:typeMoney, TripType: ns3:typeFareTripType, FareTypeCode: ns3:typeFareTypeCode, SpecialFare: xsd:boolean, InstantPurchase: xsd:boolean, EligibilityRestricted: xsd:boolean, FlightRestricted: xsd:boolean, StopoversRestricted: xsd:boolean, TransfersRestricted: xsd:boolean, BlackoutsExist: xsd:boolean, AccompaniedTravel: xsd:boolean, MileOrRouteBasedFare: ns3:typeMileOrRouteBasedFare, GlobalIndicator: ns3:typeATPCOGlobalIndicator, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, FareTicketingCode: xsd:string, FareTicketingDesignator: ns3:typeTicketDesignator)
     ns3:FareDisplayRule(RuleAdvancedPurchase: ns3:RuleAdvancedPurchase, RuleLengthOfStay: ns3:RuleLengthOfStay, RuleCharges: ns3:RuleCharges, RuleNumber: xsd:string, Source: xsd:string, TariffNumber: xsd:string)
     ns3:FareGuaranteeInfo(GuaranteeDate: xsd:date, GuaranteeType: ns3:typeFareGuarantee)
     ns3:FareInfo(FareTicketDesignator: ns3:FareTicketDesignator[], FareSurcharge: ns3:FareSurcharge[], AccountCode: ns2:AccountCode[], ContractCode: ns3:ContractCode[], Endorsement: ns2:Endorsement[], BaggageAllowance: ns3:BaggageAllowance, FareRuleKey: ns3:FareRuleKey, FareRuleFailureInfo: ns3:FareRuleFailureInfo, FareRemarkRef: ns3:FareRemarkRef[], Brand: ns3:Brand, Commission: ns2:Commission, FareAttributes: xsd:string, ChangePenalty: ns3:typeFarePenalty, CancelPenalty: ns3:typeFarePenalty, FareRulesFilter: ns3:FareRulesFilter, Key: ns2:typeRef, FareBasis: xsd:string, PassengerTypeCode: ns2:typePTC, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, EffectiveDate: xsd:string, TravelDate: xsd:date, DepartureDate: xsd:date, Amount: ns2:typeMoney, PrivateFare: ns3:typePrivateFare, NegotiatedFare: xsd:boolean, TourCode: ns3:typeTourCode, WaiverCode: xsd:string, NotValidBefore: xsd:date, NotValidAfter: xsd:date, PseudoCityCode: ns2:typePCC, FareFamily: ns2:typeFareFamily, PromotionalFare: xsd:boolean, CarCode: ns3:typeCarCode, ValueCode: ns3:typeValueCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, BulkTicket: xsd:boolean, InclusiveTour: xsd:boolean, Value: xsd:string, SupplierCode: ns2:typeSupplierCode, TaxAmount: ns2:typeMoney)
     ns3:FareInfoList(FareInfo: ns3:FareInfo[])
     ns3:FareInfoMessage(xsd:string, Key: ns2:typeRef)
     ns3:FareInfoRef(Key: ns2:typeRef)
     ns3:FareMileageInformation(xsd:string)
     ns3:FareNote(xsd:string, Key: ns2:typeRef, Precedence: xsd:integer, NoteName: xsd:string, FareInfoMessageRef: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:FareNoteList(FareNote: ns3:FareNote[])
     ns3:FareNoteRef(Key: ns2:typeRef)
     ns3:FarePricing(PassengerType: ns2:typePTC, TotalFareAmount: ns2:typeMoney, PrivateFare: xsd:boolean, NegotiatedFare: xsd:boolean, AutoPriceable: xsd:boolean, TotalNetFareAmount: ns2:typeMoney, BaseFare: ns2:typeMoney, Taxes: ns2:typeMoney, MMid: ns2:typeRef)
     ns3:FareRemark(Text: xsd:string[], URL: ns3:URL[], Key: ns2:typeRef, Name: xsd:string)
     ns3:FareRemarkList(FareRemark: ns3:FareRemark[])
     ns3:FareRemarkRef(Key: ns2:typeRef)
     ns3:FareRestriction(FareRestrictionDaysOfWeek: ns3:FareRestrictionDaysOfWeek[], FareRestrictionDate: ns3:FareRestrictionDate[], FareRestrictionSaleDate: ns3:FareRestrictionSaleDate, FareRestrictiontype: ns3:typeFareRestrictionType)
     ns3:FareRestrictionDate(Direction: ns3:typeFareDirectionality, StartDate: xsd:string, EndDate: xsd:string, EndDateIndicator: ns3:EndDateIndicator)
     ns3:FareRestrictionDaysOfWeek(Direction: ns3:typeFareDirectionality, TripType: ns3:typeFareTripType, Monday: xsd:boolean, Tuesday: xsd:boolean, Wednesday: xsd:boolean, Thursday: xsd:boolean, Friday: xsd:boolean, Saturday: xsd:boolean, Sunday: xsd:boolean)
     ns3:FareRestrictionSaleDate(StartDate: xsd:date, EndDate: xsd:date)
     ns3:FareRoutingInformation(xsd:string)
     ns3:FareRule(FareRuleLong: ns3:FareRuleLong[], FareRuleShort: ns3:FareRuleShort[], RuleAdvancedPurchase: ns3:RuleAdvancedPurchase, RuleLengthOfStay: ns3:RuleLengthOfStay, RuleCharges: ns3:RuleCharges, FareRuleResultMessage: ns2:typeResultMessage[], FareInfoRef: xsd:string, RuleNumber: xsd:string, Source: xsd:string, TariffNumber: xsd:string, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode)
     ns3:FareRuleCategory(Category: ns3:Category)
     ns3:FareRuleFailureInfo(Reason: ns3:typeFareRuleFailureInfoReason[])
     ns3:FareRuleKey(ns2:typeNonBlanks, FareInfoRef: xsd:string, ProviderCode: ns2:typeProviderCode)
     ns3:FareRuleLong(xsd:string, Category: xsd:integer, Type: xsd:string)
     ns3:FareRuleLongRef(Key: ns2:typeRef)
     ns3:FareRuleLookup(AccountCode: ns2:AccountCode, PointOfSale: ns2:PointOfSale, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, Carrier: ns2:typeCarrier, FareBasis: xsd:string, ProviderCode: ns2:typeProviderCode, DepartureDate: xsd:date, TicketingDate: xsd:date)
     ns3:FareRuleNameValue(Name: xsd:string, Value: xsd:string)
     ns3:FareRuleShort(FareRuleNameValue: ns3:FareRuleNameValue[], Category: xsd:integer, TableNumber: xsd:string)
     ns3:FareRuleShortRef(Key: ns2:typeRef)
     ns3:FareRulesFilter(Refundability: {Value: ns3:typeRefundabilityValue}, LatestTicketingTime: xsd:dateTime, CHG: ns3:CHGType, MIN: ns3:MINType, MAX: ns3:MAXType, ADV: ns3:ADVType, OTH: ns3:OTHType)
     ns3:FareRulesFilterCategory(CategoryCode: ns3:typeFareRuleCategoryCode[])
     ns3:FareStatus(FareStatusFailureInfo: ns3:FareStatusFailureInfo, Code: ns3:typeFareStatusCode)
     ns3:FareStatusFailureInfo(Code: xsd:string, Reason: xsd:string)
     ns3:FareSurcharge(Key: ns2:typeRef, Type: xsd:string, Amount: ns2:typeMoney, SegmentRef: ns2:typeRef, CouponRef: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:FareTicketDesignator(Value: ns3:typeTicketDesignator)
     ns3:FareType(Code: ns3:typeFareTypeCode)
     ns3:FaxDetails(PhoneNumber: ns2:PhoneNumber, TermConditions: ns3:TermConditions, Remark: ns2:Remark[], IncludeCoverSheet: xsd:boolean, To: xsd:string, From: xsd:string, DeptBillingCode: xsd:string, InvoiceNumber: xsd:string)
     ns3:FaxDetailsInformation(AirPricingInfoRef: ns3:AirPricingInfoRef[], FaxDetails: ns3:FaxDetails)
     ns3:FeeApplication(ns3:typeFeeApplication, Code: ns3:Code)
     ns3:FeeInfo(ns2:typeFeeInfo)
     ns3:FlexExploreModifiers(Destination: ns2:typeIATACode[], Type: ns3:Type, Radius: xsd:integer, GroupName: ns3:GroupName)
     ns3:FlightDetails(Connection: ns3:Connection, Meals: ns3:typeMealService[], InFlightServices: xsd:string[], Key: ns2:typeRef, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string, FlightTime: xsd:integer, TravelTime: xsd:integer, Distance: xsd:integer, Equipment: ns3:typeEquipment, OnTimePerformance: xsd:integer, OriginTerminal: xsd:string, DestinationTerminal: xsd:string, GroundTime: xsd:integer, AutomatedCheckin: xsd:boolean, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:FlightDetailsList(FlightDetails: ns3:FlightDetails[])
     ns3:FlightDetailsRef(Key: ns2:typeRef)
     ns3:FlightInfo(FlightInfoDetail: ns3:FlightInfoDetail[], FlightInfoErrorMessage: ns2:typeResultMessage[], CriteriaKey: ns2:typeRef, Carrier: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureDate: xsd:date, ClassOfService: ns2:typeClassOfService)
     ns3:FlightInfoCriteria(Key: ns2:typeRef, Carrier: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureDate: xsd:date, ClassOfService: ns2:typeClassOfService)
     ns3:FlightInfoDetail(CodeshareInfo: ns3:CodeshareInfo, Meals: ns3:typeMealService[], InFlightServices: xsd:string[], Variance: ns3:Variance[], Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, ScheduledDepartureTime: xsd:string, ScheduledArrivalTime: xsd:string, TravelTime: xsd:integer, ETicketability: ns3:typeEticketability, Equipment: ns3:typeEquipment, OriginTerminal: xsd:string, OriginGate: ns3:OriginGate, DestinationTerminal: xsd:string, DestinationGate: ns3:DestinationGate, AutomatedCheckin: xsd:boolean)
     ns3:FlightOption(Option: ns3:Option[], LegRef: ns2:typeRef, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode)
     ns3:FlightOptionsList(FlightOption: ns3:FlightOption[])
     ns3:FlightTimeDetail(DaysOfOperation: ns3:typeDaysOfOperation, Connection: ns3:Connection, Key: ns2:typeRef, VendorCode: xsd:string, FlightNumber: ns2:typeFlightNumber, Origin: ns2:typeAirport, Destination: ns2:typeAirport, DepartureTime: xsd:time, ArrivalTime: xsd:time, StopCount: xsd:integer, Equipment: ns3:typeEquipment, ScheduleStartDate: xsd:date, ScheduleEndDate: xsd:date, DisplayOption: xsd:boolean, OnTimePerformance: xsd:integer, DayChange: xsd:integer, JourneyTime: xsd:integer, FlightTime: xsd:integer, StartTerminal: xsd:string, EndTerminal: xsd:string, FirstIntermediateStop: ns2:typeIATACode, LastIntermediateStop: ns2:typeIATACode, InsideAvailability: ns3:InsideAvailability, SecureSell: ns3:SecureSell, AvailabilitySource: ns3:typeAvailabilitySource)
     ns3:FlightTimeTableCriteria(({GeneralTimeTable: ns3:GeneralTimeTable} | {SpecificTimeTable: ns3:SpecificTimeTable}))
     ns3:FlightType(RequireSingleCarrier: xsd:boolean, MaxConnections: ns3:MaxConnections, MaxStops: ns3:MaxStops, NonStopDirects: xsd:boolean, StopDirects: xsd:boolean, SingleOnlineCon: xsd:boolean, DoubleOnlineCon: xsd:boolean, TripleOnlineCon: xsd:boolean, SingleInterlineCon: xsd:boolean, DoubleInterlineCon: xsd:boolean, TripleInterlineCon: xsd:boolean)
     ns3:GeneralTimeTable(DaysOfOperation: ns3:typeDaysOfOperation, FlightOrigin: ns2:typeLocation, FlightDestination: ns2:typeLocation, CarrierList: ns3:CarrierList, StartDate: xsd:string, EndDate: xsd:string, StartTime: xsd:time, EndTime: xsd:time, IncludeConnection: xsd:boolean)
     ns3:GroupedOption(OptionalServiceRef: ns2:typeRef)
     ns3:GroupedOptionInfo(({GroupedOption: ns3:GroupedOption[]}))
     ns3:HostReservation(Carrier: ns2:typeCarrier, CarrierLocatorCode: ns2:typeLocatorCode, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, UniversalLocatorCode: ns2:typeLocatorCode, ETicket: xsd:boolean)
     ns3:HostTokenList(HostToken: ns2:HostToken[])
     ns3:ImageLocation(xsd:string, Type: xsd:string, ImageWidth: xsd:nonNegativeInteger, ImageHeight: xsd:nonNegativeInteger)
     ns3:InFlightServices(xsd:string)
     ns3:IncludeAddlBookingCodeInfo(Type: ns3:typeCarrierCode, SecondaryCarrier: ns2:typeCarrier)
     ns3:InvoluntaryChange(TicketEndorsement: ns3:TicketEndorsement)
     ns3:IssuanceModifiers(({FormOfPaymentRef: ns2:FormOfPaymentRef} | {FormOfPayment: ns2:FormOfPayment}), CustomerReceiptInfo: ns3:CustomerReceiptInfo, EMDEndorsement: ns3:EMDEndorsement, EMDCommission: ns3:EMDCommission, PlatingCarrier: ns2:typeCarrier)
     ns3:Itinerary(Type: ns3:typeItinerary, Option: ns3:typeItineraryOption, SeparateIndicator: xsd:boolean)
     ns3:Journey(AirSegmentRef: ns3:AirSegmentRef[], TravelTime: xsd:duration)
     ns3:JourneyData(AirSegment: ns3:typeBaseAirSegment[])
     ns3:LandCharges(Tax: ns3:Tax[], Base: ns2:typeMoney, Total: ns2:typeMoney, Miscellaneous: ns2:typeMoney, PrePaid: ns2:typeMoney, Deposit: ns2:typeMoney)
     ns3:LanguageOption(Language: ns2:typeLanguage, Country: ns2:typeCountry)
     ns3:Leg(LegDetail: ns3:LegDetail[], Key: ns2:typeRef, Group: xsd:int, Origin: ns2:typeRailLocationCode, Destination: ns2:typeRailLocationCode)
     ns3:LegDetail(Key: ns2:typeRef, OriginAirport: ns2:typeIATACode, DestinationAirport: ns2:typeIATACode, Carrier: ns2:typeCarrier, TravelDate: xsd:string, FlightNumber: ns2:typeFlightNumber)
     ns3:LegPrice(LegDetail: ns3:LegDetail[], Key: ns2:typeRef, TotalPrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney)
     ns3:LegRef(Key: ns2:typeRef)
     ns3:LoyaltyCardDetails(SupplierCode: ns2:typeCarrier, PriorityCode: ns2:typePriorityCode)
     ns3:ManualFareAdjustment(AppliedOn: ns2:typeAdjustmentTarget, AdjustmentType: ns2:typeAdjustmentType, Value: xsd:decimal, PassengerRef: ns2:typeRef, TicketDesignator: ns3:typeTicketDesignator, FareType: ns3:typeFareTypeCode)
     ns3:Meals(ns3:typeMealService)
     ns3:MerchandisingAvailabilityDetails(AirItineraryDetails: ns3:AirItineraryDetails, AccountCode: ns2:AccountCode)
     ns3:MerchandisingDetails(AirItineraryDetails: ns3:AirItineraryDetails[], AccountCode: ns2:AccountCode[])
     ns3:MerchandisingPricingModifiers(AccountCode: ns2:AccountCode[])
     ns3:MultiGDSSearchIndicator(Type: xsd:string, ProviderCode: ns2:typeProviderCode, DefaultProvider: xsd:boolean, PrivateFareCode: xsd:string, PrivateFareCodeOnly: xsd:boolean)
     ns3:OfferAvailabilityModifiers(ServiceType: ns2:typeMerchandisingService[], Carrier: ns2:typeCarrier[], CurrencyType: ns2:typeCurrency)
     ns3:Option(BookingInfo: ns3:BookingInfo[], Connection: ns3:Connection[], Key: ns2:typeRef, TravelTime: xsd:duration)
     ns3:OptionalService(ServiceData: ns2:ServiceData[], ServiceInfo: ns2:ServiceInfo, Remark: ns2:Remark[], TaxInfo: ns2:typeTaxInfo[], FeeInfo: ns2:typeFeeInfo[], EMD: ns3:EMD, BundledServices: ns3:BundledServices, AdditionalInfo: ns3:AdditionalInfo[], FeeApplication: ns3:FeeApplication, Text: ns3:typeTextElement[], PriceRange: ns3:PriceRange[], TourCode: ns3:TourCode, BrandingInfo: ns3:BrandingInfo, Title: ns3:typeTextElement[], ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, OptionalServicesRuleRef: ns2:typeRef, Type: ns2:typeMerchandisingService, Confirmation: xsd:string, SecondaryType: xsd:string, PurchaseWindow: ns2:typePurchaseWindow, Priority: xsd:integer, Available: xsd:boolean, Entitled: xsd:boolean, PerTraveler: xsd:boolean, CreateDate: xsd:dateTime, PaymentRef: ns2:typeRef, ServiceStatus: xsd:string, Quantity: xsd:integer, SequenceNumber: xsd:integer, ServiceSubCode: ns3:ServiceSubCode, SSRCode: ns2:typeSSRCode, IssuanceReason: ns3:IssuanceReason, ProviderDefinedType: ns3:ProviderDefinedType, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, Key: ns2:typeRef, AssessIndicator: ns3:typeAssessIndicator, Mileage: xsd:integer, ApplicableFFLevel: ns3:ApplicableFFLevel, Private: xsd:boolean, SSRFreeText: ns2:typeSSRFreeText, IsPricingApproximate: xsd:boolean, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, Chargeable: xsd:string, InclusiveOfTax: xsd:boolean, InterlineSettlementAllowed: xsd:boolean, GeographySpecification: xsd:string, ExcessWeightRate: xsd:string, Source: xsd:string, ViewableOnly: xsd:boolean, DisplayText: xsd:string, WeightInExcess: xsd:string, TotalWeight: xsd:string, BaggageUnitPrice: ns2:typeMoney, FirstPiece: xsd:int, LastPiece: xsd:int, Restricted: xsd:boolean, IsRepriceRequired: xsd:boolean, BookedQuantity: xsd:string, Group: xsd:string, PseudoCityCode: ns2:typePCC, Tag: ns3:Tag, DisplayOrder: ns3:DisplayOrder)
     ns3:OptionalServiceModifier(Type: ns2:typeMerchandisingService, SecondaryType: ns2:typeMerchandisingService, SupplierCode: ns2:typeSupplierCode, ServiceSubCode: xsd:string, TravelDate: xsd:date, Description: xsd:string)
     ns3:OptionalServiceModifiers(OptionalServiceModifier: ns3:OptionalServiceModifier[])
     ns3:OptionalServiceRef(ns2:typeRef)
     ns3:OptionalServices(OptionalServicesTotal: {TaxInfo: ns2:typeTaxInfo[], FeeInfo: ns2:typeFeeInfo[], TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney}, OptionalService: ns3:OptionalService[], GroupedOptionInfo: ns3:GroupedOptionInfo[], OptionalServiceRules: ns2:ServiceRuleType[])
     ns3:OptionalServicesInfo(AirPricingSolution: ns3:AirPricingSolution, FormOfPayment: ns2:FormOfPayment[], FormOfPaymentRef: ns2:FormOfPaymentRef[])
     ns3:OriginalItineraryDetails(ItineraryType: ns2:typeItineraryCode, BulkTicket: xsd:boolean, TicketingPCC: ns2:typePCC, TicketingIATA: ns2:typeIATA, TicketingCountry: ns2:typeCountry, TourCode: ns3:typeTourCode, TicketingDate: xsd:date)
     ns3:OverrideCode(ns3:OverrideCode)
     ns3:PCC(OverridePCC: ns2:OverridePCC, PointOfSale: ns2:PointOfSale[], TicketAgency: ns3:TicketAgency)
     ns3:PassengerDetails(LoyaltyCardDetails: ns3:LoyaltyCardDetails[], Key: ns2:typeRef, Code: ns2:typePTC, Age: xsd:integer)
     ns3:PassengerDetailsRef(Key: ns2:typeRef)
     ns3:PassengerReceiptOverride(ns2:typeNonBlanks)
     ns3:PassengerSeatPrice(BookingTravelerRef: ns2:typeRef, Amount: ns2:typeMoney)
     ns3:PassengerTicketNumber(TicketNumber: ns3:typePassengerTicketNumber, BookingTravelerRef: ns2:typeRef)
     ns3:PassengerType(Name: ns2:Name, LoyaltyCard: ns2:LoyaltyCard[], DiscountCard: ns2:DiscountCard[], PersonalGeography: ns2:PersonalGeography, FareGuaranteeInfo: ns3:FareGuaranteeInfo, Code: ns2:typePTC, Age: xsd:integer, DOB: xsd:date, Gender: ns2:typeGender, PricePTCOnly: xsd:boolean, BookingTravelerRef: xsd:string, AccompaniedPassenger: xsd:boolean, ResidencyType: ns2:typeResidency)
     ns3:PaymentRef(Key: ns2:typeRef)
     ns3:Penalty(Amount: ns2:typeMoney, PenaltyType: xsd:string)
     ns3:PenaltyFareInformation(PenaltyInfo: ns3:typeFarePenalty, ProhibitPenaltyFares: xsd:boolean)
     ns3:PenaltyInformation(xsd:string, Carrier: ns2:typeCarrier, FareBasis: xsd:string, FareComponent: xsd:integer, PriceableUnit: xsd:integer, BoardPoint: ns2:typeIATACode, OffPoint: ns2:typeIATACode, MinimumChangeFee: ns2:typeMoney, MaximumChangeFee: ns2:typeMoney, FiledCurrency: ns2:typeCurrency, ConversionRate: xsd:decimal, Refundable: xsd:boolean, ChangeFeeApplicationCode: ns3:ChangeFeeApplicationCode)
     ns3:PermittedCabins(CabinClass: ns2:CabinClass[])
     ns3:PermittedCarriers(Carrier: ns2:Carrier[])
     ns3:PersonName(First: ns2:StringLength1to64, Last: ns2:StringLength1to64, Prefix: ns2:StringLength1to16)
     ns3:PersonNameSearch(Last: ns2:StringLength1to64)
     ns3:PocketItineraryRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, SegmentRef: ns2:typeRef)
     ns3:PolicyCodesList(PolicyCode: ns2:typePolicyCode[])
     ns3:PrePayAccount(CreditSummary: ns3:CreditSummary, PrePayPriceInfo: ns3:PrePayPriceInfo, ProgramTitle: xsd:string, CertificateNumber: xsd:string, ProgramName: xsd:string, EffectiveDate: xsd:date, ExpireDate: xsd:date)
     ns3:PrePayCustomer(PersonName: ns3:PersonName, Email: ns2:Email[], Address: ns2:typeStructuredAddress[], RelatedTraveler: ns3:RelatedTraveler[], LoyaltyCard: ns2:LoyaltyCard[])
     ns3:PrePayId(CompanyName: ns3:CompanyName, Id: ns2:typeCardNumber, Type: xsd:string)
     ns3:PrePayPriceInfo(TaxInfo: ns2:typeTaxInfo[], BaseFare: ns2:typeMoney, TotalFare: ns2:typeMoney, TotalTax: ns2:typeMoney)
     ns3:PrePayProfileInfo(PrePayId: ns3:PrePayId, PrePayCustomer: ns3:PrePayCustomer, PrePayAccount: ns3:PrePayAccount, Affiliations: ns3:Affiliations, AccountRelatedRules: ns3:AccountRelatedRules, StatusCode: xsd:string, CreatorID: ns2:typeCardNumber)
     ns3:PreferredBookingCodes(BookingCode: ns3:BookingCode[])
     ns3:PreferredCabins(CabinClass: ns2:CabinClass)
     ns3:PreferredCarriers(Carrier: ns2:Carrier[])
     ns3:PriceRange(DefaultCurrency: xsd:boolean, StartPrice: ns2:typeMoney, EndPrice: ns2:typeMoney)
     ns3:PricingDetails(AdvisoryMessage: xsd:string[], EndorsementText: xsd:string[], WaiverText: xsd:string, LowFarePricing: xsd:boolean, LowFareFound: xsd:boolean, PenaltyApplies: xsd:boolean, DiscountApplies: xsd:boolean, ItineraryType: ns2:typeItineraryCode, ValidatingVendorCode: ns2:typeCarrier, ForTicketingOnDate: xsd:date, LastDateToTicket: xsd:date, FormOfRefund: ns2:typeFormOfRefund, AccountCode: xsd:string, BankersSellingRate: xsd:decimal, PricingType: ns2:typePricingType, ConversionRate: xsd:decimal, RateOfExchange: xsd:decimal, OriginalTicketCurrency: ns2:typeCurrency)
     ns3:PrintBlankFormItinerary(IncludeDescription: xsd:boolean, IncludeHeader: xsd:boolean)
     ns3:ProhibitedCabins(CabinClass: ns2:CabinClass[])
     ns3:ProhibitedCarriers(Carrier: ns2:Carrier[])
     ns3:PromoCode(Code: ns3:Code, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode)
     ns3:RailCoachDetails(RailCoachNumber: xsd:string, AvailableRailSeats: xsd:string, RailSeatMapAvailability: xsd:boolean)
     ns3:RefundFailureInfo(({TicketNumber: ns2:StringLength1to13, Name: ns2:Name} | {TCRNumber: ns3:typeTCRNumber}), BookingTravelerRef: ns2:typeRef[], Code: xsd:integer, Message: xsd:string)
     ns3:RelatedTraveler(LoyaltyCard: ns2:LoyaltyCard[], PersonName: ns3:PersonName, CreditsUsed: {UsedCredit: xsd:decimal, CurrencyCode: ns2:typeCurrency}, StatusCode: xsd:string, Relation: xsd:string)
     ns3:RepricingModifiers(PrivateFareOptions: ns3:PrivateFareOptions, FareType: ns3:FareType[], FareTicketDesignator: ns3:FareTicketDesignator, OverrideCurrency: {CurrencyCode: ns2:typeCurrency, CountryCode: ns2:typeCountry}, AirSegmentPricingModifiers: ns3:AirSegmentPricingModifiers[], WithholdTaxCode: ns3:WithholdTaxCode[], PriceClassOfService: ns2:typePriceClassOfService, CreateDate: xsd:date, ReissueLocCityCode: ns2:typeCity, ReissueLocCountryCode: ns2:typeCountry, BulkTicket: xsd:boolean, AccountCode: xsd:string, PenaltyAsTaxCode: ns3:PenaltyAsTaxCode, AirPricingSolutionRef: ns2:typeRef, PenaltyToFare: xsd:boolean, PricePTCOnly: xsd:boolean, BrandDetails: xsd:boolean, BrandModifier: xsd:string, JetServiceOnly: xsd:boolean, TimeWindow: ns3:TimeWindow, FlightType: ns3:FlightType, MultiAirportSearch: xsd:boolean, ConnectionPoint: ns2:typeIATACode)
     ns3:Restriction(DaysOfWeekRestriction: {Mon: xsd:boolean, Tue: xsd:boolean, Wed: xsd:boolean, Thu: xsd:boolean, Fri: xsd:boolean, Sat: xsd:boolean, Sun: xsd:boolean, RestrictionExistsInd: xsd:boolean, Application: xsd:string, IncludeExcludeUseInd: xsd:boolean}[], RestrictionPassengerTypes: {MaxNbrTravelers: xsd:string, TotalNbrPTC: xsd:string}[])
     ns3:Route(Leg: ns3:Leg[], Key: ns2:typeRef)
     ns3:RouteList(Route: ns3:Route[])
     ns3:RoutingRules(Routing: {DirectionInfo: {LocationCode: ns2:typeIATACode, Direction: ns3:Direction}[], RoutingConstructedInd: xsd:boolean, Number: xsd:string, RoutingRestriction: xsd:string}[])
     ns3:Row(Facility: ns3:Facility[], Characteristic: ns3:Characteristic[], Number: xsd:integer, SearchTravelerRef: ns2:typeRef)
     ns3:Rows(Row: ns3:Row[], SegmentRef: ns2:typeRef)
     ns3:RuleAdvancedPurchase(ReservationLatestPeriod: xsd:string, ReservationLatestUnit: ns3:typeStayUnit, TicketingEarliestDate: xsd:string, TicketingLatestDate: xsd:string, MoreRulesPresent: xsd:boolean)
     ns3:RuleCharges(PenaltyType: xsd:string, DepartureStatus: xsd:string, Amount: ns2:typeMoney, Percent: xsd:decimal, MoreRulesPresent: xsd:boolean)
     ns3:RuleLengthOfStay(MinimumStay: ns3:typeRestrictionLengthOfStay, MaximumStay: ns3:typeRestrictionLengthOfStay)
     ns3:Rules(RulesText: xsd:string)
     ns3:SearchAirLeg(SearchOrigin: ns2:typeSearchLocation[], SearchDestination: ns2:typeSearchLocation[], ({SearchDepTime: ns2:typeFlexibleTimeSpec[]} | {SearchArvTime: ns2:typeTimeSpec[]}), AirLegModifiers: ns3:AirLegModifiers)
     ns3:SearchTraveler(Name: ns2:Name, LoyaltyCard: ns2:LoyaltyCard[], DiscountCard: ns2:DiscountCard[], PersonalGeography: ns2:PersonalGeography, AirSeatAssignment: ns2:AirSeatAssignment[], Code: ns2:typePTC, Age: xsd:integer, DOB: xsd:date, Gender: ns2:typeGender, PricePTCOnly: xsd:boolean, BookingTravelerRef: xsd:string, AccompaniedPassenger: xsd:boolean, ResidencyType: ns2:typeResidency, Key: ns2:typeRef)
     ns3:SeatInformation(Power: xsd:string, Video: xsd:string, Type: xsd:string, Description: xsd:string, Rating: {xsd:string, Number: xsd:integer}, Key: ns2:typeRef)
     ns3:SegmentIndex(xsd:int)
     ns3:SegmentModifiers(AirSegmentRef: ns3:AirSegmentRef, TicketValidity: ns3:TicketValidity, BaggageAllowance: ns3:BaggageAllowance, TicketDesignator: ns3:typeTicketDesignator)
     ns3:SegmentSelect(AirSegmentRef: ns3:typeSegmentRef[], HotelReservationRef: ns3:typeNonAirReservationRef[], VehicleReservationRef: ns3:typeNonAirReservationRef[], PassiveSegmentRef: ns3:typeSegmentRef[], AllConfirmedAir: xsd:boolean, AllWaitlistedAir: xsd:boolean, AllHotel: xsd:boolean, AllVehicle: xsd:boolean, AllPassive: xsd:boolean)
     ns3:SelectionModifiers(AirSegmentRef: ns3:AirSegmentRef[], SvcSegmentRef: ns2:typeRef[], SupplierCode: ns2:typeCarrier, RFIC: ns3:RFIC)
     ns3:ServiceAssociations(ApplicableSegment: {({ResponseMessage: ns2:ResponseMessage} | {OptionalServiceRef: ns2:typeRef}), Key: ns2:typeRef}[])
     ns3:ServiceGroup(ServiceSubGroup: ns3:ServiceSubGroup[], Code: xsd:string)
     ns3:ServiceSubGroup(Code: xsd:string)
     ns3:SolutionGroup(PermittedAccountCodes: {AccountCode: ns2:AccountCode[]}, PreferredAccountCodes: {AccountCode: ns2:AccountCode[]}, ProhibitedAccountCodes: {AccountCode: ns2:AccountCode[]}, PermittedPointOfSales: {PointOfSale: ns2:PointOfSale[]}, ProhibitedPointOfSales: {PointOfSale: ns2:PointOfSale[]}, Count: xsd:integer, TripType: ns3:typeTripType, Diversification: ns3:typeDiversity, Tag: ns3:Tag, Primary: xsd:boolean)
     ns3:SpecificSeatAssignment(BookingTravelerRef: ns2:typeRef, SegmentRef: ns2:typeRef, FlightDetailRef: ns2:typeRef, SeatId: xsd:string, RailCoachNumber: ns3:RailCoachNumber)
     ns3:SpecificTimeTable(FlightOrigin: {Airport: ns2:Airport}, FlightDestination: {Airport: ns2:Airport}, StartDate: xsd:string, Carrier: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber)
     ns3:SplitTicketingSearch(RoundTrip: xsd:integer)
     ns3:SponsoredFltInfo(SponsoredLNB: xsd:nonNegativeInteger, NeutralLNB: xsd:nonNegativeInteger, FltKey: ns3:FltKey)
     ns3:SvcSegment(Key: ns2:typeRef, Carrier: ns2:typeCarrier, Status: xsd:string, NumberOfItems: xsd:integer, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, StartDate: xsd:date, TravelOrder: xsd:integer, BookingTravelerRef: ns2:typeRef, RFIC: xsd:string, RFISC: xsd:string, SvcDescription: xsd:string, Fee: ns2:typeMoney, EMDNumber: ns3:typeEMDNumber)
     ns3:TCR(FormOfPayment: ns2:FormOfPayment[], Payment: ns2:Payment[], BookingTraveler: ns2:BookingTraveler[], PassengerTicketNumber: ns3:PassengerTicketNumber[], AirPricingInfo: ns3:AirPricingInfo[], AgencyInfo: ns2:AgencyInfo, AirReservationLocatorCode: ns3:AirReservationLocatorCode, SupplierLocator: ns2:SupplierLocator[], RefundRemark: ns2:RefundRemark[], TCRNumber: ns3:typeTCRNumber, Status: ns3:typeTCRStatus, ModifiedDate: xsd:string, ConfirmedDate: xsd:string, BasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Refundable: xsd:boolean, Exchangeable: xsd:boolean, Voidable: xsd:boolean, Modifiable: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, RefundAccessCode: ns3:RefundAccessCode, RefundAmount: ns2:typeMoney, RefundFee: ns2:typeMoney, ForfeitAmount: ns2:typeMoney)
     ns3:TCRExchangeBundle(AirExchangeInfo: ns2:AirExchangeInfo, AirPricingInfoRef: ns3:AirPricingInfoRef[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns2:typeTaxInfo[], Penalty: ns2:Penalty[], TCRNumber: ns3:typeTCRNumber)
     ns3:TCRInfo(Status: ns3:typeTCRStatus, Date: xsd:dateTime, TCRNumber: ns3:typeTCRNumber, ProviderReservationInfoRef: ns2:typeRef)
     ns3:TCRRefundBundle(AirRefundInfo: ns3:AirRefundInfo, WaiverCode: ns3:WaiverCode, AirSegment: ns3:typeBaseAirSegment[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns2:typeTaxInfo[], HostToken: ns2:HostToken[], TCRNumber: ns3:typeTCRNumber, RefundType: ns3:RefundType, RefundAccessCode: ns3:RefundAccessCode)
     ns3:Tax(Category: xsd:string, Amount: ns2:typeMoney)
     ns3:TaxInfo(ns2:typeTaxInfo)
     ns3:TermConditions(LanguageOption: ns3:LanguageOption[], IncludeTermConditions: xsd:boolean)
     ns3:Text(ns3:typeTextElement)
     ns3:TextInfo(Text: ns2:typeGeneralText[], Title: xsd:string)
     ns3:Ticket(Coupon: ns3:Coupon[], TicketEndorsement: ns3:TicketEndorsement[], TourCode: ns3:TourCode[], ExchangedTicketInfo: ns3:ExchangedTicketInfo[], Key: ns2:typeRef, TicketNumber: ns2:typeTicketNumber, TicketStatus: ns2:typeTicketStatus, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:TicketAgency(ProviderCode: xsd:anyType, PseudoCityCode: xsd:anyType)
     ns3:TicketDesignator(Value: ns3:typeTicketDesignator)
     ns3:TicketEndorsement(Value: ns2:typeEndorsement)
     ns3:TicketFailureInfo(AirPricingInfoRef: ns3:AirPricingInfoRef[], Name: ns2:Name, Code: xsd:integer, Message: xsd:string, BookingTravelerRef: ns2:typeRef)
     ns3:TicketInfo(Name: ns2:Name, ConjunctedTicketInfo: ns3:ConjunctedTicketInfo[], ExchangedTicketInfo: ns3:ExchangedTicketInfo[], Number: xsd:string, Status: ns2:typeTicketStatus, BulkTicket: xsd:boolean, BookingTravelerRef: ns2:typeRef, AirPricingInfoRef: ns2:typeRef)
     ns3:TicketValidity(NotValidBefore: xsd:date, NotValidAfter: xsd:date)
     ns3:TicketingModifiers(BookingTravelerRef: ns2:typeRef[], NetRemit: ns3:typeTicketModifierAmountType, NetFare: ns3:typeTicketModifierAmountType, ActualSellingFare: ns3:typeTicketModifierAmountType, InvoiceFare: ns3:typeTicketModifierAccountingType, CorporateDiscount: ns3:typeTicketModifierAccountingType, AccountingInfo: ns3:typeTicketModifierAccountingType, BulkTicket: {ns3:typeBulkTicketModifierType, SuppressOnFareCalc: xsd:boolean, NonRefundable: xsd:boolean}, GroupTour: ns3:typeBulkTicketModifierType, Commission: ns2:Commission, TourCode: ns3:TourCode, TicketEndorsement: ns3:TicketEndorsement[], ValueModifier: ns3:typeTicketModifierValueType, DocumentSelect: ns3:DocumentSelect, DocumentOptions: ns3:DocumentOptions, SegmentSelect: ns3:SegmentSelect, SegmentModifiers: ns3:SegmentModifiers[], SupplierLocator: ns2:SupplierLocator, DestinationPurposeCode: ns3:DestinationPurposeCode, LanguageOption: ns3:LanguageOption[], LandCharges: ns3:LandCharges, PrintBlankFormItinerary: ns3:PrintBlankFormItinerary, ExcludeTicketing: ns3:ExcludeTicketing, ExemptOBFee: ns3:ExemptOBFee, IsPrimaryDI: xsd:boolean, DocumentInstructionNumber: xsd:integer, Reference: ns2:StringLength1to30, Status: ns3:Status, FreeText: ns3:FreeText, PlatingCarrier: ns2:typeCarrier, ExemptVAT: xsd:boolean, NetRemitApplied: xsd:boolean, FreeTicket: xsd:boolean, CurrencyOverrideCode: ns3:CurrencyOverrideCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns3:TicketingModifiersRef(Key: ns2:typeRef)
     ns3:Title(ns3:typeTextElement)
     ns3:TourCode(Value: ns3:typeTourCode)
     ns3:TravelArranger(xsd:string, CompanyShortName: xsd:string, Code: xsd:string)
     ns3:URL(xsd:string, Type: xsd:string)
     ns3:URLInfo(Text: ns2:typeGeneralText[], URL: xsd:anyURI[])
     ns3:UpsellBrand(FareBasis: xsd:string, FareInfoRef: xsd:string)
     ns3:Variance(Type: ns3:typeVarianceType, Time: xsd:string, Indicator: ns3:typeVarianceIndicator, Reason: xsd:string)
     ns3:VoidDocumentInfo(DocumentNumber: ns2:StringLength1to13, DocumentType: ns2:DocumentType)
     ns3:VoidFailureInfo(xsd:string, TicketNumber: xsd:string, Code: xsd:integer)
     ns3:VoidResultInfo(FailureRemark: xsd:string, DocumentNumber: ns2:StringLength1to13, DocumentType: ns2:DocumentType, ResultType: xsd:string)
     ns3:WaiverCode(TourCode: ns3:typeTourCode, TicketDesignator: ns3:typeTicketDesignator, Endorsement: ns3:Endorsement)
     ns3:Yield(Amount: ns2:typeMoney, BookingTravelerRef: ns2:typeRef)
     ns2:APIProvider(TransactionType: ns2:TransactionType, AvailablePseudoCityCode: {PseudoCityCode: ns2:typePCC}[], ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, IATACode: ns2:typeIATA)
     ns2:ARCPayment(ARCIdentifier: ns2:ARCIdentifier, ARCPassword: ns2:ARCPassword)
     ns2:AccountCode(Code: ns2:Code, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, Type: xsd:string)
     ns2:AccountInformation(Address: ns2:typeStructuredAddress, PhoneNumber: ns2:PhoneNumber[], AccountName: xsd:string)
     ns2:AccountingRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], Key: ns2:typeRef, Category: ns2:Category, TypeInGds: ns2:typeGdsAccountingRemark, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, UseProviderNativeMode: xsd:boolean, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:ActionStatus(Remark: ns2:Remark, Type: ns2:Type, TicketDate: xsd:string, Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, QueueCategory: ns2:typeNonBlanks, AirportCode: ns2:typeAirport, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, PseudoCityCode: ns2:typePCC, AccountCode: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:AddSvc(RFIC: xsd:string, RFISC: xsd:string, SvcDescription: xsd:string, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, StartDate: xsd:date)
     ns2:AddressRestriction(RequiredField: ns2:RequiredField[])
     ns2:AgencyContactInfo(PhoneNumber: ns2:PhoneNumber[], Key: ns2:typeRef)
     ns2:AgencyInfo(AgentAction: ns2:AgentAction[])
     ns2:AgencyInformation(Address: ns2:typeStructuredAddress, Email: ns2:Email[], PhoneNumber: ns2:PhoneNumber[])
     ns2:AgencyPayment(ns2:typeAgencyPayment)
     ns2:AgencySellInfo(IataCode: ns2:typeIATA, Country: ns2:typeCountry, CurrencyCode: ns2:typeCurrency, ProviderCode: ns2:typeProviderCode, PseudoCityCode: ns2:typePCC, CityCode: ns2:typeIATACode)
     ns2:AgentAction(ActionType: ns2:ActionType, AgentCode: xsd:string, BranchCode: ns2:typeBranchCode, AgencyCode: xsd:string, AgentSine: xsd:string, EventTime: xsd:dateTime, AgentOverride: ns2:AgentOverride)
     ns2:AgentIDOverride(SupplierCode: ns2:typeSupplierCode, ProviderCode: ns2:typeProviderCode, AgentID: ns2:AgentID)
     ns2:AgentVoucher(Number: xsd:string)
     ns2:AirExchangeInfo(TotalPenaltyTaxInfo: {PenaltyTaxInfo: ns2:typeTax[], TotalPenaltyTax: ns2:typeMoney}, PaidTax: ns2:typeTax[], TicketFeeInfo: {Base: ns2:typeMoney, Tax: ns2:typeMoney, Total: ns2:typeMoney}[], Reason: xsd:string[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns2:typeTaxInfo[], ExchangeAmount: ns2:typeMoney, BaseFare: ns2:typeMoney, EquivalentBaseFare: ns2:typeMoney, Taxes: ns2:typeMoney, ChangeFee: ns2:typeMoney, ForfeitAmount: ns2:typeMoney, Refundable: xsd:boolean, Exchangeable: xsd:boolean, FirstClassUpgrade: xsd:boolean, TicketByDate: xsd:string, PricingTag: xsd:string, EquivalentChangeFee: ns2:typeMoney, EquivalentExchangeAmount: ns2:typeMoney, AddCollection: ns2:typeMoney, ResidualValue: ns2:typeMoney, TotalResidualValue: ns2:typeMoney, OriginalFlightValue: ns2:typeMoney, FlownSegmentValue: ns2:typeMoney, BulkTicketAdvisory: xsd:boolean, FarePull: ns2:typeFarePull, PassengerTypeCode: ns2:typePTC, PassengerCount: xsd:integer, FormOfRefund: ns2:typeFormOfRefund, Refund: ns2:typeMoney)
     ns2:AirSearchParameters(NoAdvancePurchase: xsd:boolean, RefundableFares: xsd:boolean, NonPenaltyFares: xsd:boolean, UnRestrictedFares: xsd:boolean)
     ns2:AirSeatAssignment(ns2:SeatAssignment, Key: ns2:typeRef, Status: ns2:typeStatusCode, Seat: xsd:string, SeatTypeCode: ns2:typeSeatTypeCode, SegmentRef: ns2:typeRef, FlightDetailsRef: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, RailCoachNumber: xsd:string)
     ns2:Airport(ns2:Location, Code: ns2:typeIATACode)
     ns2:AppliedProfile(Key: ns2:typeRef, TravelerID: xsd:string, TravelerName: xsd:string, AccountID: xsd:string, AccountName: xsd:string, ImmediateParentID: xsd:string, ImmediateParentName: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:Auxdata(Entry: {Reason: xsd:string, Description: xsd:string}[])
     ns2:BSPPayment(BSPIdentifier: ns2:BSPIdentifier, BSPPassword: ns2:BSPPassword)
     ns2:BillingPointOfSaleInfo(OriginApplication: xsd:string, CIDBNumber: ns2:CIDBNumber)
     ns2:BookingDates(CheckInDate: ns2:typeDate, CheckOutDate: ns2:typeDate)
     ns2:BookingSource(Code: ns2:Code, Type: ns2:Type)
     ns2:BookingTraveler(BookingTravelerName: ns2:BookingTravelerName, DeliveryInfo: ns2:DeliveryInfo[], PhoneNumber: ns2:PhoneNumber[], Email: ns2:Email[], LoyaltyCard: ns2:LoyaltyCard[], DiscountCard: ns2:DiscountCard[], SSR: ns2:SSR[], NameRemark: ns2:NameRemark[], AirSeatAssignment: ns2:AirSeatAssignment[], RailSeatAssignment: ns2:RailSeatAssignment[], EmergencyInfo: xsd:string, Address: ns2:typeStructuredAddress[], DriversLicense: ns2:DriversLicense[], AppliedProfile: ns2:AppliedProfile[], CustomizedNameData: ns2:CustomizedNameData[], TravelComplianceData: ns2:TravelComplianceData[], TravelInfo: ns2:TravelInfo, Key: ns2:typeRef, TravelerType: ns2:typePTC, Age: xsd:integer, VIP: xsd:boolean, DOB: xsd:date, Gender: ns2:typeGender, Nationality: ns2:typeCountry, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, NameNumber: xsd:string)
     ns2:BookingTravelerInfo(BookingTravelerName: ns2:BookingTravelerName, NameRemark: ns2:NameRemark, DOB: xsd:date, ({TravelInfo: ns2:TravelInfo} | {Email: ns2:Email} | {PhoneNumber: ns2:PhoneNumber} | {Address: ns2:typeStructuredAddress} | {EmergencyInfo: xsd:string} | {DeliveryInfo: ns2:DeliveryInfo} | {Age: xsd:integer} | {CustomizedNameData: ns2:CustomizedNameData} | {AppliedProfile: ns2:AppliedProfile}), Key: ns2:typeRef, TravelerType: ns2:typePTC, Gender: ns2:typeGender)
     ns2:BookingTravelerInformation(Name: ns2:Name, BookingTravelerRef: ns2:typeRef)
     ns2:BookingTravelerName(Prefix: ns2:Prefix, First: ns2:First, Middle: ns2:Middle, Last: ns2:typeTravelerLastName, Suffix: ns2:Suffix)
     ns2:BookingTravelerRef(LoyaltyCardRef: ns2:LoyaltyCardRef[], DriversLicenseRef: ns2:DriversLicenseRef, DiscountCardRef: ns2:DiscountCardRef[], PaymentRef: ns2:PaymentRef[], Key: ns2:typeRef)
     ns2:CabinClass(Type: xsd:string)
     ns2:CardRestriction(RequiredField: ns2:RequiredField[], Code: ns2:typeCardMerchantType, Name: xsd:string)
     ns2:Carrier(Code: ns2:typeCarrier)
     ns2:Certificate(Number: xsd:string, Amount: ns2:typeMoney, DiscountAmount: ns2:typeMoney, DiscountPercentage: xsd:integer, NotValidBefore: xsd:date, NotValidAfter: xsd:date)
     ns2:Characteristic(SeatType: ns2:SeatType, SeatDescription: ns2:SeatDescription, SeatValue: ns2:SeatValue, SeatValueDescription: ns2:SeatValueDescription)
     ns2:Check(MICRNumber: ns2:MICRNumber, RoutingNumber: xsd:string, AccountNumber: xsd:string, CheckNumber: xsd:string)
     ns2:City(ns2:Location, Code: ns2:typeIATACode)
     ns2:CityOrAirport(ns2:Location, Code: ns2:typeIATACode, PreferCity: xsd:boolean)
     ns2:Commission(Key: ns2:typeRef, Level: ns2:typeCommissionLevel, Type: ns2:typeCommissionType, Modifier: ns2:typeCommissionModifier, Amount: ns2:typeMoney, Value: ns2:Value, Percentage: ns2:typePercentageWithDecimal, BookingTravelerRef: ns2:typeRef, CommissionOverride: xsd:boolean)
     ns2:CommissionRemark(({ProviderReservationLevel: {Amount: ns2:typeMoney, Percentage: ns2:typePercentageWithDecimal, CommissionCap: ns2:typeMoney}} | {PassengerTypeLevel: {TravelerType: ns2:typePTC, Amount: ns2:typeMoney, Percentage: ns2:typePercentageWithDecimal, CommissionCap: ns2:typeMoney}[]}), Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:ConnectionPoint(ns2:typeLocation)
     ns2:ConsolidatorRemark(PseudoCityCode: ns2:PseudoCityCode[], Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:ContinuityCheckOverride(ns2:typeNonBlanks, Key: ns2:typeRef)
     ns2:CoordinateLocation(ns2:Location, latitude: xsd:double, longitude: xsd:double)
     ns2:CorporateDiscountID(xsd:string, NegotiatedRateCode: xsd:boolean)
     ns2:Credentials(UserId: ns2:UserId)
     ns2:CreditCard(PhoneNumber: ns2:PhoneNumber, BillingAddress: ns2:typeStructuredAddress, Type: ns2:typeCardMerchantType, Number: ns2:typeCreditCardNumber, ExpDate: xsd:gYearMonth, Name: ns2:Name, CVV: ns2:CVV, ApprovalCode: ns2:ApprovalCode, ExtendedPayment: xsd:string, CustomerReference: xsd:string, AcceptanceOverride: xsd:boolean, ThirdPartyPayment: xsd:boolean, BankName: xsd:string, BankCountryCode: ns2:typeCountry, BankStateCode: ns2:typeState, Enett: xsd:boolean, ProfileID: xsd:string, Key: ns2:typeRef)
     ns2:CreditCardAuth(Key: ns2:typeRef, PaymentRef: ns2:typeRef, TransId: xsd:string, Number: ns2:typeCreditCardNumber, Amount: ns2:typeMoney, AuthCode: xsd:string, AuthResultCode: xsd:string, AVSResultCode: xsd:string, Message: xsd:string, ProviderReservationInfoRef: ns2:typeRef, FormOfPaymentRef: ns2:typeRef)
     ns2:CustomProfileInformation()
     ns2:CustomerID(xsd:string, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef)
     ns2:CustomizedNameData(xsd:string, Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef)
     ns2:DebitCard(PhoneNumber: ns2:PhoneNumber, BillingAddress: ns2:typeStructuredAddress, Type: ns2:typeCardMerchantType, Number: ns2:typeCreditCardNumber, ExpDate: xsd:gYearMonth, Name: ns2:Name, CVV: ns2:CVV, ApprovalCode: ns2:ApprovalCode, IssueNumber: ns2:IssueNumber, ProfileID: xsd:string, Key: ns2:typeRef)
     ns2:DeliveryInfo(ShippingAddress: {AddressName: ns2:AddressName, Street: ns2:Street[], City: ns2:City, State: ns2:State, PostalCode: ns2:PostalCode, Country: ns2:Country, ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean}, PhoneNumber: ns2:PhoneNumber, Email: ns2:Email, GeneralRemark: ns2:GeneralRemark[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Type: xsd:string, SignatureRequired: ns2:SignatureRequired, TrackingNumber: xsd:string)
     ns2:DirectPayment(Text: xsd:string)
     ns2:DiscountCard(Key: ns2:typeRef, Code: ns2:StringLength1to8, Description: ns2:StringLength1to255, Number: ns2:typeCardNumber, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:DiscountCardRef(Key: ns2:typeRef)
     ns2:Distance(Units: ns2:Units, Value: xsd:integer, Direction: ns2:Direction)
     ns2:DriversLicense(Key: ns2:typeRef, LicenseNumber: ns2:LicenseNumber, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:DriversLicenseRef(Key: ns2:typeRef)
     ns2:Email(ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Key: ns2:typeRef, Type: ns2:typeEmailType, Comment: ns2:typeEmailComment, EmailID: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:EmailNotification(EmailRef: ns2:typeRef[], Recipients: ns2:Recipients)
     ns2:Endorsement(Value: ns2:typeEndorsement)
     ns2:EnettVan(MinPercentage: ns2:typeIntegerPercentage, MaxPercentage: ns2:typeIntegerPercentage, ExpiryDays: ns2:typeDurationYearInDays, MultiUse: xsd:boolean)
     ns2:ErrorInfo(Code: xsd:string, Service: xsd:string, Type: xsd:string, Description: xsd:string, TransactionId: xsd:string, TraceId: xsd:string, CommandHistory: xsd:string, Auxdata: ns2:Auxdata, StackTrace: xsd:string)
     ns2:ExchangedCoupon(TicketNumber: ns2:typeTicketNumber, CouponNumber: xsd:string)
     ns2:FileFinishingInfo(ShopInformation: ns2:ShopInformation, PolicyInformation: ns2:PolicyInformation[], AccountInformation: ns2:AccountInformation, AgencyInformation: ns2:AgencyInformation, TravelerInformation: ns2:TravelerInformation[], CustomProfileInformation: ns2:CustomProfileInformation)
     ns2:FormOfPayment(({CreditCard: ns2:CreditCard} | {DebitCard: ns2:DebitCard} | {EnettVan: ns2:EnettVan} | {None: ({Certificate: ns2:Certificate} | {TicketNumber: ns2:StringLength1to13} | {Check: ns2:Check} | {Requisition: ns2:Requisition} | {MiscFormOfPayment: ns2:MiscFormOfPayment} | {AgencyPayment: ns2:typeAgencyPayment} | {UnitedNations: ns2:UnitedNations} | {DirectPayment: ns2:DirectPayment} | {AgentVoucher: ns2:AgentVoucher} | {PaymentAdvice: ns2:PaymentAdvice})}), ProviderReservationInfoRef: ns2:typeFormOfPaymentPNRReference[], SegmentRef: ns2:typeGeneralReference[], BSPPayment: ns2:BSPPayment, ARCPayment: ns2:ARCPayment, Key: ns2:typeRef, Type: ns2:Type, FulfillmentType: xsd:string, FulfillmentLocation: xsd:string, FulfillmentIDType: ns2:typeFulfillmentIDType, FulfillmentIDNumber: xsd:string, IsAgentType: xsd:boolean, AgentText: xsd:string, ReuseFOP: ns2:typeRef, ExternalReference: ns2:typeExternalReference, Reusable: xsd:boolean, ProfileID: xsd:string, ProfileKey: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:FormOfPaymentRef(Key: ns2:typeRef)
     ns2:GeneralRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], Key: ns2:typeRef, Category: ns2:Category, TypeInGds: ns2:typeGdsRemark, SupplierType: ns2:typeProduct, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, Direction: ns2:typeDirection, CreateDate: xsd:dateTime, UseProviderNativeMode: xsd:boolean, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:Group(Name: {ns2:typeNonBlanks}, DeliveryInfo: ns2:DeliveryInfo, PhoneNumber: ns2:PhoneNumber[], SSRRef: {Key: ns2:typeRef}[], Address: ns2:typeStructuredAddress, BookingTravelerRef: {Key: ns2:typeRef}[], Key: ns2:typeRef, TravelerType: ns2:typePTC, GroupSize: xsd:positiveInteger, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:Guarantee(({CreditCard: ns2:CreditCard} | {OtherGuaranteeInfo: ns2:OtherGuaranteeInfo}), Type: xsd:string, Key: ns2:typeRef, ReuseFOP: ns2:typeRef, ExternalReference: ns2:typeExternalReference, Reusable: xsd:boolean, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:GuaranteeType(ns2:typeGeneralText)
     ns2:HostToken(xsd:string, Host: ns2:typeProviderCode, Key: xsd:anyType, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:HostTokenList(HostToken: ns2:HostToken[])
     ns2:IncludedInBase(Amount: ns2:typeMoney)
     ns2:IndustryStandardSSR(Code: xsd:string)
     ns2:InvoiceData(BookingTravelerInformation: ns2:BookingTravelerInformation[], Key: ns2:typeRef, InvoiceNumber: xsd:string, IssueDate: xsd:dateTime, ProviderReservationInfoRef: ns2:typeRef)
     ns2:InvoiceRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ({AirSegmentRef: ns2:typeSegmentRef} | {HotelReservationRef: ns2:typeNonAirReservationRef} | {VehicleReservationRef: ns2:typeNonAirReservationRef} | {PassiveSegmentRef: ns2:typeSegmentRef}), ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:KeyMapping(ElementName: xsd:string, OriginalKey: xsd:string, NewKey: xsd:string)
     ns2:Keyword(SubKey: ns2:typeSubKey[], Text: xsd:string[], Name: ns2:Name, Number: xsd:anyType, Description: xsd:anyType)
     ns2:LinkedUniversalRecord(LocatorCode: ns2:typeLocatorCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:LocationAddress(ns2:typeStructuredAddress)
     ns2:LocatorCode(ns2:LocatorCode)
     ns2:LoyaltyCard(ProviderReservationSpecificInfo: ns2:typeProviderReservationSpecificInfo[], Key: ns2:typeRef, SupplierCode: ns2:typeCarrier, AllianceLevel: xsd:string, MembershipProgram: ns2:StringLength1to32, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, CardNumber: ns2:typeCardNumber, Status: xsd:string, MembershipStatus: xsd:string, FreeText: xsd:string, SupplierType: ns2:typeProduct, Level: ns2:Level, PriorityCode: ns2:typePriorityCode, VendorLocationRef: xsd:string)
     ns2:LoyaltyCardRef(Key: ns2:typeRef)
     ns2:LoyaltyProgram(Key: ns2:typeRef, SupplierCode: ns2:typeCarrier, AllianceLevel: xsd:string, MembershipProgram: ns2:StringLength1to32, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, Level: xsd:anyType)
     ns2:MCO(PassengerInfo: ns2:PassengerInfo[], FormOfPayment: ns2:FormOfPayment[], Endorsement: ns2:Endorsement, MCOExchangeInfo: ns2:MCOExchangeInfo, MCOFeeInfo: ns2:MCOFeeInfo, MCORemark: ns2:MCORemark[], MCOPriceData: ns2:MCOPriceData, StockControl: ns2:StockControl[], MCOText: ns2:MCOText[], MCONumber: xsd:string, Status: xsd:string, MCOType: xsd:string, TicketType: xsd:string, TicketNumber: xsd:string, MCOIssued: xsd:boolean, MCOIssueDate: xsd:dateTime, MCODocNum: xsd:string, IssueReasonCode: xsd:string, PlatingCarrier: ns2:typeCarrier, TourOperator: xsd:string, Location: xsd:string, TourCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, PseudoCityCode: ns2:typePCC, ExpiryDate: xsd:date)
     ns2:MCOExchangeInfo(FormOfPayment: ns2:FormOfPayment, ExchangedCoupon: ns2:ExchangedCoupon[], OriginalTicketNumber: ns2:typeTicketNumber, OriginalCityCode: ns2:typeCity, OriginalTicketDate: ns2:typeDate, IATACode: ns2:typeIATA)
     ns2:MCOFeeInfo(Amount: ns2:typeMoney, Percentage: ns2:typePercentageWithDecimal, FeeAppliesToInd: ns2:FeeAppliesToInd)
     ns2:MCOPriceData(TaxInfo: ns2:typeTaxInfo[], Commission: {Amount: ns2:typeMoney, Percentage: ns2:typePercentageWithDecimal}, MCOAmount: ns2:typeMoney, MCOEquivalentFare: ns2:typeMoney, MCOTotalAmount: ns2:typeMoney)
     ns2:MCORemark(xsd:string, AdditionalRmk: xsd:boolean)
     ns2:MCOText(xsd:string, Type: xsd:string)
     ns2:MarketingInformation(Text: xsd:anyType[])
     ns2:MealRequest(Type: ns2:Type)
     ns2:MediaItem(caption: xsd:string, height: xsd:nonNegativeInteger, width: xsd:nonNegativeInteger, type: xsd:string, url: xsd:anyURI, icon: xsd:anyURI, sizeCode: )
     ns2:MetaData(Key: ns2:Key, Value: ns2:Value)
     ns2:MiscFormOfPayment(CreditCardType: ns2:CreditCardType, CreditCardNumber: ns2:typeCreditCardNumber, ExpDate: xsd:gYearMonth, Text: xsd:string, Category: ns2:Category, AcceptanceOverride: xsd:boolean)
     ns2:Name(Prefix: ns2:Prefix, First: ns2:First, Middle: ns2:Middle, Last: ns2:Last, Suffix: ns2:Suffix, TravelerProfileId: ns2:typeProfileID)
     ns2:NameOverride(First: ns2:First, Last: ns2:Last, Age: xsd:integer)
     ns2:NameRemark(RemarkData: xsd:string, ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Key: ns2:typeRef, Category: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:NextResultReference(ns2:typeNonBlanks, ProviderCode: ns2:typeProviderCode)
     ns2:OSI(Key: ns2:typeRef, Carrier: ns2:typeCarrier, Code: ns2:Code, Text: ns2:Text, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:OperatedBy(ns2:typeNonBlanks)
     ns2:OtherGuaranteeInfo(xsd:string, Type: ns2:Type)
     ns2:OverridePCC(ProviderCode: ns2:typeProviderCode, PseudoCityCode: ns2:typePCC)
     ns2:OwnershipChange(OwningPCC: ns2:typeRef)
     ns2:PassengerInfo(Name: ns2:Name, BookingTravelerRef: ns2:typeRef, PassengerType: ns2:typePTC)
     ns2:PassiveInfo(TicketNumber: xsd:string[], ConfirmationNumber: xsd:string[], Commission: ns2:Commission, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string, SupplierCode: xsd:string, SupplierLocatorCode: xsd:string)
     ns2:Payment(Key: ns2:typeRef, Type: ns2:Type, FormOfPaymentRef: ns2:typeRef, BookingTravelerRef: ns2:typeRef, Amount: ns2:typeMoney, AmountType: ns2:StringLength1to32, ApproximateAmount: ns2:typeMoney, Status: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:PaymentAdvice(Type: ns2:Type, DocumentNumber: ns2:DocumentNumber, IssueDate: xsd:date, IssueCity: ns2:typeIATACode, OriginalFOP: ns2:OriginalFOP)
     ns2:PaymentRef(Key: ns2:typeRef)
     ns2:PaymentRestriction(CardRestriction: ns2:CardRestriction[], AddressRestriction: ns2:AddressRestriction)
     ns2:Penalty(CancelRefund: xsd:boolean, NonRefundable: xsd:boolean, NonExchangeable: xsd:boolean, CancelationPenalty: xsd:boolean, ReissuePenalty: xsd:boolean, NonReissuePenalty: xsd:boolean, TicketRefundPenalty: xsd:boolean, ChargeApplicable: xsd:boolean, ChargePortion: xsd:boolean, PenaltyAmount: ns2:typeMoney)
     ns2:PermittedProviders(Provider: ns2:Provider)
     ns2:PersonalGeography(({CountryCode: ns2:typeCountry} | {StateProvinceCode: ns2:typeState} | {CityCode: ns2:typeCity}))
     ns2:PhoneNumber(ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Key: ns2:typeRef, Type: ns2:Type, Location: ns2:Location, CountryCode: ns2:CountryCode, AreaCode: ns2:AreaCode, Number: ns2:Number, Extension: ns2:Extension, Text: ns2:Text, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:PointOfCommencement(CityOrAirportCode: ns2:typeIATACode, Time: xsd:string)
     ns2:PointOfSale(ProviderCode: ns2:typeProviderCode, PseudoCityCode: ns2:typePCC, Key: ns2:typeRef, IATA: ns2:typeIATA)
     ns2:PolicyInformation(ReasonCode: {OutOfPolicy: xsd:string, PurposeOfTrip: xsd:string, Remark: ns2:Remark}, Type: ns2:typePolicy, Name: xsd:anyType, OutOfPolicy: xsd:boolean, SegmentRef: ns2:typeRef)
     ns2:Postscript(xsd:string, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef)
     ns2:PriceMatchError(ErrorMessage: xsd:string, VendorCode: ns2:typeSupplierCode, HotelChain: ns2:typeHotelChainCode, HotelCode: ns2:typeHotelCode, ReqBase: xsd:decimal, RspBase: xsd:decimal, BaseDiff: xsd:decimal, ReqTotal: xsd:decimal, RspTotal: xsd:decimal, TotalDiff: xsd:decimal)
     ns2:Provider(Code: ns2:typeProviderCode)
     ns2:ProviderARNKSegment(PreviousSegment: {({AirSegmentRef: ns2:typeSegmentRef} | {HotelReservationRef: ns2:typeNonAirReservationRef} | {VehicleReservationRef: ns2:typeNonAirReservationRef} | {PassiveSegmentRef: ns2:typeSegmentRef})}, NextSegment: {({AirSegmentRef: ns2:typeSegmentRef} | {HotelReservationRef: ns2:typeNonAirReservationRef} | {VehicleReservationRef: ns2:typeNonAirReservationRef} | {PassiveSegmentRef: ns2:typeSegmentRef})}, Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, ProviderSegmentOrder: ns2:ProviderSegmentOrder)
     ns2:ProviderReservationDetail(ns2:typeProviderReservationDetail)
     ns2:ProviderReservationInfoRef(Key: ns2:typeRef)
     ns2:PseudoCityCode(ns2:typePCC)
     ns2:QueuePlace(PseudoCityCode: ns2:typePCC, QueueSelector: ns2:QueueSelector[])
     ns2:QueueSelector(Queue: xsd:string, Category: xsd:string, DateRange: xsd:string)
     ns2:RailLocation(ns2:Location, Code: ns2:typeRailLocationCode)
     ns2:RailSeatAssignment(Characteristic: ns2:Characteristic[], Key: ns2:typeRef, Status: ns2:typeStatusCode, Seat: xsd:string, RailSegmentRef: ns2:typeRef, CoachNumber: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:ReferencePoint(ns2:typeReferencePoint)
     ns2:RefundRemark(RemarkData: xsd:string)
     ns2:Remark(xsd:string, Key: ns2:typeRef)
     ns2:RequestKeyMappings(KeyMapping: ns2:KeyMapping[])
     ns2:RequiredField(Name: ns2:Name)
     ns2:Requisition(Number: xsd:string, Category: ns2:Category, Type: ns2:Type)
     ns2:ReservationName(({BookingTravelerRef: ns2:BookingTravelerRef} | {NameOverride: ns2:NameOverride}))
     ns2:ResponseMessage(xsd:string, Code: xsd:integer, Type: ns2:Type, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode)
     ns2:Restriction(Operation: xsd:string, Reason: xsd:string)
     ns2:ReviewBooking(Key: ns2:typeRef, Queue: ns2:Queue, QueueCategory: ns2:QueueCategory, DateTime: xsd:dateTime, PseudoCityCode: ns2:typePCC, ProviderCode: ns2:typeProviderCode, ProviderReservationInfoRef: ns2:typeRef, Remarks: ns2:Remarks, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:RoleInfo(Id: ns2:Id, Name: ns2:Name, Source: xsd:string, Description: ns2:Description)
     ns2:SSR(Key: ns2:typeRef, SegmentRef: ns2:typeRef, PassiveSegmentRef: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, Type: ns2:typeSSRCode, Status: xsd:string, FreeText: ns2:typeSSRFreeText, Carrier: ns2:typeCarrier, CarrierSpecificText: ns2:CarrierSpecificText, Description: xsd:string, ProviderDefinedType: ns2:ProviderDefinedType, SSRRuleRef: ns2:typeRef, URL: xsd:anyURI, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, ProfileID: xsd:string, ProfileSecureFlightDocKey: ns2:typeRef)
     ns2:SSRInfo(SSR: ns2:SSR, BookingTravelerRef: ns2:typeRef[])
     ns2:SearchEvent(ns2:typeTimeRange, EarliestTime: xsd:string, LatestTime: xsd:string, Type: ns2:typeEventType)
     ns2:SearchPassenger(Name: ns2:Name, LoyaltyCard: ns2:LoyaltyCard[], DiscountCard: ns2:DiscountCard[], PersonalGeography: ns2:PersonalGeography, Code: ns2:typePTC, Age: xsd:integer, DOB: xsd:date, Gender: ns2:typeGender, PricePTCOnly: xsd:boolean, BookingTravelerRef: xsd:string, AccompaniedPassenger: xsd:boolean, ResidencyType: ns2:typeResidency, Key: ns2:typeRef)
     ns2:SearchTicketing(TicketStatus: ns2:TicketStatus, ReservationStatus: ns2:ReservationStatus, TicketDate: xsd:date)
     ns2:SeatAttribute(Value: ns2:Value)
     ns2:SeatAttributes(SeatAttribute: ns2:SeatAttribute[])
     ns2:SegmentRemark(xsd:string, Key: ns2:typeRef)
     ns2:SellMessage(xsd:string)
     ns2:ServiceData(SeatAttributes: ns2:SeatAttributes, CabinClass: ns2:CabinClass, SSRRef: ns2:typeKeyBasedReference[], Data: xsd:string, AirSegmentRef: ns2:typeRef, BookingTravelerRef: ns2:typeRef, StopOver: xsd:boolean, TravelerType: ns2:typePTC, EMDSummaryRef: ns2:typeRef, EMDCouponRef: ns2:typeRef)
     ns2:ServiceFeeInfo(FormOfPayment: ns2:FormOfPayment, ServiceFeeTaxInfo: ns2:ServiceFeeTaxInfo[], CreditCardAuth: ns2:CreditCardAuth, Payment: ns2:Payment, Status: ns2:typeStatus, Description: xsd:string, Key: ns2:typeRef, Confirmation: xsd:string, TicketNumber: xsd:string, BookingTravelerRef: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, PassiveProviderReservationInfoRef: ns2:typeRef, TotalAmount: ns2:typeMoney, BaseAmount: ns2:typeMoney, Taxes: ns2:typeMoney, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, BookingTravelerName: xsd:string)
     ns2:ServiceFeeTaxInfo(Category: xsd:string, Amount: ns2:typeMoney)
     ns2:ServiceInfo(Description: xsd:string[], MediaItem: ns2:MediaItem[])
     ns2:ShopInformation(SearchRequest: {Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ClassOfService: ns2:typeClassOfService}[], FlightsOffered: {Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, TravelOrder: xsd:int, Carrier: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber, ClassOfService: ns2:typeClassOfService, StopOver: xsd:boolean, Connection: xsd:boolean}[], CabinShopped: xsd:string, CabinSelected: xsd:string, LowestFareOffered: ns2:typeMoney)
     ns2:SimpleName(xsd:string)
     ns2:SpecialEquipment(Key: ns2:typeRef, Type: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:State(xsd:string)
     ns2:StockControl(Type: xsd:string, Number: xsd:string)
     ns2:SupplierLocator(SegmentRef: ns2:typeGeneralReference[], SupplierCode: ns2:typeCarrier, SupplierLocatorCode: xsd:string, ProviderReservationInfoRef: ns2:typeRef, CreateDateTime: xsd:dateTime)
     ns2:TaxDetail(Amount: ns2:typeMoney, OriginAirport: ns2:typeAirport, DestinationAirport: ns2:typeAirport, CountryCode: xsd:string, FareInfoRef: ns2:typeRef)
     ns2:TerminalSessionInfo(xsd:string)
     ns2:ThirdPartyInformation(SegmentRef: ns2:typeGeneralReference[], ThirdPartyCode: ns2:ThirdPartyCode, ThirdPartyLocatorCode: ns2:ThirdPartyLocatorCode, ThirdPartyName: ns2:typeThirdPartySupplier, ProviderReservationInfoRef: ns2:typeRef, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:TicketNumber(ns2:StringLength1to13)
     ns2:TransactionType(Air: {ns2:typeBookingTransactionsAllowed, BookingEnabled: xsd:boolean, ShoppingEnabled: xsd:boolean, PricingEnabled: xsd:boolean, Tier: ns2:Tier, DaysEnabled: xsd:boolean, WeekendsEnabled: xsd:boolean, AirportsEnabled: xsd:boolean, ODEnabled: xsd:boolean, OneWayShop: xsd:boolean, FlexExplore: xsd:boolean, RapidRepriceEnabled: xsd:boolean, ReturnUpsellFare: xsd:boolean}, Hotel: ns2:typeTransactionsAllowed, Rail: ns2:typeTransactionsAllowed, Vehicle: ns2:typeTransactionsAllowed, Passive: ns2:typeBookingTransactionsAllowed, BackgroundPassive: ns2:typeBookingTransactionsAllowed)
     ns2:TravelComplianceData(PolicyCompliance: {InPolicy: xsd:boolean, PolicyToken: ns2:StringLength1to128}[], ContractCompliance: {InContract: xsd:boolean, ContractToken: ns2:StringLength1to128}[], PreferredSupplier: {Preferred: xsd:boolean, ProfileType: ns2:typeProfileType}[], Key: ns2:typeRef, AirSegmentRef: ns2:typeRef, PassiveSegmentRef: ns2:typeRef, RailSegmentRef: ns2:typeRef, ReservationLocatorRef: ns2:typeLocatorCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:TravelInfo(TripName: ns2:TripName, TravelPurpose: ns2:TravelPurpose)
     ns2:TravelSegment(SegmentRemark: ns2:SegmentRemark[], Key: ns2:typeRef, Status: xsd:string, Passive: xsd:boolean, TravelOrder: xsd:integer, ProviderSegmentOrder: ns2:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string)
     ns2:TravelerInformation(EmergencyContact: {PhoneNumber: ns2:PhoneNumber, Name: xsd:anyType, Relationship: xsd:anyType}, HomeAirport: ns2:typeAirport, VisaExpirationDate: xsd:date, BookingTravelerRef: ns2:typeRef)
     ns2:TravelerType(Code: ns2:typePTC)
     ns2:UnassociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:UnitedNations(Number: xsd:string)
     ns2:VendorLocation(ns2:typeVendorLocation, ProviderCode: ns2:typeProviderCode, VendorCode: ns2:typeSupplierCode, PreferredOption: xsd:boolean, VendorLocationID: ns2:VendorLocationID, Key: ns2:typeRef, MoreRatesToken: ns2:MoreRatesToken)
     ns2:XMLRemark(xsd:string, Key: ns2:typeRef, Category: ns2:Category, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns8:Balance(DueDate: xsd:date, ReceivedDate: xsd:date, CreditCardDueAmount: ns2:typeMoney, CheckDueAmount: ns2:typeMoney)
     ns8:CabinInfo(Category: ns2:StringLength1to3, Number: ns2:StringLength1to5, Location: ns2:StringLength1, RelativeLocation: ns2:StringLength1to12, DeckName: ns2:StringLength1to15, BedConfiguration: ns2:StringLength1to10, SmokingIndicator: xsd:boolean)
     ns8:Charges(AirCharge: ns2:typeMoney, OptionalCharge: ns2:typeMoney, WaiverCharge: ns2:typeMoney, WaiverChargeType: ns2:StringLength1, PortCharge: ns2:typeMoney, PortChargeDescription: ns2:StringLength1to13, PenaltyCharge: ns2:typeMoney)
     ns8:Commission(Amount: ns2:typeMoney, MiscellaneousAmount: ns2:typeMoney, MiscellaneousDescription: ns2:StringLength1to13)
     ns8:CruiseBookingTravelerRef(LoyaltyCardRef: ns2:LoyaltyCardRef[], Key: ns2:typeRef, WaiverIndicator: xsd:boolean)
     ns8:CruiseFees(Amount: ns2:typeMoney, Description: ns2:StringLength1to13)
     ns8:CruiseItinerary(DepartureDate: xsd:date, DepartureTime: xsd:time, ArrivalDate: xsd:date, ArrivalTime: xsd:time, BoardingDate: xsd:date, BoardingTime: xsd:time, Status: ns2:typeStatusCode, PortName: ns2:StringLength1to20, PortIndicator: ns2:StringLength1)
     ns8:CruisePricingInfo(Fare: ns8:Fare, Charges: ns8:Charges, Discount: ns8:Discount[], Deposit: ns8:Deposit[], Balance: ns8:Balance, Commission: ns8:Commission, CruiseFees: ns8:CruiseFees, CruiseBookingTravelerRef: ns8:CruiseBookingTravelerRef[], TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, NetFare: ns2:typeMoney, ReceivedAmount: ns2:typeMoney)
     ns8:CruiseReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, CruiseSegment: ns8:CruiseSegment, CruiseItinerary: ns8:CruiseItinerary[], CruisePricingInfo: ns8:CruisePricingInfo, OptionalService: ns8:OptionalService[], BookingTravelerRef: ns2:BookingTravelerRef[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef, Payment: ns2:Payment[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string)
     ns8:CruiseSegment(SegmentRemark: ns2:SegmentRemark[], CruiseStay: ns8:CruiseStay, Key: ns2:typeRef, Status: xsd:string, Passive: xsd:boolean, TravelOrder: xsd:integer, ProviderSegmentOrder: ns2:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, Vendor: ns2:StringLength1to3, VendorName: ns2:StringLength1to30, Origin: ns2:StringLength1to5, Destination: ns2:StringLength1to5, DepartureTime: xsd:string, ArrivalTime: xsd:string)
     ns8:CruiseStay(Package: {Name: ns2:StringLength1to30, Identifier: ns8:Identifier, PassengerCount: xsd:integer, PackageIdentifier: ns2:StringLength1to14}, CabinInfo: ns8:CabinInfo, DiningInfo: {Seating: ns2:StringLength1, Status: ns2:typeStatusCode, TableSize: xsd:integer}, ShipName: ns2:StringLength1to25, DurationOfStay: xsd:integer, UnitOfStay: xsd:string, BookingDate: xsd:date, BookingAgent: ns2:StringLength1to12, BookingCredit: ns2:StringLength1to10, OtherPartyConfNbr: xsd:integer, PassengerOrigin: ns2:StringLength1to5, ConfirmationNumber: ns2:StringLength1to16, LinkedConfNumber: ns2:StringLength1to16, CancellationNumber: ns2:StringLength1to16, CancellationDate: xsd:date, CancellationTime: xsd:time)
     ns8:Deposit(Amount: ns2:typeMoney, DueDate: xsd:date, ReceivedDate: xsd:date)
     ns8:Discount(Amount: ns2:typeMoney, Description: ns2:StringLength1to13)
     ns8:Due()
     ns8:Fare(FareSpecific: xsd:boolean, MultipleFareIndicator: xsd:boolean, RateCode: ns2:StringLength1to8)
     ns8:OptionJourneyDetails(PickUpLocation: ns2:StringLength1to5, PickUpTime: xsd:time, PickUpDescription: ns2:StringLength1to30, PickUpCarrier: ns2:typeCarrier, PickUpFlightNumber: ns2:typeFlightNumber, ReturnLocation: ns2:StringLength1to5, ReturnTime: xsd:time, ReturnDescription: ns2:StringLength1to30, ReturnCarrier: ns2:typeCarrier, ReturnFlightNumber: ns2:typeFlightNumber)
     ns8:OptionalService(OptionJourneyDetails: ns8:OptionJourneyDetails, BookingTravelerRef: ns2:BookingTravelerRef[], FeatureType: ns2:StringLength1, Status: ns2:typeStatusCode, Quantity: xsd:positiveInteger, ProviderDefinedType: ns2:StringLength1to10, Description: ns2:StringLength1to25, StartDate: xsd:date, EndDate: xsd:date, BookingDate: xsd:date, SetIdentifier: ns2:StringLength1to10, SetName: ns2:StringLength1to20, TotalPrice: ns2:typeMoney, TransportIndicator: xsd:boolean, AirCityIndicator: xsd:boolean, PurchaseIndicator: xsd:boolean)
     ns5:AcceptedPayment(PaymentCode: ns2:typeCardMerchantType)
     ns5:Amenities(Amenity: ns5:Amenity[])
     ns5:Amenity(Code: ns5:typeAmenity, AmenityType: ns5:AmenityType)
     ns5:AssociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns5:AsyncProviderSpecificResponse(ns2:BaseAsyncProviderSpecificResponse)
     ns5:BookingConfirmation(ns5:BookingConfirmation)
     ns5:BookingGuestInformation(Room: ns5:typeGuestRoomInformation[])
     ns5:CancelInfo(CancellationPolicy: xsd:string, Text: xsd:string[], NonRefundableStayIndicator: ns2:typeTrinary, CancelDeadline: xsd:dateTime, TaxInclusive: xsd:boolean, FeeInclusive: xsd:boolean, CancelPenaltyAmount: ns2:typeMoney, NumberOfNights: xsd:nonNegativeInteger, CancelPenaltyPercent: xsd:float, CancelPenaltyPercentAppliesTo: xsd:string, Method: xsd:string, Supported: xsd:boolean, URL: xsd:string, OffsetTimeUnit: ns2:StringLength1to16, OffsetUnitMultiplier: ns2:Numeric0to999, OffsetDropTime: ns2:StringLength1to20)
     ns5:Commission(Indicator: ns2:typeTrinary, Percent: xsd:string, CommissionAmount: ns2:typeMoney, ApproxCommissionAmount: ns2:typeMoney, CommissionOnSurcharges: ns2:typeMoney, ApproxCommissionOnSurcharges: ns2:typeMoney)
     ns5:CurrencyRateConversion(RateConversion: xsd:float, SourceCurrencyCode: ns2:typeCurrency, RequestedCurrencyCode: ns2:typeCurrency, DecimalPlaces: xsd:nonNegativeInteger)
     ns5:DepositAmount(Amount: ns2:typeMoney, ApproximateAmount: ns2:typeMoney)
     ns5:GuaranteeInfo(({DepositAmount: ns5:DepositAmount} | {DepositNights: xsd:integer} | {DepositPercent: xsd:integer}), GuaranteePaymentType: ns5:GuaranteePaymentType[], AbsoluteDeadline: xsd:dateTime, CredentialsRequired: xsd:boolean, HoldTime: xsd:string, GuaranteeType: ns5:GuaranteeType, OffsetTimeUnit: ns2:StringLength1to16, OffsetUnitMultiplier: ns2:Numeric0to999, OffsetDropTime: ns2:StringLength1to20)
     ns5:GuaranteePaymentType(xsd:string, Type: xsd:string, Description: xsd:string)
     ns5:GuestInformation(NumberOfAdults: ns5:NumberOfAdults, NumberOfChildren: ns5:NumberOfChildren, ExtraChild: {Count: xsd:int, Content: xsd:string}, NumberOfRooms: xsd:int)
     ns5:GuestReviews(Comments: {xsd:string, CommentId: ns2:typeRef, Date: ns2:typeDate, CommenterLanguage: ns2:typeLanguage, Source: xsd:string, CommentSourceName: xsd:string, Commenter: xsd:string}[])
     ns5:HotelAlternateProperties(HotelProperty: ns5:HotelProperty[])
     ns5:HotelAmenity(Level: ns5:typeAmenityLevel, AmenityCode: ns5:typeAmenityCode)
     ns5:HotelBedding(Type: ns5:typeBedding, NumberOfBeds: xsd:int, Amount: ns2:typeMoney, Content: xsd:string)
     ns5:HotelChain(Code: ns2:typeHotelChainCode)
     ns5:HotelCommission(xsd:string)
     ns5:HotelDetailItem(Text: xsd:string[], Name: xsd:string)
     ns5:HotelDetailsModifiers(PermittedProviders: ns2:PermittedProviders, LoyaltyCard: ns2:LoyaltyCard[], CorporateDiscountID: ns2:CorporateDiscountID[], HotelStay: ns5:HotelStay, NumberOfChildren: ns5:NumberOfChildren, HotelBedding: ns5:HotelBedding[], RateCategory: ns2:typeOTACode[], PermittedAggregators: ns5:PermittedAggregators, BookingGuestInformation: ns5:BookingGuestInformation, NumberOfAdults: xsd:int, RateRuleDetail: ns5:typeRateRuleDetail, NumberOfRooms: xsd:int, Key: ns2:typeRef, PreferredCurrency: ns2:typeCurrency, TotalOccupants: xsd:int, ProcessAllNegoRatesInd: xsd:boolean, MaxWait: xsd:positiveInteger)
     ns5:HotelLocation(Location: ns2:typeIATACode, LocationType: ns5:typeHotelLocation)
     ns5:HotelProperty(PropertyAddress: ns5:typeUnstructuredAddress, PhoneNumber: ns2:PhoneNumber[], CoordinateLocation: ns2:CoordinateLocation, Distance: ns2:Distance, HotelRating: ns5:HotelRating[], Amenities: ns5:Amenities, MarketingMessage: ns5:MarketingMessage, HotelChain: ns2:typeHotelChainCode, HotelCode: ns2:typeHotelCode, HotelLocation: ns5:typeHotelLocationCode, Name: xsd:string, VendorLocationKey: xsd:string, HotelTransportation: ns2:typeOTACode, ReserveRequirement: ns2:typeReserveRequirement, ParticipationLevel: ns2:StringLength1, Availability: ns5:typeHotelAvailability, Key: ns2:typeRef, PreferredOption: xsd:boolean, MoreRates: xsd:boolean, MoreRatesToken: ns5:MoreRatesToken, NetTransCommissionInd: ns5:typeNetTransCommission, NumOfRatePlans: xsd:positiveInteger)
     ns5:HotelPropertyWithMediaItems(HotelProperty: ns5:HotelProperty, MediaItem: ns2:MediaItem[], MediaResultMessage: ns2:typeResultMessage[])
     ns5:HotelRateByDate(EffectiveDate: xsd:string, ExpireDate: xsd:string, Base: ns2:typeMoney, Tax: ns2:typeMoney, Total: ns2:typeMoney, Surcharge: ns2:typeMoney, ApproximateBase: ns2:typeMoney, ApproximateTotal: ns2:typeMoney, Contents: xsd:string)
     ns5:HotelRateDetail(PolicyCodesList: ns2:typePolicyCodesList, RoomRateDescription: ns5:typeHotelRateDescription[], HotelRateByDate: ns5:HotelRateByDate[], CorporateDiscountID: ns2:CorporateDiscountID[], AcceptedPayment: ns5:AcceptedPayment[], Commission: ns5:Commission, RateMatchIndicator: ns5:RateMatchIndicator[], TaxDetails: ns5:TaxDetails, CancelInfo: ns5:CancelInfo, GuaranteeInfo: ns5:GuaranteeInfo, SupplementalRateInfo: xsd:string, RoomCapacity: {Capacity: xsd:positiveInteger[], IsPackage: xsd:boolean}, ExtraCharges: {ExtraAdultAmount: ns2:typeMoney, ExtraChildAmount: ns2:typeMoney, CribAmount: ns2:typeMoney, AdultRollawayCharge: ns2:typeMoney, ChildRollawayCharge: ns2:typeMoney}, Inclusions: {BedTypes: {Code: ns2:typeOTACode, Quantity: xsd:nonNegativeInteger}[], MealPlans: {MealPlan: {Code: ns2:typeOTACode}[], Breakfast: ns2:typeTrinary, Lunch: ns2:typeTrinary, Dinner: ns2:typeTrinary}, RoomView: ns5:RoomView, SmokingRoomIndicator: ns2:typeTrinary}, RatePlanType: ns2:typeRatePlanType, Base: ns2:typeMoney, Tax: ns2:typeMoney, Total: ns2:typeMoney, Surcharge: ns2:typeMoney, ApproximateBase: ns2:typeMoney, ApproximateTax: ns2:typeMoney, ApproximateTotal: ns2:typeMoney, ApproximateSurcharge: ns2:typeMoney, RateGuaranteed: xsd:boolean, ApproximateRateGuaranteed: xsd:boolean, RateCategory: ns2:typeOTACode, Key: ns2:typeRef, RateSupplier: ns2:typeThirdPartySupplier, BookableQuantity: xsd:positiveInteger, RateOfferId: ns5:typeRateOfferId, InPolicy: xsd:boolean, RateChangeIndicator: ns2:typeTrinary, ExtraFeesIncluded: ns2:typeTrinary)
     ns5:HotelRateInfo(RatePlanType: ns2:typeRatePlanType)
     ns5:HotelRating(({Rating: ns5:typeSimpleHotelRating[]} | {RatingRange: ns5:RatingRange}), RatingProvider: xsd:string)
     ns5:HotelReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, BookingTravelerRef: ns2:BookingTravelerRef[], ReservationName: ns2:ReservationName, ThirdPartyInformation: ns2:ThirdPartyInformation, HotelProperty: ns5:HotelProperty, HotelRateDetail: ns5:HotelRateDetail[], HotelStay: ns5:HotelStay, HotelSpecialRequest: ns2:typeGeneralText, Guarantee: ns2:Guarantee, PromotionCode: ns5:PromotionCode, BookingSource: ns2:BookingSource, HotelBedding: ns5:HotelBedding[], GuestInformation: ns5:GuestInformation, AssociatedRemark: ns5:AssociatedRemark[], SellMessage: xsd:string[], HotelCommission: xsd:string, BookingGuestInformation: ns5:BookingGuestInformation, RoomConfirmationCodes: {ConfirmationCode: xsd:string[]}, CancelInfo: ns5:CancelInfo, TotalReservationPrice: {RoomRateDescription: ns5:typeHotelRateDescription[], TotalPrice: ns2:typeMoney, ApproxTotalPrice: ns2:typeMoney}, HotelDetailItem: ns5:HotelDetailItem[], AdaptedRoomGuestAllocation: {Room: ns5:typeAdaptedRoomGuestAllocation[]}, LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string, Status: xsd:string, AggregatorBookingStatus: xsd:string, BookingConfirmation: xsd:string, CancelConfirmation: xsd:string, ProviderReservationInfoRef: ns2:typeRef, TravelOrder: xsd:integer, ProviderSegmentOrder: ns5:ProviderSegmentOrder, PassiveProviderReservationInfoRef: ns2:typeRef)
     ns5:HotelRuleItem(Text: xsd:string[], Name: xsd:string)
     ns5:HotelRulesModifiers(PermittedProviders: ns2:PermittedProviders, NumberOfChildren: ns5:NumberOfChildren, HotelBedding: ns5:HotelBedding[], CorporateDiscountID: ns2:CorporateDiscountID[], NumberOfAdults: xsd:int, NumberOfRooms: xsd:int, TotalOccupants: xsd:int, Key: ns2:typeRef)
     ns5:HotelSearchLocation(HotelLocation: ns5:HotelLocation, ProviderLocation: ns5:ProviderLocation, VendorLocation: ns2:VendorLocation[], HotelAddress: ns2:typeStructuredAddress, ReferencePoint: ns5:typeHotelReferencePoint, CoordinateLocation: ns2:CoordinateLocation, Distance: ns2:Distance)
     ns5:HotelSearchModifiers(PermittedChains: {HotelChain: ns5:HotelChain[]}, ProhibitedChains: {HotelChain: ns5:HotelChain[]}, PermittedProviders: ns2:PermittedProviders, PermittedAggregators: ns5:PermittedAggregators, LoyaltyCard: ns2:LoyaltyCard[], HotelName: xsd:string, CorporateDiscountID: ns2:CorporateDiscountID[], RateCategory: ns2:typeOTACode[], HotelRating: ns5:HotelRating[], SearchPriority: ns5:SearchPriority, HotelBedding: ns5:HotelBedding[], Amenities: {Amenity: ns5:Amenity[]}, HotelPaymentType: ns5:typeHotelPaymentType, NumberOfChildren: ns5:NumberOfChildren, HotelTransportation: {Type: ns2:typeOTACode}, BookingGuestInformation: ns5:BookingGuestInformation, NumberOfAdults: xsd:int, NumberOfRooms: xsd:int, MaxProperties: xsd:int, IsRelaxed: xsd:boolean, PreferredCurrency: ns2:typeCurrency, AvailableHotelsOnly: xsd:boolean, MaxWait: xsd:positiveInteger, AggregateResults: xsd:boolean, ReturnPropertyDescription: xsd:boolean, NumOfRatePlans: xsd:positiveInteger, ReturnAmenities: xsd:boolean)
     ns5:HotelSearchResult(VendorLocation: ns2:VendorLocation[], HotelProperty: ns5:HotelProperty[], HotelSearchError: {xsd:string, Code: xsd:integer, Type: ns2:Type, RateSupplier: ns2:typeThirdPartySupplier}[], CorporateDiscountID: ns2:CorporateDiscountID[], RateInfo: ns5:RateInfo[], MediaItem: ns2:MediaItem, HotelType: ns5:HotelType, PropertyDescription: ns5:PropertyDescription)
     ns5:HotelSpecialRequest(ns2:typeGeneralText)
     ns5:HotelStay(CheckinDate: ns5:typeDate, CheckoutDate: ns5:typeDate, Key: ns2:typeRef)
     ns5:HotelSuperShopperResults(HotelProperty: ns5:HotelProperty, HotelDetailItem: ns5:HotelDetailItem[], HotelRateDetail: ns5:HotelRateDetail[], HotelResultsError: ns2:typeResultMessage[])
     ns5:HotelType(SourceLink: ns5:typeSourceLink)
     ns5:MarketingMessage(Text: xsd:string[])
     ns5:NumberOfAdults(xsd:string, ExtraAdults: xsd:int, Amount: ns2:typeMoney, Content: xsd:string)
     ns5:NumberOfChildren(Age: xsd:int[], Count: xsd:int, Amount: ns2:typeMoney)
     ns5:PermittedAggregators(Aggregator: {Name: ns2:typeThirdPartySupplier}[])
     ns5:PromotionCode(ns5:typePromoCodeString, Key: ns2:typeRef)
     ns5:PropertyDescription(xsd:string, ProviderCode: ns2:typeProviderCode)
     ns5:ProviderLocation(ProviderCode: ns2:typeProviderCode, Location: ns5:Location)
     ns5:QuickResponse(FastResult: xsd:boolean, MoreToken: xsd:string)
     ns5:RateInfo(RoomDispatch: ns5:typeRoomDispatch, PolicyCodesList: ns2:typePolicyCodesList, MinimumAmount: ns2:typeMoney, ApproximateMinimumAmount: ns2:typeMoney, MinAmountRateChanged: xsd:boolean, MaximumAmount: ns2:typeMoney, ApproximateMaximumAmount: ns2:typeMoney, MaxAmountRateChanged: xsd:boolean, MinimumStayAmount: ns2:typeMoney, ApproximateMinimumStayAmount: ns2:typeMoney, Commission: xsd:string, RateSupplier: ns2:typeThirdPartySupplier, RateSupplierLogo: xsd:anyURI, PaymentType: ns5:typeHotelPaymentType, MinInPolicy: xsd:boolean, MaxInPolicy: xsd:boolean, ApproxAvgNightlyAmt: ns2:typeMoney, TaxesIncluded: xsd:boolean, AmountConverted: xsd:boolean, MultipleRoom: xsd:string, PackageOffer: xsd:string)
     ns5:RateMatchIndicator(Type: ns5:Type, Status: ns5:Status, Value: xsd:string)
     ns5:RatingRange(MinimumRating: ns5:typeSimpleHotelRating, MaximumRating: ns5:typeSimpleHotelRating)
     ns5:RequestedHotelDetails(HotelProperty: ns5:HotelProperty, HotelDetailItem: ns5:HotelDetailItem[], HotelRateDetail: ns5:HotelRateDetail[], MediaItem: ns2:MediaItem[], HotelType: ns5:HotelType)
     ns5:RoomView(Code: ns2:typeOTACode)
     ns5:SearchPriority(Criteria: {Order: ns5:Order, Type: ns5:Type}[])
     ns5:Tax(({Amount: ns2:typeMoney} | {Percentage: xsd:float}), Code: ns2:typeOTACode, EffectiveDate: xsd:date, ExpirationDate: xsd:date, Term: xsd:string, CollectionFreq: xsd:string)
     ns5:TaxDetails(Tax: ns5:Tax[])
     ns7:AssociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, SegmentRef: ns2:typeRef)
     ns7:PassiveRemark(Text: xsd:string, Type: xsd:string, PassiveSegmentRef: ns2:typeRef)
     ns7:PassiveReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], BookingTravelerRef: ns2:BookingTravelerRef[], PassiveSegment: ns7:PassiveSegment[], PassiveRemark: ns7:PassiveRemark[], AssociatedRemark: ns7:AssociatedRemark[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string, ProviderReservationInfoRef: ns2:typeRef)
     ns7:PassiveSegment(Amount: {Type: ns7:Type, AmountDuePaid: ns2:typeMoney}, SupplierCode: ns7:typePassiveSupplierCode, Status: xsd:string, StartDate: xsd:string, EndDate: xsd:string, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, AvailabilitySource: xsd:string, PolledAvailabilityOption: xsd:string, AvailabilityDisplayType: xsd:string, FlightNumber: xsd:string, ClassOfService: xsd:string, NumberOfItems: xsd:integer, SegmentType: xsd:string, Key: ns2:typeRef, VehicleType: xsd:string, PassiveProviderReservationInfoRef: ns2:typeRef, Group: xsd:integer, TravelOrder: xsd:integer, ProviderSegmentOrder: ns7:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, PassiveGroup: xsd:string)
     ns7:PassiveSegmentRef(Key: ns2:typeRef)
     ns6:Characteristic(Smoking: xsd:boolean, Class: ns6:typeCoachClassType)
     ns6:Coach(Characteristic: ns6:Characteristic, Remark: ns2:Remark[], CoachNumber: xsd:string)
     ns6:FareValidity(RailJourneyRef: ns2:typeRef, NotValidBefore: xsd:date, NotValidAfter: xsd:date)
     ns6:FulFillmentType(ns6:FulFillmentType)
     ns6:JourneyRemark(xsd:string, Category: xsd:string)
     ns6:OperatingCompany(xsd:string, Code: xsd:string, Name: xsd:string)
     ns6:RailAutoSeatAssignment(SeatType: ns6:SeatType, SeatValue: ns6:SeatValue, RailSegmentRef: ns2:typeRef, BookingTravelerRef: ns2:typeRef)
     ns6:RailAvailInfo(ClassCode: ns2:typeRailClass, Quantity: xsd:integer, CabinClass: ns2:typeRailCabin)
     ns6:RailBookingInfo(RailFareRef: ns2:typeRef, RailJourneyRef: ns2:typeRef, OptionalService: xsd:boolean)
     ns6:RailExchangeInfo(RefundAmount: ns2:typeMoney, CancellationFee: ns2:typeMoney, ExchangeAmount: ns2:typeMoney, ApproximateRefundAmount: ns2:typeMoney, ApproximateCancellationFee: ns2:typeMoney, ApproximateExchangeAmount: ns2:typeMoney, RetainAmount: ns2:typeMoney)
     ns6:RailExchangeSolution(({RailJourney: ns6:RailJourney[]} | {RailJourneyRef: ns6:RailJourneyRef[]}), RailPricingInfo: ns6:RailPricingInfo[], RailExchangeInfo: ns6:RailExchangeInfo, Key: ns2:typeRef, OfferId: xsd:integer, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, HostTokenRef: ns2:typeRef, Reference: xsd:string)
     ns6:RailFare(RailFareNoteRef: ns6:RailFareNoteRef[], ({RailFareID: ns6:RailFareID[]} | {RailFareIDRef: ns6:RailFareIDRef[]}), FareValidity: ns6:FareValidity[], HostToken: ns2:HostToken, FulFillmentType: ns6:FulFillmentType[], RailFareComponent: ns6:RailFareComponent[], Key: ns2:typeRef, FareBasis: xsd:string, CabinClass: ns2:typeRailCabin, PassengerTypeCode: ns2:typePTC, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, EffectiveDate: xsd:string, Amount: ns2:typeMoney, RouteDescription: xsd:string, TicketTypeCode: xsd:string, FareReference: ns6:FareReference, CrossCityFare: xsd:boolean, OriginStationName: xsd:string, DestinationStationName: xsd:string, ReservationRequired: xsd:boolean, JourneyDirection: ns6:typeJourneyDirection, RailLocOrigin: ns2:typeRailLocationCode, RailLocDestination: ns2:typeRailLocationCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns6:RailFareComponent(Discount: {DiscountCard: ns2:DiscountCard[], Key: ns2:typeRef}[], Key: ns2:typeRef, Amount: ns2:typeMoney, Age: xsd:integer, PassengerTypeCode: ns2:typePTC, SupplierPassengerType: xsd:string, Quantity: xsd:integer)
     ns6:RailFareID(xsd:string, Key: ns2:typeRef, Category: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns6:RailFareIDList(RailFareID: ns6:RailFareID[])
     ns6:RailFareIDRef(Key: ns2:typeRef)
     ns6:RailFareList(RailFare: ns6:RailFare[])
     ns6:RailFareNote(xsd:string, Key: ns2:typeRef, NoteName: xsd:string, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns6:RailFareNoteList(RailFareNote: ns6:RailFareNote[])
     ns6:RailFareNoteRef(Key: ns2:typeRef)
     ns6:RailFareRef(Key: ns2:typeRef)
     ns6:RailInfo(Origin: ns2:typeIATACode, RailLocOrigin: ns2:typeRailLocationCode, Destination: ns2:typeIATACode, RailLocDestination: ns2:typeRailLocationCode, DepartureTime: xsd:string, ArrivalTime: xsd:string, TrainNumber: ns6:typeTrainNumber, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode)
     ns6:RailJourney(({RailSegment: ns6:RailSegment[]} | {RailSegmentRef: ns6:RailSegmentRef[]}), JourneyRemark: ns6:JourneyRemark[], HostToken: ns2:HostToken[], Key: ns2:typeRef, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string, OriginStationName: xsd:string, DestinationStationName: xsd:string, RailLocOrigin: ns2:typeRailLocationCode, RailLocDestination: ns2:typeRailLocationCode, RouteDescription: ns6:RouteDescription, JourneyDirection: ns6:typeJourneyDirection, JourneyDuration: xsd:integer, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, Status: xsd:string, ProviderReservationInfoRef: ns2:typeRef, PassiveProviderReservationInfoRef: ns2:typeRef, TravelOrder: xsd:integer, RouteReference: ns6:RouteReference, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, Operation: xsd:string)
     ns6:RailJourneyList(RailJourney: ns6:RailJourney[])
     ns6:RailJourneyRef(Key: ns2:typeRef)
     ns6:RailLegModifiers(PermittedConnectionPoints: {ConnectionPoint: ns2:typeLocation[]}, ProhibitedConnectionPoints: {ConnectionPoint: ns2:typeLocation[]}, Class: xsd:string)
     ns6:RailPricingInfo(({RailFare: ns6:RailFare[]} | {RailFareRef: ns6:RailFareRef[]}), RailBookingInfo: ns6:RailBookingInfo[], PassengerType: ns2:typePassengerType[], BookingTravelerRef: ns2:BookingTravelerRef[], Key: ns2:typeRef, ExchangeAmount: ns2:typeMoney, ApproximateExchangeAmount: ns2:typeMoney, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns6:RailPricingModifiers(DiscountCard: ns2:DiscountCard[], ProhibitNonRefundableFares: xsd:boolean, ProhibitNonExchangeableFares: xsd:boolean, CurrencyType: ns2:typeCurrency, RailSearchType: ns2:typeRailSearchType)
     ns6:RailPricingSolution(({RailJourney: ns6:RailJourney[]} | {RailJourneyRef: ns6:RailJourneyRef[]}), RailPricingInfo: ns6:RailPricingInfo[], Key: ns2:typeRef, OfferId: xsd:integer, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, HostTokenRef: ns2:typeRef, Reference: xsd:string)
     ns6:RailRefundInfo(RefundAmount: ns2:typeMoney, CancellationFee: ns2:typeMoney, Refund: xsd:boolean, Retain: xsd:boolean, RetainAmount: ns2:typeMoney, NetAmount: ns2:typeMoney)
     ns6:RailReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, BookingTravelerRef: ns2:BookingTravelerRef[], RailJourney: ns6:RailJourney[], RailPricingInfo: ns6:RailPricingInfo[], Payment: ns2:Payment[], RailTicketInfo: ns6:RailTicketInfo[], RailFareNoteList: ns6:RailFareNoteList, SupplierLocator: ns2:SupplierLocator[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string, BookingStatus: xsd:string)
     ns6:RailSearchModifiers(PreferredSuppliers: {RailSupplier: ns6:RailSupplier[]}, MaxChanges: ns6:MaxChanges, Direction: ns6:typeRailDirection, Class: xsd:string, MaxSolutions: xsd:integer)
     ns6:RailSegment(SegmentRemark: ns2:SegmentRemark[], RailSegmentInfo: ns6:RailSegmentInfo[], OperatingCompany: ns6:OperatingCompany, RailAvailInfo: ns6:RailAvailInfo[], FulFillmentType: ns6:FulFillmentType[], Key: ns2:typeRef, Status: xsd:string, Passive: xsd:boolean, TravelOrder: xsd:integer, ProviderSegmentOrder: ns2:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, TrainNumber: ns6:typeTrainNumber, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string, OriginStationName: xsd:string, DestinationStationName: xsd:string, RailLocOrigin: ns2:typeRailLocationCode, RailLocDestination: ns2:typeRailLocationCode, TrainType: xsd:string, TrainTypeCode: ns6:typeTrainType, TransportMode: ns6:typeTransportMode, SeatAssignable: xsd:boolean, TransportCode: xsd:string, ReservationRequired: xsd:boolean, TravelTime: xsd:integer, HostTokenRef: ns2:typeRef, CabinClass: ns2:typeRailCabin, ClassCode: ns2:typeRailClass)
     ns6:RailSegmentInfo(xsd:string, Category: xsd:string, Type: ns6:typeRailSegmentInfo)
     ns6:RailSegmentList(RailSegment: ns6:RailSegment[])
     ns6:RailSegmentRef(Key: ns2:typeRef)
     ns6:RailSolutionChangedInfo(RailPricingSolution: ns6:RailPricingSolution, ReasonCode: ns6:ReasonCode)
     ns6:RailSpecificSeatAssignment(CoachLabel: xsd:string, PlaceLabel: xsd:string, Assignment: xsd:string, RailSegmentRef: ns2:typeRef, BookingTravelerRef: ns2:typeRef)
     ns6:RailSupplier(Code: ns2:typeSupplierCode)
     ns6:RailTicketInfo(RailJourneyRef: ns6:RailJourneyRef[], TicketAdvisory: ns6:TicketAdvisory[], Number: ns6:Number, IssueLocation: ns6:IssueLocation, TicketStatus: ns2:StringLength1to255, TicketFormType: ns6:TicketFormType, TrafficType: ns2:StringLength1to255, IssuedDate: xsd:dateTime, TicketType: ns2:StringLength1to255, BookingTravelerRef: ns2:typeRef)
     ns6:SearchRailLeg(SearchOrigin: ns2:typeSearchLocation[], SearchDestination: ns2:typeSearchLocation[], RailSegmentList: ns6:RailSegmentList, ({SearchDepTime: ns2:typeFlexibleTimeSpec[]} | {SearchArvTime: ns2:typeTimeSpec[]}), RailLegModifiers: ns6:RailLegModifiers)
     ns6:TicketAdvisory(ns2:StringLength1to500, Key: ns2:typeRef, LanguageCode: xsd:language)
     ns1:AckScheduleChangeReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, ReservationLocatorCode: xsd:string, Version: ns2:typeURVersion)
     ns1:AckScheduleChangeRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:AirAdd(({AccountingRemark: ns2:AccountingRemark[]} | {SupplierLocator: ns2:SupplierLocator[]} | {AirSegment: ns3:typeBaseAirSegment[]} | {AirPricingInfo: ns3:AirPricingInfo[]} | {CreditCardAuth: ns2:CreditCardAuth[]} | {DeliveryInfo: ns2:DeliveryInfo} | {Payment: ns2:Payment[]} | {SSR: ns2:SSR[]} | {LoyaltyCard: ns2:LoyaltyCard[]} | {AutoSeatAssignment: ns3:AutoSeatAssignment} | {SpecificSeatAssignment: ns3:SpecificSeatAssignment[]} | {GeneralRemark: ns2:GeneralRemark[]} | {FeeInfo: ns2:typeFeeInfo[]} | {HostToken: ns2:HostToken[]} | {AirPricingTicketingModifiers: ns3:AirPricingTicketingModifiers[]} | {OptionalServicesInfo: ns3:OptionalServicesInfo} | {AirPricingPayment: ns3:AirPricingPayment} | {AssociatedRemark: ns3:AssociatedRemark[]} | {PocketItineraryRemark: ns3:PocketItineraryRemark[]} | {ThirdPartyInformation: ns2:ThirdPartyInformation[]} | {AirSegmentPricingModifiers: ns3:AirSegmentPricingModifiers[]} | {TravelComplianceData: ns2:TravelComplianceData[]} | {BrandInfo: ns3:BrandInfo[]} | {InvoluntaryChange: ns3:InvoluntaryChange}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef, RestrictWaitlist: xsd:boolean)
     ns1:AirCancelReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AirReservationLocatorCode: ns3:AirReservationLocatorCode, AirSegment: ns3:typeBaseAirSegment[], AirSegmentRef: ns3:AirSegmentRef[], FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, Version: ns2:typeURVersion)
     ns1:AirCancelRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:AirCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], PointOfSale: ns2:PointOfSale, AirPricingSolution: ns3:AirPricingSolution[], ActionStatus: ns2:ActionStatus[], Payment: ns2:Payment[], DeliveryInfo: ns2:DeliveryInfo, AutoSeatAssignment: ns3:AutoSeatAssignment[], SpecificSeatAssignment: ns3:SpecificSeatAssignment[], AssociatedRemark: ns3:AssociatedRemark[], PocketItineraryRemark: ns3:PocketItineraryRemark[], ReviewBooking: ns2:ReviewBooking[], AirPricingTicketingModifiers: ns3:AirPricingTicketingModifiers[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, RetainReservation: ns1:typeRetainReservation, Source: ns1:Source, OverrideMCT: xsd:boolean, RestrictWaitlist: xsd:boolean, CreatePassiveForHold: xsd:boolean, ChannelId: ns1:ChannelId, NSCC: ns1:NSCC, CheckPriceVarianceType: ns1:CheckPriceVarianceType, CheckPriceVarianceValue: xsd:decimal, SplitReservation: xsd:boolean, PreferCompleteItinerary: xsd:boolean)
     ns1:AirCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, AirSolutionChangedInfo: ns3:AirSolutionChangedInfo[], AirSegmentSellFailureInfo: ns3:AirSegmentSellFailureInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:AirDelete(ReservationLocatorCode: ns2:typeLocatorCode, Element: ns2:typeElement, Key: ns2:typeRef, BookingTravelerRef: ns2:typeRef)
     ns1:AirMerchandisingFulfillmentReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, HostToken: ns2:HostToken[], HostReservation: ns3:HostReservation[], AgencySellInfo: ns2:AgencySellInfo, AirSolution: ns3:AirSolution, CreditCard: ns2:CreditCard, OptionalServices: ns3:OptionalServices, SpecificSeatAssignment: ns3:SpecificSeatAssignment[], GeneralRemark: ns2:GeneralRemark[], ConfirmationEmail: xsd:string, MerchandisingPricingModifiers: ns3:MerchandisingPricingModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean)
     ns1:AirMerchandisingFulfillmentRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:AirReservationCriteria(DepartureDate: ns1:typeDateSpec, ArrivalDate: ns1:typeDateSpec, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, FlightNumber: xsd:string, Carrier: ns2:typeCarrier, PassiveOnly: xsd:boolean)
     ns1:AirSegmentSpecialUpdate(({AirSegment: ns3:typeBaseAirSegment}), Action: ns1:Action)
     ns1:AirUpdate(({AccountingRemark: ns2:AccountingRemark[]} | {AirSegment: ns3:typeBaseAirSegment[]} | {CreditCardAuth: ns2:CreditCardAuth[]} | {AirPricingAdjustment: ns3:AirPricingAdjustment[]} | {AirPricingTicketingModifiers: ns3:AirPricingTicketingModifiers[]} | {DeliveryInfo: ns2:DeliveryInfo} | {AirSegmentSpecialUpdate: ns1:AirSegmentSpecialUpdate} | {LoyaltyCard: ns2:LoyaltyCard[]} | {SSR: ns2:SSR[]} | {GeneralRemark: ns2:GeneralRemark[]} | {AutoSeatAssignment: ns3:AutoSeatAssignment} | {SpecificSeatAssignment: ns3:SpecificSeatAssignment[]} | {AirPricingPayment: ns3:AirPricingPayment} | {AssociatedRemark: ns3:AssociatedRemark[]} | {PocketItineraryRemark: ns3:PocketItineraryRemark[]} | {OptionalServicesInfo: ns3:OptionalServicesInfo} | {ThirdPartyInformation: ns2:ThirdPartyInformation[]} | {TravelComplianceData: ns2:TravelComplianceData[]}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef, RestrictWaitlist: xsd:boolean)
     ns1:AppliedProfileCriteria(TravelerProfileId: ns1:TravelerProfileId)
     ns1:ArvlUnknSegment(BookingTravelerRef: {Key: ns2:typeRef}[], Key: ns2:typeRef, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, TravelOrder: xsd:integer)
     ns1:BranchId(xsd:string)
     ns1:ChildProviderReservationInfo(BookingTravelerName: ns2:BookingTravelerName[], ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, UniversalLocatorCode: ns2:typeLocatorCode)
     ns1:ContinuityOverrideRemark(xsd:string, Category: ns1:Category)
     ns1:DisplayContents(xsd:string)
     ns1:DisplayDetail(Name: ns1:typeDisplayDetailName, Value: xsd:string)
     ns1:DisplayDetails(({DisplayDetail: ns1:DisplayDetail[]} | {DisplayContents: xsd:string}), ProviderReservationDetail: xsd:boolean, CustomCheck: xsd:boolean, ProviderProfile: xsd:boolean, DivideDetails: xsd:boolean, EnhancedItinModifiers: xsd:boolean, IntegratedContent: xsd:boolean, Cruise: xsd:boolean, RailSegment: xsd:boolean)
     ns1:ExternalReservationInfo(LocatorCode: ns2:typeLocatorCode, Carrier: ns2:typeCarrier)
     ns1:HotelAdd(({LoyaltyCard: ns2:LoyaltyCard[]} | {Guarantee: ns2:Guarantee} | {GuestInformation: ns5:GuestInformation} | {AssociatedRemark: ns5:AssociatedRemark[]} | {BookingSource: ns2:BookingSource} | {HotelSpecialRequest: ns2:typeGeneralText} | {CorporateDiscountID: ns2:CorporateDiscountID} | {ReservationName: ns2:ReservationName} | {ThirdPartyInformation: ns2:ThirdPartyInformation} | {TravelComplianceData: ns2:TravelComplianceData[]} | {HotelBedding: ns5:HotelBedding[]} | {BookingConfirmation: ns5:BookingConfirmation}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef)
     ns1:HotelCancelReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, HotelProperty: ns5:HotelProperty, HotelStay: ns5:HotelStay, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, SupplierCode: xsd:string, SupplierLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion)
     ns1:HotelCancelRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:HotelCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], HotelRateDetail: ns5:HotelRateDetail[], HotelProperty: ns5:HotelProperty, ThirdPartyInformation: ns2:ThirdPartyInformation, HotelStay: ns5:HotelStay, Guarantee: ns2:Guarantee, HotelSpecialRequest: ns2:typeGeneralText, PointOfSale: ns2:PointOfSale, PromotionCode: ns5:PromotionCode, BookingSource: ns2:BookingSource, HotelBedding: ns5:HotelBedding[], GuestInformation: ns5:GuestInformation, AssociatedRemark: ns5:AssociatedRemark[], ReservationName: ns2:ReservationName, ActionStatus: ns2:ActionStatus, HostToken: ns2:HostToken, ReviewBooking: ns2:ReviewBooking[], HotelCommission: xsd:string, BookingGuestInformation: ns5:BookingGuestInformation, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, UserAcceptance: xsd:boolean, MandatoryRateMatch: xsd:boolean, StatusCode: ns2:typeStatusCode, BookingConfirmation: ns5:typeHotelConfirmationNumber)
     ns1:HotelCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, HotelRateChangedInfo: {HotelProperty: ns5:HotelProperty, HotelRateDetail: ns5:HotelRateDetail, Reason: xsd:string}, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:HotelDelete(ReservationLocatorCode: ns2:typeLocatorCode, Element: ns2:typeElement, Key: ns2:typeRef)
     ns1:HotelReservationCriteria(CheckInDate: ns1:typeDateSpec, HotelChainCode: ns2:typeHotelChainCode, HotelCode: ns2:typeHotelCode, HotelConfirmation: xsd:string, Location: ns2:typeIATACode, PassiveOnly: xsd:boolean)
     ns1:HotelUpdate(({LoyaltyCard: ns2:LoyaltyCard[]} | {Guarantee: ns2:Guarantee} | {GuestInformation: ns5:GuestInformation} | {AssociatedRemark: ns5:AssociatedRemark[]} | {BookingSource: ns2:BookingSource} | {HotelSpecialRequest: ns2:typeGeneralText} | {HotelRateInfo: ns5:HotelRateInfo} | {HotelStay: ns5:HotelStay} | {HotelCommission: xsd:string} | {CorporateDiscountID: ns2:CorporateDiscountID} | {ReservationName: ns2:ReservationName} | {ThirdPartyInformation: ns2:ThirdPartyInformation} | {TravelComplianceData: ns2:TravelComplianceData[]} | {HotelBedding: ns5:HotelBedding[]} | {BookingConfirmation: ns5:BookingConfirmation}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef)
     ns1:NameCriteria(FirstName: ns1:FirstName, LastName: ns1:LastName)
     ns1:ParentProviderReservationInfo(BookingTravelerName: ns2:BookingTravelerName[], ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, UniversalLocatorCode: ns2:typeLocatorCode)
     ns1:PassiveAdd(({} | {} | {PassiveSegment: ns7:PassiveSegment[], PassiveRemark: ns7:PassiveRemark[]} | {AssociatedRemark: ns7:AssociatedRemark[]} | {SupplierLocator: ns2:SupplierLocator[]} | {ThirdPartyInformation: ns2:ThirdPartyInformation[]} | {TravelComplianceData: ns2:TravelComplianceData[]}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef)
     ns1:PassiveCancelReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, PassiveSegmentRef: ns7:PassiveSegmentRef[], FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, PassiveReservationLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion)
     ns1:PassiveCancelRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:PassiveCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], PassiveSegment: ns7:PassiveSegment[], PassiveRemark: ns7:PassiveRemark[], AssociatedRemark: ns7:AssociatedRemark[], ActionStatus: ns2:ActionStatus, ReviewBooking: ns2:ReviewBooking[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer)
     ns1:PassiveCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:PassiveDelete(ReservationLocatorCode: ns2:typeLocatorCode, Element: ns2:typeElement, Key: ns2:typeRef)
     ns1:PolicyInformation(AirPolicy: ns1:typeSegmentPolicy[], RailPolicy: ns1:typeSegmentPolicy[], HotelPolicy: ns1:typeSegmentPolicy[], VehiclePolicy: ns1:typeSegmentPolicy[], BookingTravelerRef: ns2:typeRef)
     ns1:Preference(Owner: ns1:Owner)
     ns1:ProfileAssociation(TravelerID: ns2:typeRef, BookingTravelerRef: ns2:typeRef)
     ns1:ProviderReservationDetails(ProviderReservationDetail: xsd:boolean, CustomCheck: xsd:boolean, ProviderProfile: xsd:boolean, DivideDetails: xsd:boolean, EnhancedItinModifiers: xsd:boolean, IntegratedContent: xsd:boolean, Cruise: xsd:boolean, RailSegment: xsd:boolean)
     ns1:ProviderReservationDisplayDetailsList(DisplayDetails: ns1:DisplayDetails[], TravelerNameNum: ns1:TravelerNameNum[])
     ns1:ProviderReservationDisplayDetailsReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, ProviderReservationDetail: xsd:boolean, CustomCheck: xsd:boolean, ProviderProfile: xsd:boolean, DivideDetails: xsd:boolean, EnhancedItinModifiers: xsd:boolean, IntegratedContent: xsd:boolean, Cruise: xsd:boolean, RailSegment: xsd:boolean)
     ns1:ProviderReservationDisplayDetailsRsp(ResponseMessage: ns2:ResponseMessage[], DisplayDetails: ns1:DisplayDetails[], TravelerNameNum: ns1:TravelerNameNum[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:ProviderReservationDivideReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, BookingTravelerRef: {Key: ns2:typeRef}[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, CreateChildUniversalRecord: ns1:CreateChildUniversalRecord)
     ns1:ProviderReservationDivideRsp(ResponseMessage: ns2:ResponseMessage[], ParentProviderReservationInfo: ns1:ParentProviderReservationInfo, ChildProviderReservationInfo: ns1:ChildProviderReservationInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:ProviderReservationInfo(({ProviderReservationDetails: ns1:ProviderReservationDetails} | {ProviderReservationDisplayDetailsList: ns1:ProviderReservationDisplayDetailsList}), ExternalReservationInfo: ns1:ExternalReservationInfo, Key: ns2:typeRef, ProviderCode: ns2:typeProviderCode, LocatorCode: ns2:typeProviderLocatorCode, CreateDate: xsd:dateTime, HostCreateDate: xsd:date, HostCreateTime: xsd:time, ModifiedDate: xsd:dateTime, Imported: xsd:boolean, TicketingModifiersRef: ns2:typeRef, InQueueMode: xsd:boolean, GroupRef: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, OwningPCC: ns2:typePCC, AgentOverride: ns2:AgentOverride)
     ns1:ProviderReservationSearchModifiers(IncludeAllNames: xsd:boolean, IncludeAgentInfo: xsd:boolean, MaxResults: ns2:typeMaxResults, StartFromResult: ns2:typeStartFromResult, ExcludeAir: xsd:boolean, ExcludeVehicle: xsd:boolean, ExcludeHotel: xsd:boolean, ExcludeGround: xsd:boolean)
     ns1:ProviderReservationSearchResult(Name: ns2:Name[], ProductInfo: ns1:typeProductInfo[], AgencyInfo: ns2:AgencyInfo, UniversalRecordLocatorCode: xsd:string, CreatedDate: xsd:string, EarliestTravelDate: xsd:string, Ticketed: ns1:typeReservationTicketed, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string, ExternalSearchIndex: ns1:typeExternalSearchIndex)
     ns1:ProviderReservationStatus(CancelInfo: ns2:typeResultMessage, CreateDate: xsd:dateTime, ModifiedDate: xsd:dateTime, ProviderCode: ns2:typeProviderCode, LocatorCode: ns2:typeProviderLocatorCode, Cancelled: xsd:boolean)
     ns1:QueueNextModifiers(NextOnQueue: xsd:boolean, ProviderLocatorCode: ns2:typeLocatorCode, ReQueueCurrent: xsd:boolean, QueueSessionToken: xsd:string)
     ns1:RailCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], RailPricingSolution: ns6:RailPricingSolution, Payment: ns2:Payment, RailFareNoteList: ns6:RailFareNoteList, HostTokenList: ns2:HostTokenList, RailAutoSeatAssignment: ns6:RailAutoSeatAssignment[], RailSpecificSeatAssignment: ns6:RailSpecificSeatAssignment[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, BookingActionType: xsd:string)
     ns1:RailCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, RailSolutionChangedInfo: ns6:RailSolutionChangedInfo[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:RailReservationCriteria(JourneyDepartureDate: ns1:typeDateSpec, JourneyArrivalDate: ns1:typeDateSpec, SegmentDepartureDate: ns1:typeDateSpec, SegmentArrivalDate: ns1:typeDateSpec, JourneyOrigin: ns2:typeIATACode, JourneyDestination: ns2:typeIATACode, JourneyRailLocOrigin: ns2:typeRailLocationCode, JourneyRailLocDestination: ns2:typeRailLocationCode, SupplierCode: xsd:string, TrainNumber: xsd:string, PassiveOnly: xsd:boolean)
     ns1:RailUpdate(BookingAction: {FormOfPayment: ns2:FormOfPayment, Payment: ns2:Payment, Type: xsd:string}, ReservationLocatorCode: ns2:typeLocatorCode)
     ns1:RecordIdentifier(UniversalLocatorCode: ns2:typeLocatorCode, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode)
     ns1:SavedTrip(BookingTraveler: ns2:BookingTraveler[], AgencyContactInfo: ns2:AgencyContactInfo, SearchPassenger: ns2:SearchPassenger[], PointOfSale: ns2:PointOfSale[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], AgencyInfo: ns2:AgencyInfo, ReservationName: ns2:ReservationName, ({AirPricingModifiers: ns3:AirPricingModifiers[]}), ({AirPricingSolution: ns3:AirPricingSolution[]}), AirTripNote: ns1:typeSavedTripNote[], ({VehicleSearchModifiers: ns4:VehicleSearchModifiers[]}), ({VehicleDateLocation: ns4:VehicleDateLocation[]}), SpecialEquipment: ns2:SpecialEquipment[], ({VehicleSpecialRequest: ns4:VehicleSpecialRequest[]}), ({PaymentInformation: ns4:PaymentInformation[]}), ({DeliveryAddress: ns4:DeliveryAddress[]}), ({CollectionAddress: ns4:CollectionAddress[]}), ({FlightArrivalInformation: ns4:FlightArrivalInformation[]}), ({Vehicle: ns4:Vehicle[]}), VehicleTripNote: ns1:typeSavedTripNote[], VendorLocation: ns2:VendorLocation[], ({HotelProperty: ns5:HotelProperty[]}), ({HotelStay: ns5:HotelStay[]}), ({HotelRulesModifiers: ns5:HotelRulesModifiers[]}), ({HotelDetailsModifiers: ns5:HotelDetailsModifiers[]}), ({HotelRateDetail: ns5:HotelRateDetail[]}), ({PromotionCode: ns5:PromotionCode[]}), HotelTripNote: ns1:typeSavedTripNote[], ({RailPricingSolution: ns6:RailPricingSolution[]}), ({RailFareNote: ns6:RailFareNote[]}), RailTripNote: ns1:typeSavedTripNote[], SavedTripNote: ns1:typeSavedTripNote[], SavedTripActivity: ns1:SavedTripActivity[], ProfileAssociation: ns1:ProfileAssociation[], PolicyInformation: ns1:PolicyInformation, LocatorCode: ns2:typeLocatorCode, UniversalRecordLocatorCode: ns2:typeLocatorCode, Name: ns1:Name, CreateDate: xsd:dateTime, ModifiedDate: xsd:dateTime, Version: ns2:typeURVersion, Status: ns1:typeURStatus, CreatedByAgent: xsd:string, ModifiedByAgent: xsd:string)
     ns1:SavedTripActivity(BookingTravelerRef: {Key: ns2:typeRef}[], SearchPassengerRef: {Key: ns2:typeRef}[], PointOfSaleRef: {Key: ns2:typeRef}[], AccountingRemarkRef: {Key: ns2:typeRef}[], GeneralRemarkRef: {Key: ns2:typeRef}[], AirPricingModifierRef: {Key: ns2:typeRef}[], AirPricingSolutionRef: {Key: ns2:typeRef}[], VehicleSearchModifiersRef: {Key: ns2:typeRef}[], VehicleDateLocationRef: {Key: ns2:typeRef}[], SpecialEquipmentRef: {Key: ns2:typeRef}[], VehicleSpecialRequestRef: {Key: ns2:typeRef}[], PaymentInformationRef: {Key: ns2:typeRef}[], DeliveryAddressRef: {Key: ns2:typeRef}[], CollectionAddressRef: {Key: ns2:typeRef}[], FlightArrivalInformationRef: {Key: ns2:typeRef}[], VehicleRef: {Key: ns2:typeRef}[], VendorLocationRef: {Key: ns2:typeRef}[], HotelPropertyRef: {Key: ns2:typeRef}[], HotelStayRef: {Key: ns2:typeRef}[], HotelRulesModifiersRef: {Key: ns2:typeRef}[], HotelDetailsModifiersRef: {Key: ns2:typeRef}[], HotelRateDetailRef: {Key: ns2:typeRef}[], PromotionCodeRef: {Key: ns2:typeRef}[], RailPricingSolutionRef: {Key: ns2:typeRef}[], Type: ns1:Type)
     ns1:SavedTripCreateReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean)
     ns1:SavedTripCreateRsp(ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:SavedTripDeleteReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, LocatorCode: ns2:typeLocatorCode)
     ns1:SavedTripDeleteRsp(ResponseMessage: ns2:ResponseMessage[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:SavedTripModifyReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean)
     ns1:SavedTripModifyRsp(ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:SavedTripRetrieveReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, LocatorCode: ns2:typeLocatorCode, TravelerLastName: ns2:typeTravelerLastName)
     ns1:SavedTripRetrieveRsp(ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:SavedTripSearchModifiers(TravelDate: ns1:typeDateSpec, IncludeAllNames: xsd:boolean, IncludeAgentInfo: xsd:boolean, MaxResults: ns2:typeMaxResults, StartFromResult: ns2:typeStartFromResult, ExcludeAir: xsd:boolean, ExcludeVehicle: xsd:boolean, ExcludeHotel: xsd:boolean, SavedTripName: xsd:string, ExcludeURAssociated: xsd:boolean)
     ns1:SavedTripSearchReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTripSearchModifiers: ns1:SavedTripSearchModifiers, TravelerCriteria: ns1:TravelerCriteria, SearchAgent: ns1:SearchAgent, AirReservationCriteria: ns1:AirReservationCriteria, HotelReservationCriteria: ns1:HotelReservationCriteria, VehicleReservationCriteria: ns1:VehicleReservationCriteria, RailReservationCriteria: ns1:RailReservationCriteria, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RecordStatus: ns1:typeSavedTripRecordStatus)
     ns1:SavedTripSearchResult(ProductInfo: {Name: ns2:Name[], ProductType: ns2:typeProduct, VendorCode: xsd:string, ProviderCode: xsd:string}[], EarliestTravelDate: xsd:string, CreatedDate: xsd:string, SavedTripName: xsd:string, LocatorCode: ns2:typeLocatorCode, UniversalRecordLocatorCode: ns2:typeLocatorCode)
     ns1:SavedTripSearchRsp(ResponseMessage: ns2:ResponseMessage[], SavedTripSearchResult: ns1:SavedTripSearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:SearchAccount(ClientID: xsd:string, BranchID: ns2:typeBranchId)
     ns1:SearchAgent(BranchId: xsd:string[], CreatedByAgent: xsd:string, ModifiedByAgent: xsd:string, TicketedByAgent: xsd:string)
     ns1:SegmentContinuityInfo(ArvlUnknSegment: ns1:ArvlUnknSegment[], ContinuityOverrideRemark: ns1:ContinuityOverrideRemark[], ArrivalUnknownSegmentCount: xsd:integer)
     ns1:SupportedVersions(urVersion: xsd:string, airVersion: xsd:string, hotelVersion: xsd:string, vehicleVersion: xsd:string, passiveVersion: xsd:string, railVersion: xsd:string, cruiseVersion: xsd:string)
     ns1:TravelerCriteria(({NameCriteria: ns1:NameCriteria} | {AppliedProfileCriteria: ns1:AppliedProfileCriteria}), PhoneNumber: xsd:string, VIPOnly: xsd:boolean)
     ns1:TravelerNameNum(Prefix: ns2:Prefix, First: ns2:First, Middle: ns2:Middle, Last: ns2:typeTravelerLastName, Suffix: ns2:Suffix, PaxNum: xsd:string)
     ns1:UniversalAdd(({AccountingRemark: ns2:AccountingRemark[]} | {GeneralRemark: ns2:GeneralRemark[]} | {OSI: ns2:OSI[]} | {UnassociatedRemark: ns2:UnassociatedRemark[]} | {XMLRemark: ns2:XMLRemark[]} | {Postscript: ns2:Postscript} | {BookingTravelerInfo: ns2:BookingTravelerInfo} | {ServiceFeeInfo: ns2:ServiceFeeInfo[]} | {LinkedUniversalRecord: ns2:LinkedUniversalRecord[]} | {AgencyContactInfo: ns2:AgencyContactInfo} | {CustomerID: ns2:CustomerID} | {CommissionRemark: ns2:CommissionRemark} | {ConsolidatorRemark: ns2:ConsolidatorRemark} | {InvoiceRemark: ns2:InvoiceRemark[]} | {ActionStatus: ns2:ActionStatus} | {ReviewBooking: ns2:ReviewBooking[]} | {FormOfPayment: ns2:FormOfPayment[]}))
     ns1:UniversalDelete(Element: ns2:typeElement, Key: ns2:typeRef)
     ns1:UniversalModifyCmd(({VehicleAdd: ns1:VehicleAdd} | {VehicleDelete: ns1:VehicleDelete} | {VehicleUpdate: ns1:VehicleUpdate} | {AirAdd: ns1:AirAdd} | {AirDelete: ns1:AirDelete} | {AirUpdate: ns1:AirUpdate} | {UniversalAdd: ns1:UniversalAdd} | {UniversalDelete: ns1:UniversalDelete} | {UniversalUpdate: ns1:UniversalUpdate} | {HotelAdd: ns1:HotelAdd} | {HotelUpdate: ns1:HotelUpdate} | {HotelDelete: ns1:HotelDelete} | {PassiveAdd: ns1:PassiveAdd} | {PassiveDelete: ns1:PassiveDelete} | {RailUpdate: ns1:RailUpdate}), Key: ns2:typeRef)
     ns1:UniversalModifyCommandError(xsd:string, UniversalModifyCmdKey: ns2:typeRef)
     ns1:UniversalModifyErrorInfo(Code: xsd:string, Service: xsd:string, Type: xsd:string, Description: xsd:string, TransactionId: xsd:string, TraceId: xsd:string, CommandHistory: xsd:string, Auxdata: ns2:Auxdata, StackTrace: xsd:string, UniversalModifyCommandError: ns1:UniversalModifyCommandError[], AirSegmentError: ns3:AirSegmentError[])
     ns1:UniversalModifyFailureInfo(UniversalModifyCommandError: ns1:UniversalModifyCommandError[], AirSegmentSellFailureInfo: ns3:AirSegmentSellFailureInfo)
     ns1:UniversalRecord(LinkedUniversalRecord: ns2:LinkedUniversalRecord[], Group: ns2:Group, BookingTraveler: ns2:BookingTraveler[], ServiceFeeInfo: ns2:ServiceFeeInfo[], OSI: ns2:OSI[], ActionStatus: ns2:ActionStatus[], ProviderReservationInfo: ns1:ProviderReservationInfo[], ({AirReservation: ns3:AirReservation[]}), ({HotelReservation: ns5:HotelReservation[]}), ({VehicleReservation: ns4:VehicleReservation[]}), ({PassiveReservation: ns7:PassiveReservation[]}), ({RailReservation: ns6:RailReservation[]}), ({CruiseReservation: ns8:CruiseReservation[]}), ({EMDSummaryInfo: ns3:EMDSummaryInfo[]}), ProviderARNKSegment: ns2:ProviderARNKSegment[], SegmentContinuityInfo: ns1:SegmentContinuityInfo, XMLRemark: ns2:XMLRemark[], GeneralRemark: ns2:GeneralRemark[], AccountingRemark: ns2:AccountingRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript[], AgencyInfo: ns2:AgencyInfo, AppliedProfile: ns2:AppliedProfile, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID[], CommissionRemark: ns2:CommissionRemark[], ConsolidatorRemark: ns2:ConsolidatorRemark[], UnmaskedDataRemark: ns1:UnmaskedDataRemark[], InvoiceRemark: ns2:InvoiceRemark[], ReviewBooking: ns2:ReviewBooking[], SSR: ns2:SSR[], InvoiceData: ns2:InvoiceData[], FormOfPayment: ns2:FormOfPayment[], LocatorCode: ns2:typeLocatorCode, SavedTripLocatorCode: ns2:typeLocatorCode, LockReason: xsd:string, CreateDate: xsd:dateTime, Version: ns2:typeURVersion, Status: ns1:typeURStatus)
     ns1:UniversalRecordCancelReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, Version: ns2:typeURVersion)
     ns1:UniversalRecordCancelRsp(ResponseMessage: ns2:ResponseMessage[], ProviderReservationStatus: ns1:ProviderReservationStatus[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:UniversalRecordErrorInfo(Code: xsd:string, Service: xsd:string, Type: xsd:string, Description: xsd:string, TransactionId: xsd:string, TraceId: xsd:string, CommandHistory: xsd:string, Auxdata: ns2:Auxdata, StackTrace: xsd:string, LocatorCode: ns2:typeLocatorCode, Version: ns2:typeURVersion)
     ns1:UniversalRecordHistorySearchModifiers(ElementType: xsd:string, ({ModifiedDate: xsd:date} | {ModifiedRange: {ModifiedStart: xsd:date, ModifiedEnd: xsd:date}}), MaxResults: ns2:typeMaxResults, StartFromResult: ns2:typeStartFromResult, ModifiedBy: xsd:anyType, DebugMode: xsd:boolean)
     ns1:UniversalRecordHistorySearchReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, UniversalRecordHistorySearchModifiers: ns1:UniversalRecordHistorySearchModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode)
     ns1:UniversalRecordHistorySearchResult(Old: xsd:string, New: xsd:string, ModifiedBy: xsd:string, ModifiedDate: xsd:string, ElementType: xsd:string, Action: xsd:string, TransactionId: xsd:string, AgentOverride: ns2:AgentOverride)
     ns1:UniversalRecordHistorySearchRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecordHistorySearchResult: ns1:UniversalRecordHistorySearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, LastResult: xsd:boolean)
     ns1:UniversalRecordImportReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, UniversalRecordLocatorCode: ns2:typeLocatorCode)
     ns1:UniversalRecordImportRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:UniversalRecordModifyReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ContinuityCheckOverride: ns2:ContinuityCheckOverride, RecordIdentifier: ns1:RecordIdentifier, UniversalModifyCmd: ns1:UniversalModifyCmd[], FileFinishingInfo: ns2:FileFinishingInfo, QueueNextModifiers: ns1:QueueNextModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ReturnRecord: xsd:boolean, Version: ns2:typeURVersion, OverrideMCT: xsd:boolean)
     ns1:UniversalRecordModifyRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, AirSolutionChangedInfo: ns3:AirSolutionChangedInfo[], UniversalModifyFailureInfo: ns1:UniversalModifyFailureInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, QueueSessionToken: xsd:string)
     ns1:UniversalRecordRetrieveReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ({UniversalRecordLocatorCode: ns2:typeLocatorCode} | {ProviderReservationInfo: {ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode}}), TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ViewOnlyInd: xsd:boolean, TravelerLastName: ns2:typeTravelerLastName)
     ns1:UniversalRecordRetrieveRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, Updated: xsd:boolean)
     ns1:UniversalRecordSearchModifiers(TravelDate: ns1:typeDateSpec, IncludeAllNames: xsd:boolean, IncludeAgentInfo: xsd:boolean, MaxResults: ns2:typeMaxResults, StartFromResult: ns2:typeStartFromResult, ExcludeAir: xsd:boolean, ExcludeVehicle: xsd:boolean, ExcludeHotel: xsd:boolean)
     ns1:UniversalRecordSearchReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, UniversalRecordSearchModifiers: ns1:UniversalRecordSearchModifiers, TravelerCriteria: ns1:TravelerCriteria, SearchAgent: ns1:SearchAgent, AirReservationCriteria: ns1:AirReservationCriteria, HotelReservationCriteria: ns1:HotelReservationCriteria, VehicleReservationCriteria: ns1:VehicleReservationCriteria, RailReservationCriteria: ns1:RailReservationCriteria, SearchAccount: ns1:SearchAccount, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ActionDate: xsd:date, RecordStatus: ns2:typeRecordStatus, ClientId: xsd:string, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string, ExternalSearchIndex: ns1:typeExternalSearchIndex, RestrictToProfileId: xsd:anyType, PassiveOnly: xsd:boolean, TicketStatus: ns2:URTicketStatus)
     ns1:UniversalRecordSearchResult(ProductInfo: {Name: ns2:Name[], ProductType: ns2:typeProduct, VendorCode: xsd:string, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string}[], UniversalRecordLocatorCode: xsd:string, EarliestTravelDate: xsd:string, CreatedDate: xsd:string, SavedTripLocatorCode: ns2:typeLocatorCode, Ticketed: ns1:typeReservationTicketed, RecordStatus: ns2:typeRecordStatus, TicketStatus: ns2:URTicketStatus)
     ns1:UniversalRecordSearchRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecordSearchResult: ns1:UniversalRecordSearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, MoreResults: ns2:typeMoreResults)
     ns1:UniversalUpdate(({AccountingRemark: ns2:AccountingRemark[]} | {GeneralRemark: ns2:GeneralRemark[]} | {OSI: ns2:OSI[]} | {UnassociatedRemark: ns2:UnassociatedRemark[]} | {XMLRemark: ns2:XMLRemark[]} | {Postscript: ns2:Postscript} | {BookingTravelerInfo: ns2:BookingTravelerInfo} | {ServiceFeeInfo: ns2:ServiceFeeInfo[]} | {Status: ns1:Status} | {AgencyContactInfo: ns2:AgencyContactInfo} | {CustomerID: ns2:CustomerID} | {CommissionRemark: ns2:CommissionRemark} | {ConsolidatorRemark: ns2:ConsolidatorRemark} | {InvoiceRemark: ns2:InvoiceRemark[]} | {ActionStatus: ns2:ActionStatus} | {ReviewBooking: ns2:ReviewBooking[]} | {OwnershipChange: ns2:OwnershipChange} | {FormOfPayment: ns2:FormOfPayment[]}))
     ns1:UnmaskedDataRemark(PseudoCityCode: ns2:PseudoCityCode[], Key: ns2:typeRef, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns1:VehicleAdd(({LoyaltyCard: ns2:LoyaltyCard[]} | {DriversLicense: ns2:DriversLicense} | {VehicleSpecialRequest: ns4:VehicleSpecialRequest} | {SpecialEquipment: ns2:SpecialEquipment[]} | {PaymentInformation: ns4:PaymentInformation} | {Guarantee: ns2:Guarantee} | {BookingSource: ns2:BookingSource} | {AssociatedRemark: ns4:AssociatedRemark[]} | {DeliveryAddress: ns4:DeliveryAddress} | {CollectionAddress: ns4:CollectionAddress} | {ThirdPartyInformation: ns2:ThirdPartyInformation} | {TravelComplianceData: ns2:TravelComplianceData[]} | {FlightArrivalInformation: ns4:FlightArrivalInformation}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef)
     ns1:VehicleCancelReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, VehicleDateLocation: ns4:VehicleDateLocation, Vehicle: ns4:Vehicle, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, SupplierCode: xsd:string, SupplierLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion)
     ns1:VehicleCancelRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:VehicleCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], ({VehicleDateLocation: ns4:VehicleDateLocation, Vehicle: ns4:Vehicle, SpecialEquipment: ns2:SpecialEquipment[], VehicleSpecialRequest: ns4:VehicleSpecialRequest, PaymentInformation: ns4:PaymentInformation}), PointOfSale: ns2:PointOfSale, ({DeliveryAddress: ns4:DeliveryAddress, CollectionAddress: ns4:CollectionAddress, FlightArrivalInformation: ns4:FlightArrivalInformation}), Guarantee: ns2:Guarantee, ({AssociatedRemark: ns4:AssociatedRemark[]}), BookingSource: ns2:BookingSource, ReservationName: ns2:ReservationName, ThirdPartyInformation: ns2:ThirdPartyInformation, ActionStatus: ns2:ActionStatus, ReviewBooking: ns2:ReviewBooking[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, MandatoryRateMatch: xsd:boolean)
     ns1:VehicleCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:VehicleDelete(ReservationLocatorCode: ns2:typeLocatorCode, Element: ns2:typeElement, Key: ns2:typeRef)
     ns1:VehicleReservationCriteria(PickUpDate: ns1:typeDateSpec, VehicleConfirmation: xsd:string, Location: ns2:typeIATACode, VendorCode: ns2:typeSupplierCode, LocationNumber: xsd:string, PassiveOnly: xsd:boolean)
     ns1:VehicleUpdate(({LoyaltyCard: ns2:LoyaltyCard[]} | {DriversLicense: ns2:DriversLicense} | {Guarantee: ns2:Guarantee} | {BookingSource: ns2:BookingSource} | {VehicleRateInfo: ns4:VehicleRateInfo} | {PaymentInformation: ns4:PaymentInformation} | {AssociatedRemark: ns4:AssociatedRemark[]} | {VehicleSpecialRequest: ns4:VehicleSpecialRequest} | {DeliveryAddress: ns4:DeliveryAddress} | {CollectionAddress: ns4:CollectionAddress} | {VehicleReturnDateLocation: ns4:VehicleReturnDateLocation} | {VehiclePickupDateLocation: ns4:VehiclePickupDateLocation} | {ThirdPartyInformation: ns2:ThirdPartyInformation} | {TravelComplianceData: ns2:TravelComplianceData[]} | {VehicleTypeIdentifier: ns4:VehicleTypeIdentifier} | {FlightArrivalInformation: ns4:FlightArrivalInformation}), ReservationLocatorCode: ns2:typeLocatorCode, BookingTravelerRef: ns2:typeRef)
     ns4:AssociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns4:Charge(Amount: ns2:typeMoney, RatePeriod: xsd:string, IncludedInEstTotalInd: xsd:boolean)
     ns4:CollectionAddress(AddressName: ns2:AddressName, Street: ns2:Street[], City: ns2:City, State: ns2:State, PostalCode: ns2:PostalCode, Country: ns2:Country, ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], PhoneNumber: ns2:PhoneNumber, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns4:DeliveryAddress(AddressName: ns2:AddressName, Street: ns2:Street[], City: ns2:City, State: ns2:State, PostalCode: ns2:PostalCode, Country: ns2:Country, ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], PhoneNumber: ns2:PhoneNumber, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns4:DriverInfo(Age: ns4:Age)
     ns4:Equipment(Type: xsd:string, Description: xsd:string, Quantity: xsd:integer, Status: ns2:typeStatusCode)
     ns4:FlightArrivalInformation(Carrier: ns2:typeCarrier, FlightNumber: ns4:FlightNumber, Key: ns2:typeRef)
     ns4:IncludedItem(Code: xsd:string, Description: xsd:string)
     ns4:LocationInfo(LocationAddress: ns2:typeStructuredAddress[], PhoneNumber: ns2:PhoneNumber[], OperationTime: xsd:string[], ShuttleInfo: xsd:string, Name: xsd:string, CounterLocation: xsd:string, PreferredOption: xsd:boolean)
     ns4:LocationInformation(Address: ns2:typeStructuredAddress, LocationType: ns2:typeVehicleLocation, AreaGroup: xsd:string, Location: ns2:typeIATACode, AreaType: ns4:typeAreaInfo)
     ns4:OperationTime(xsd:string)
     ns4:PaymentInformation(Voucher: ns2:typeVoucherInformation, BillingNumber: xsd:string, BillingReferenceNumber: xsd:string, PrePayment: ns4:PrePayment, Key: ns2:typeRef)
     ns4:Policy(ns2:typeKeyword)
     ns4:PricedEquip(Equipment: ns4:Equipment, Charge: ns4:Charge)
     ns4:RateInclusions(IncludedItem: ns4:IncludedItem[])
     ns4:RateModifiers(RateCode: ns2:typeRateCode, DiscountNumber: ns2:typeDiscountNumber, VendorCode: ns2:typeSupplierCode, PromotionalCode: xsd:string, VendorLocationRef: xsd:string, TourCode: xsd:string)
     ns4:SupplierRate(ns4:typeVehicleRates, EstimatedTotalAmount: ns2:typeMoney, BaseRate: ns2:typeMoney, RateForPeriod: ns2:typeMoney, DropOffCharge: ns2:typeMoney, YoungDriverCharge: ns2:typeMoney, SeniorDriverCharge: ns2:typeMoney, FuelSurcharge: ns2:typeMoney, ExtraMileageCharge: ns2:typeMoney, PayNow: ns2:typeMoney, PayLater: ns2:typeMoney, DiscountAmount: ns2:typeMoney, MandatoryChargeTotal: ns2:typeMoney, ApproximateTotal: ns2:typeMoney)
     ns4:Vehicle(PolicyCodesList: ns2:typePolicyCodesList, VehicleRate: ns4:VehicleRate, VendorCode: ns2:typeSupplierCode, AirConditioning: xsd:boolean, TransmissionType: ns2:typeVehicleTransmission, VehicleClass: ns2:typeVehicleClass, Category: ns2:typeVehicleCategory, Description: xsd:string, DoorCount: ns2:typeDoorCount, Location: xsd:string, CounterLocationCode: ns4:CounterLocationCode, VendorLocationKey: ns2:typeRef, VendorName: ns4:VendorName, AlternateVendor: xsd:string, FuelType: ns2:typeFuel, AcrissVehicleCode: ns4:AcrissVehicleCode, Key: ns2:typeRef, ReturnAtPickup: xsd:boolean, InPolicy: xsd:boolean, PolicyCode: ns2:typePolicyCode, PreferredOption: xsd:boolean)
     ns4:VehicleDateLocation(VendorLocation: {Distance: ns2:Distance, ProviderCode: ns2:typeProviderCode, VendorCode: ns2:typeSupplierCode, PreferredOption: xsd:boolean, VendorLocationID: ns2:VendorLocationID, Key: ns2:typeRef, MoreRatesToken: ns2:MoreRatesToken, LocationType: ns2:typeVehicleLocation, LocationCode: ns2:typeIATACode, Type: ns4:Type}[], PickupDateTime: xsd:string, PickupLocation: ns2:typeIATACode, ReturnDateTime: xsd:string, ReturnLocation: ns2:typeIATACode, PickupLocationType: ns2:typeVehicleLocation, ReturnLocationType: ns2:typeVehicleLocation, PickupLocationNumber: xsd:string, ReturnLocationNumber: xsd:string, Key: ns2:typeRef)
     ns4:VehicleDetail(Code: xsd:string, SupplierCode: xsd:string, PassengerCount: xsd:string, NumberOfDoors: xsd:string, BagCount: xsd:string, Class: ns2:typeVehicleClass, Category: ns2:typeVehicleCategory, AirConditioning: xsd:boolean, Transmission: ns2:typeVehicleTransmission, MakeModel: xsd:string, FuelType: ns2:typeFuel, AcrissVehicleCode: ns4:AcrissVehicleCode, PreferredOption: xsd:boolean)
     ns4:VehicleDisclaimer(xsd:string, Type: ns4:typeVehicleDisclaimer, SubType: xsd:string, Description: xsd:string)
     ns4:VehicleLocation(VendorLocation: ns2:VendorLocation, Distance: ns2:Distance, CoordinateLocation: ns2:CoordinateLocation, LocationInformation: ns4:LocationInformation)
     ns4:VehicleModifier(AirConditioning: xsd:boolean, TransmissionType: ns2:typeVehicleTransmission, VehicleClass: ns2:typeVehicleClass, Category: ns2:typeVehicleCategory, DoorCount: ns2:typeDoorCount, FuelType: ns2:typeFuel)
     ns4:VehiclePickupDateLocation(PickupDateTime: xsd:dateTime, PickupLocation: ns2:typeIATACode, PickupLocationType: ns2:typeVehicleLocation, PickupLocationNumber: xsd:string)
     ns4:VehiclePickupLocation(Vendor: ns4:Vendor, VehicleModifier: ns4:VehicleModifier[], PickUpLocation: ns2:typeIATACode)
     ns4:VehiclePolicy(VehicleDisclaimer: ns4:VehicleDisclaimer[], VehicleDetail: ns4:VehicleDetail[])
     ns4:VehicleRate(SupplierRate: ns4:SupplierRate, RateVariance: ns4:typeRateVariance, ApproximateRate: ns4:typeVehicleRates, VehicleRateDescription: ns4:typeVehicleRateDescription[], RateHostIndicator: ns4:typeRateHostIndicator, HourlyLateCharge: ns4:typeRateInfo, DailyLateCharge: ns4:typeRateInfo, PricedEquip: ns4:PricedEquip[], RateInclusions: ns4:RateInclusions, WeeklyLateCharge: ns4:typeRateInfo, PrintText: xsd:string, RatePeriod: ns2:typeRateTimePeriod, NumberOfPeriods: xsd:int, UnlimitedMileage: xsd:boolean, MileageAllowance: xsd:int, Units: ns2:typeDistance, RateSource: xsd:string, RateAvailability: ns4:typeRateAvailability, RequiredCharges: ns2:typeMoney, RateCode: ns2:typeRateCode, RequestedRateCodeApplied: ns2:typeTrinary, RateCategory: ns2:typeRateCategory, DiscountNumber: ns2:typeDiscountNumber, DiscountNumberApplied: ns2:typeTrinary, VendorCode: ns2:typeSupplierCode, RateGuaranteed: xsd:boolean, RateCodePeriod: xsd:string, PromotionalCode: xsd:string, PromotionalCodeApplied: ns2:typeTrinary, TourCode: xsd:string, TourCodeApplied: ns2:typeTrinary, RateGuaranteeType: ns2:typeRateGuarantee, RequiredPayment: ns4:RequiredPayment, DropOffChargesIncluded: xsd:boolean, CorporateRate: xsd:boolean, AdvancedBooking: xsd:string, RentalRestriction: xsd:boolean, FlightRestriction: xsd:boolean, CardNumber: ns2:typeCardNumber, CardNumberApplied: ns2:typeTrinary, RateQualifierInd: xsd:positiveInteger)
     ns4:VehicleRateInfo(TourCode: xsd:string, DiscountNumber: ns2:typeDiscountNumber, PromotionalCode: xsd:string)
     ns4:VehicleReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, BookingTravelerRef: ns2:BookingTravelerRef[], ReservationName: ns2:ReservationName, VehicleDateLocation: ns4:VehicleDateLocation, Vehicle: ns4:Vehicle, SpecialEquipment: ns2:SpecialEquipment[], VehicleSpecialRequest: ns4:VehicleSpecialRequest, PaymentInformation: ns4:PaymentInformation, DeliveryAddress: ns4:DeliveryAddress, CollectionAddress: ns4:CollectionAddress, FlightArrivalInformation: ns4:FlightArrivalInformation, Guarantee: ns2:Guarantee, AssociatedRemark: ns4:AssociatedRemark[], BookingSource: ns2:BookingSource, ThirdPartyInformation: ns2:ThirdPartyInformation, SellMessage: xsd:string[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string, SupplierCode: xsd:string, BookingConfirmation: xsd:string, Status: xsd:string, ProviderReservationInfoRef: ns2:typeRef, PassiveProviderReservationInfoRef: ns2:typeRef, TravelOrder: xsd:integer, ProviderSegmentOrder: ns4:ProviderSegmentOrder)
     ns4:VehicleReturnDateLocation(ReturnDateTime: xsd:string, ReturnLocation: ns2:typeIATACode, ReturnLocationType: ns2:typeVehicleLocation, ReturnLocationNumber: xsd:string)
     ns4:VehicleSearchId(MediaLinksSearchId: xsd:string)
     ns4:VehicleSearchModifiers(PermittedVendors: {Vendor: ns4:Vendor[]}, ProhibitedVendors: {Vendor: ns4:Vendor[]}, VehicleModifier: ns4:VehicleModifier[], VehicleType: ns4:VehicleType[], RateModifiers: ns4:RateModifiers[], RateHostIndicator: ns4:typeRateHostIndicator, LoyaltyCard: ns2:LoyaltyCard[], ReferencePoint: ns2:typeReferencePoint, BookingSource: ns2:BookingSource, SpecialEquipment: ns2:SpecialEquipment[], SearchDistance: ns4:typeVehicleSearchDistance, Policy: ns2:typeKeyword[], DriverInfo: ns4:DriverInfo, Key: ns2:typeRef, PreferredCurrency: ns2:typeCurrency, UnlimitedMileage: xsd:boolean, RateCategory: ns2:typeRateCategory, RateGuaranteed: xsd:boolean, RatePeriod: ns2:typeRateTimePeriod, SellableRatesOnly: xsd:boolean)
     ns4:VehicleSpecialRequest(ns2:typeGeneralText, Key: ns2:typeRef)
     ns4:VehicleType(ns4:typeVehicleTypes)
     ns4:VehicleTypeIdentifier(AirConditioning: xsd:boolean, TransmissionType: ns2:typeVehicleTransmission, VehicleClass: ns2:typeVehicleClass, Category: ns2:typeVehicleCategory, DoorCount: ns2:typeDoorCount, FuelType: ns2:typeFuel)
     ns4:VehicleWithMediaItems(Vehicle: ns4:Vehicle, MediaItem: ns2:MediaItem[], MediaResultMessage: ns2:typeResultMessage[])
     ns4:Vendor(Code: ns2:typeSupplierCode)
     ns4:VendorInfo(Code: ns2:typeSupplierCode, Name: xsd:string)
     ns0:SessionContext(({SessTok: {id: xsd:string}} | {SessProp: {nm: xsd:string, val: xsd:string}[]}))


Global types:
     xsd:anyType
     ns3:ADVType(AdvRsvnOnlyIfTk: xsd:boolean, AdvRsvnAnyTm: xsd:boolean, AdvRsvnHrs: xsd:boolean, AdvRsvnDays: xsd:boolean, AdvRsvnMonths: xsd:boolean, AdvRsvnEarliestTm: xsd:boolean, AdvRsvnLatestTm: xsd:boolean, AdvRsvnWaived: xsd:boolean, AdvRsvnDataExists: xsd:boolean, AdvRsvnEndItem: xsd:boolean, AdvTkEarliestTm: xsd:boolean, AdvTkLatestTm: xsd:boolean, AdvTkRsvnHrs: xsd:boolean, AdvTkRsvnDays: xsd:boolean, AdvTkRsvnMonths: xsd:boolean, AdvTkStartHrs: xsd:boolean, AdvTkStartDays: xsd:boolean, AdvTkStartMonths: xsd:boolean, AdvTkWaived: xsd:boolean, AdvTkAnyTm: xsd:boolean, AdvTkEndItem: xsd:boolean, AdvRsvnTm: xsd:integer, AdvTkRsvnTm: xsd:integer, AdvTkStartTm: xsd:integer, EarliestRsvnDtPresent: xsd:boolean, EarliestTkDtPresent: xsd:boolean, LatestRsvnDtPresent: xsd:boolean, LatestTkDtPresent: xsd:boolean, EarliestRsvnDt: xsd:date, EarliestTkDt: xsd:date, LatestRsvnDt: xsd:date, LatestTkDt: xsd:date)
     ns3:BaseBaggageAllowanceInfo(URLInfo: ns3:URLInfo[], TextInfo: ns3:TextInfo[], Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, Carrier: ns2:typeCarrier)
     ns3:CHGType(PenFee: ns3:PenFeeType[])
     ns3:MAXType(HoursMax: xsd:boolean, DaysMax: xsd:boolean, MonthsMax: xsd:boolean, OccurIndMax: xsd:boolean, SameDayMax: xsd:boolean, StartIndMax: xsd:boolean, CompletionInd: xsd:boolean, TmDOWMax: xsd:integer, NumOccurMax: xsd:integer)
     ns3:MINType(HoursMin: xsd:boolean, DaysMin: xsd:boolean, MonthsMin: xsd:boolean, OccurIndMin: xsd:boolean, SameDayMin: xsd:boolean, TmDOWMin: xsd:integer, FareComponent: xsd:integer, NumOccurMin: xsd:integer)
     ns3:MaxLayoverDurationRangeType
     ns3:MaxLayoverDurationType(Domestic: ns3:MaxLayoverDurationRangeType, Gateway: ns3:MaxLayoverDurationRangeType, International: ns3:MaxLayoverDurationRangeType)
     ns3:OTHType(Cat0: xsd:boolean, Cat1: xsd:boolean, Cat2: xsd:boolean, Cat3: xsd:boolean, Cat4: xsd:boolean, Cat5: xsd:boolean, Cat6: xsd:boolean, Cat7: xsd:boolean, Cat8: xsd:boolean, Cat9: xsd:boolean, Cat10: xsd:boolean, Cat11: xsd:boolean, Cat12: xsd:boolean, Cat13: xsd:boolean, Cat14: xsd:boolean, Cat15: xsd:boolean, Cat16: xsd:boolean, Cat17: xsd:boolean, Cat18: xsd:boolean, Cat19: xsd:boolean, Cat20: xsd:boolean, Cat21: xsd:boolean, Cat22: xsd:boolean, Cat23: xsd:boolean, Cat24: xsd:boolean, Cat25: xsd:boolean, Cat26: xsd:boolean, Cat27: xsd:boolean, Cat28: xsd:boolean, Cat29: xsd:boolean, Cat30: xsd:boolean, Cat31: xsd:boolean, RestrictiveDt: xsd:date, SurchargeAmt: xsd:decimal, NotUSACity: xsd:boolean, MissingRules: xsd:boolean)
     ns3:PenFeeType(DepRequired: xsd:boolean, DepNonRef: xsd:boolean, TkNonRef: xsd:boolean, AirVFee: xsd:boolean, Cancellation: xsd:boolean, FailConfirmSpace: xsd:boolean, ItinChg: xsd:boolean, ReplaceTk: xsd:boolean, Applicable: xsd:boolean, ApplicableTo: xsd:boolean, Amt: xsd:decimal, Type: xsd:string, Currency: xsd:string)
     ns3:PriceChangeType(xsd:string, Amount: xsd:string, Carrier: xsd:string, SegmentRef: xsd:string)
     ns3:typeATPCOGlobalIndicator
     ns3:typeAirReservationWithFOP(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, OptionalServices: ns3:OptionalServices, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], DocumentInfo: ns3:DocumentInfo, BookingTravelerRef: ns2:BookingTravelerRef[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], AirSegment: ns3:typeBaseAirSegment[], SvcSegment: ns3:SvcSegment[], AirPricingInfo: ns3:AirPricingInfo[], Payment: ns2:Payment[], CreditCardAuth: ns2:CreditCardAuth[], FareNote: ns3:FareNote[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns3:typeTaxInfoWithPaymentRef[], TicketingModifiers: ns3:TicketingModifiers[], AssociatedRemark: ns3:AssociatedRemark[], PocketItineraryRemark: ns3:PocketItineraryRemark[], AirExchangeBundleTotal: ns3:AirExchangeBundleTotal, AirExchangeBundle: ns3:AirExchangeBundle[], FormOfPayment: ns2:FormOfPayment[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string)
     ns3:typeAlliance
     ns3:typeAnchorFlightData(AirlineCode: ns2:typeCarrier, FlightNumber: ns2:typeFlightNumber, ConnectionIndicator: xsd:boolean)
     ns3:typeApplicableSegment(Key: ns2:typeRef, AirItineraryDetailsRef: ns2:typeRef, BookingCounts: xsd:string)
     ns3:typeAssessIndicator
     ns3:typeAvailabilitySource
     ns3:typeBackOffice
     ns3:typeBaseAirReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, OptionalServices: ns3:OptionalServices, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], DocumentInfo: ns3:DocumentInfo, BookingTravelerRef: ns2:BookingTravelerRef[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], AirSegment: ns3:typeBaseAirSegment[], SvcSegment: ns3:SvcSegment[], AirPricingInfo: ns3:AirPricingInfo[], Payment: ns2:Payment[], CreditCardAuth: ns2:CreditCardAuth[], FareNote: ns3:FareNote[], FeeInfo: ns2:typeFeeInfo[], TaxInfo: ns3:typeTaxInfoWithPaymentRef[], TicketingModifiers: ns3:TicketingModifiers[], AssociatedRemark: ns3:AssociatedRemark[], PocketItineraryRemark: ns3:PocketItineraryRemark[], AirExchangeBundleTotal: ns3:AirExchangeBundleTotal, AirExchangeBundle: ns3:AirExchangeBundle[], LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string)
     ns3:typeBaseAirSegment(SegmentRemark: ns2:SegmentRemark[], SponsoredFltInfo: ns3:SponsoredFltInfo, CodeshareInfo: ns3:CodeshareInfo, AirAvailInfo: ns3:AirAvailInfo[], FlightDetails: ns3:FlightDetails[], FlightDetailsRef: ns3:FlightDetailsRef[], AlternateLocationDistanceRef: ns3:AlternateLocationDistanceRef[], Connection: ns3:Connection, SellMessage: xsd:string[], RailCoachDetails: ns3:RailCoachDetails[], Key: ns2:typeRef, Status: xsd:string, Passive: xsd:boolean, TravelOrder: xsd:integer, ProviderSegmentOrder: ns2:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, OpenSegment: xsd:boolean, Group: xsd:int, Carrier: ns2:typeCarrier, CabinClass: xsd:string, FlightNumber: ns2:typeFlightNumber, Origin: ns2:typeIATACode, Destination: ns2:typeIATACode, DepartureTime: xsd:string, ArrivalTime: xsd:string, FlightTime: xsd:integer, TravelTime: xsd:integer, Distance: xsd:integer, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, ParticipantLevel: xsd:string, LinkAvailability: xsd:boolean, PolledAvailabilityOption: xsd:string, AvailabilityDisplayType: xsd:string, ClassOfService: ns2:typeClassOfService, ETicketability: ns3:typeEticketability, Equipment: ns3:typeEquipment, MarriageGroup: xsd:int, NumberOfStops: xsd:int, Seamless: xsd:boolean, ChangeOfPlane: xsd:boolean, GuaranteedPaymentCarrier: xsd:string, HostTokenRef: xsd:string, ProviderReservationInfoRef: ns2:typeRef, PassiveProviderReservationInfoRef: ns2:typeRef, OptionalServicesIndicator: xsd:boolean, AvailabilitySource: ns3:typeAvailabilitySource, APISRequirementsRef: xsd:string, BlackListed: xsd:boolean, OperationalStatus: xsd:string, NumberInParty: ns3:NumberInParty, RailCoachNumber: ns3:RailCoachNumber, BookingDate: xsd:date, FlownSegment: xsd:boolean, ScheduleChange: xsd:boolean, BrandIndicator: xsd:string)
     ns3:typeBillingDetailsDataType
     ns3:typeBillingDetailsName
     ns3:typeBooking
     ns3:typeBrandId
     ns3:typeBulkTicketModifierType(SuppressOnFareCalc: xsd:boolean)
     ns3:typeCarCode
     ns3:typeCarrierCode
     ns3:typeConnectionIndicator
     ns3:typeCouponStatus
     ns3:typeDaysOfOperation(Mon: xsd:boolean, Tue: xsd:boolean, Wed: xsd:boolean, Thu: xsd:boolean, Fri: xsd:boolean, Sat: xsd:boolean, Sun: xsd:boolean)
     ns3:typeDefaultBrandDetail(Text: ns3:typeTextElement[], ImageLocation: ns3:ImageLocation[], ApplicableSegment: ns3:typeApplicableSegment[], BrandID: ns3:typeBrandId)
     ns3:typeDestinationCode
     ns3:typeDisplayCategory
     ns3:typeDiversity
     ns3:typeEMDNumber
     ns3:typeEquipment
     ns3:typeEticketability
     ns3:typeFacility
     ns3:typeFailureInfo(Code: xsd:integer, Message: xsd:string)
     ns3:typeFareBreak
     ns3:typeFareDirectionality
     ns3:typeFareDiscount
     ns3:typeFareGuarantee
     ns3:typeFarePenalty(Amount: ns2:typeMoney, Percentage: ns2:typePercentageWithDecimal, PenaltyApplies: ns3:PenaltyApplies, NoShow: xsd:boolean)
     ns3:typeFareRestrictionType
     ns3:typeFareRuleCategoryCode
     ns3:typeFareRuleFailureInfoReason
     ns3:typeFareRuleType
     ns3:typeFareStatusCode
     ns3:typeFareTripType
     ns3:typeFareTypeCode
     ns3:typeFaresIndicator
     ns3:typeFeeApplication
     ns3:typeIgnoreStopOver
     ns3:typeInventoryRequest
     ns3:typeItinerary
     ns3:typeItineraryOption
     ns3:typeLowFareSearchId
     ns3:typeMaxJourneyTime
     ns3:typeMealService
     ns3:typeMileOrRouteBasedFare
     ns3:typeNativeSearchModifier(xsd:string, ProviderCode: ns2:typeProviderCode)
     ns3:typeNonAirReservationRef(LocatorCode: ns2:typeLocatorCode)
     ns3:typeNumberOfPassengers
     ns3:typeOverrideOption
     ns3:typePassengerTicketNumber
     ns3:typePosition
     ns3:typePricingMethod
     ns3:typePrivateFare
     ns3:typePurposeCode
     ns3:typeRefundabilityValue
     ns3:typeReportingType
     ns3:typeRestrictionLengthOfStay(Length: xsd:integer, StayUnit: ns3:typeStayUnit, StayDate: xsd:date, MoreRulesPresent: xsd:boolean)
     ns3:typeRowLocation
     ns3:typeSeatAvailability
     ns3:typeSegmentRef(Key: ns2:typeRef)
     ns3:typeStayUnit
     ns3:typeSubCode
     ns3:typeTCRNumber
     ns3:typeTCRStatus
     ns3:typeTaxInfoWithPaymentRef(TaxDetail: ns2:TaxDetail[], IncludedInBase: ns2:IncludedInBase, PaymentRef: ns3:PaymentRef[], Key: ns2:typeRef, Category: xsd:string, CarrierDefinedCategory: xsd:string, SegmentRef: ns2:typeRef, FlightDetailsRef: ns2:typeRef, CouponRef: ns2:typeRef, Amount: ns2:typeMoney, OriginAirport: ns2:typeAirport, DestinationAirport: ns2:typeAirport, CountryCode: xsd:string, FareInfoRef: ns2:typeRef, TaxExempted: xsd:boolean, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, Text: ns2:StringLength1to128)
     ns3:typeTextElement(xsd:string, Type: xsd:string, LanguageCode: xsd:language)
     ns3:typeTicketDesignator
     ns3:typeTicketFailureInfo(({TicketNumber: ns2:StringLength1to13, Name: ns2:Name} | {TCRNumber: ns3:typeTCRNumber}), BookingTravelerRef: ns2:typeRef[], Code: xsd:integer, Message: xsd:string)
     ns3:typeTicketModifierAccountingType(Value: xsd:string)
     ns3:typeTicketModifierAmountType(Amount: ns2:typeMoney)
     ns3:typeTicketModifierPercentType(Percent: ns2:typePercentageWithDecimal)
     ns3:typeTicketModifierValueType(Value: xsd:string, NetFareValue: xsd:boolean)
     ns3:typeTicketingModifiersRef(AirPricingInfoRef: ns3:AirPricingInfoRef[], Key: ns2:typeRef)
     ns3:typeTourCode
     ns3:typeTripType
     ns3:typeUnitOfMeasure(Value: xsd:float, Unit: xsd:string)
     ns3:typeUnitWeight
     ns3:typeValueCode
     ns3:typeVarianceIndicator
     ns3:typeVarianceType
     ns3:typeWeight(Value: xsd:integer, Unit: ns3:typeUnitWeight)
     ns2:BaseAsyncProviderSpecificResponse(ProviderCode: ns2:typeProviderCode, MoreResults: xsd:boolean)
     ns2:BaseCoreReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language)
     ns2:BaseCoreSearchReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, NextResultReference: ns2:NextResultReference[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language)
     ns2:BaseCreateReservationReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer)
     ns2:BaseCreateWithFormOfPaymentReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer)
     ns2:BaseReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean)
     ns2:BaseReservation(AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], Restriction: ns2:Restriction[], PassiveInfo: ns2:PassiveInfo, LocatorCode: ns2:typeLocatorCode, CreateDate: xsd:string, ModifiedDate: xsd:string, CustomerNumber: xsd:string)
     ns2:BaseRsp(ResponseMessage: ns2:ResponseMessage[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns2:BaseSearchReq(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, NextResultReference: ns2:NextResultReference[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean)
     ns2:BaseSearchRsp(ResponseMessage: ns2:ResponseMessage[], NextResultReference: ns2:NextResultReference[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns2:FormattedTextTextType(xsd:string, Formatted: xsd:boolean, Language: xsd:language, TextFormat: ns2:TextFormat)
     ns2:Location()
     ns2:MCOInformation(PassengerInfo: ns2:PassengerInfo[], MCONumber: xsd:string, Status: xsd:string, MCOType: xsd:string)
     ns2:ModificationType
     ns2:Numeric0to999
     ns2:OptionalServiceApplicabilityType
     ns2:OptionalServiceApplicationLimitType(ApplicableLevel: ns2:OptionalServiceApplicabilityType, ProviderDefinedApplicableLevels: xsd:string, MaximumQuantity: xsd:positiveInteger, MinimumQuantity: xsd:positiveInteger)
     ns2:SeatAssignment(Key: ns2:typeRef, Status: ns2:typeStatusCode, Seat: xsd:string, SeatTypeCode: ns2:typeSeatTypeCode, SegmentRef: ns2:typeRef, FlightDetailsRef: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, RailCoachNumber: xsd:string)
     ns2:Segment(SegmentRemark: ns2:SegmentRemark[], Key: ns2:typeRef, Status: xsd:string, Passive: xsd:boolean, TravelOrder: xsd:integer, ProviderSegmentOrder: ns2:ProviderSegmentOrder, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:ServiceRuleType(ApplicationRules: {RequiredForAllTravelers: xsd:boolean, RequiredForAllSegments: xsd:boolean, RequiredForAllSegmentsInOD: xsd:boolean, UnselectedOptionRequired: xsd:boolean, SecondaryOptionCodeRequired: xsd:boolean}, ApplicationLevel: {ApplicationLimits: {ApplicationLimit: ns2:OptionalServiceApplicationLimitType[]}, ServiceData: ns2:ServiceData[], ApplicableLevels: ns2:OptionalServiceApplicabilityType[], ProviderDefinedApplicableLevels: xsd:string}, ModifyRules: {ModifyRule: {Modification: ns2:ModificationType, AutomaticallyAppliedOnAdd: xsd:boolean, CanDelete: xsd:boolean, CanAdd: xsd:boolean, Refundable: xsd:boolean, ProviderDefinedModificationType: xsd:string}[], SupportedModifications: ns2:ModificationType[], ProviderDefinedModificationType: xsd:string}, SecondaryTypeRules: {SecondaryTypeRule: {ApplicationLimit: ns2:OptionalServiceApplicationLimitType[], SecondaryType: ns2:typeRef}[]}, Remarks: ns2:FormattedTextTextType[], Key: ns2:typeRef)
     ns2:StringLength1
     ns2:StringLength1to10
     ns2:StringLength1to100
     ns2:StringLength1to1000
     ns2:StringLength1to1024
     ns2:StringLength1to116
     ns2:StringLength1to12
     ns2:StringLength1to128
     ns2:StringLength1to13
     ns2:StringLength1to14
     ns2:StringLength1to15
     ns2:StringLength1to16
     ns2:StringLength1to20
     ns2:StringLength1to2000
     ns2:StringLength1to25
     ns2:StringLength1to250
     ns2:StringLength1to255
     ns2:StringLength1to3
     ns2:StringLength1to30
     ns2:StringLength1to32
     ns2:StringLength1to5
     ns2:StringLength1to50
     ns2:StringLength1to500
     ns2:StringLength1to64
     ns2:StringLength1to8
     ns2:StringLength1to99
     ns2:StringLength3
     ns2:StringLength6to128
     ns2:URTicketStatus
     ns2:typeAccountID
     ns2:typeAdjustmentTarget
     ns2:typeAdjustmentType
     ns2:typeAgencyHierarchyLongReference(ns2:typeAgencyHierarchyReference, ProfileID: ns2:typeProfileID, ProfileType: ns2:typeAgencyProfileLevel, ProfileVersion: xsd:int, ProfileName: ns2:ProfileName)
     ns2:typeAgencyHierarchyReference(ProfileID: ns2:typeProfileID, ProfileType: ns2:typeAgencyProfileLevel)
     ns2:typeAgencyID
     ns2:typeAgencyPayment(AgencyBillingIdentifier: ns2:AgencyBillingIdentifier, AgencyBillingNumber: ns2:AgencyBillingNumber, AgencyBillingPassword: ns2:AgencyBillingPassword)
     ns2:typeAgencyProfileLevel
     ns2:typeAgentCode
     ns2:typeAgentInfo()
     ns2:typeAirport
     ns2:typeAssociatedRemark(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:typeAssociatedRemarkWithSegmentRef(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode, Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean, SegmentRef: ns2:typeRef)
     ns2:typeBookingTransactionsAllowed(BookingEnabled: xsd:boolean)
     ns2:typeBranchCode
     ns2:typeBranchId
     ns2:typeCardMerchantType
     ns2:typeCardNumber
     ns2:typeCarrier
     ns2:typeCity
     ns2:typeClassOfService
     ns2:typeCommissionLevel
     ns2:typeCommissionModifier
     ns2:typeCommissionType
     ns2:typeCountry
     ns2:typeCreditCardNumber
     ns2:typeCreditCardType(PhoneNumber: ns2:PhoneNumber, BillingAddress: ns2:typeStructuredAddress, Type: ns2:typeCardMerchantType, Number: ns2:typeCreditCardNumber, ExpDate: xsd:gYearMonth, Name: ns2:Name, CVV: ns2:CVV, ApprovalCode: ns2:ApprovalCode, ExtendedPayment: xsd:string, CustomerReference: xsd:string, AcceptanceOverride: xsd:boolean, ThirdPartyPayment: xsd:boolean, BankName: xsd:string, BankCountryCode: ns2:typeCountry, BankStateCode: ns2:typeState, Enett: xsd:boolean)
     ns2:typeCurrency
     ns2:typeDate
     ns2:typeDateRange(StartDate: xsd:date, EndDate: xsd:date)
     ns2:typeDirection
     ns2:typeDiscountNumber
     ns2:typeDistance
     ns2:typeDoorCount
     ns2:typeDurationYearInDays
     ns2:typeElement
     ns2:typeElementStatus
     ns2:typeEmailComment
     ns2:typeEmailType
     ns2:typeEndorsement
     ns2:typeErrorInfo(Code: xsd:string, Service: xsd:string, Type: xsd:string, Description: xsd:string, TransactionId: xsd:string, TraceId: xsd:string, CommandHistory: xsd:string, Auxdata: ns2:Auxdata, StackTrace: xsd:string)
     ns2:typeEventType
     ns2:typeExternalReference
     ns2:typeFareBasisCode
     ns2:typeFareFamily
     ns2:typeFarePull
     ns2:typeFeeInfo(TaxInfoRef: {Key: ns2:typeRef}[], IncludedInBase: ns2:IncludedInBase, BaseAmount: ns2:typeMoney, Description: xsd:string, SubCode: xsd:string, Key: ns2:typeRef, Amount: ns2:typeMoney, Code: xsd:string, FeeToken: xsd:string, PaymentRef: ns2:typeRef, BookingTravelerRef: ns2:typeRef, PassengerTypeCode: ns2:typePTC, Text: ns2:StringLength1to64, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:typeFlexibleTimeSpec(({TimeRange: ns2:typeTimeRange} | {SpecificTime: ns2:typeSpecificTime}), SearchExtraDays: {DaysBefore: xsd:int, DaysAfter: xsd:int}, PreferredTime: xsd:string)
     ns2:typeFlightNumber
     ns2:typeFormOfPaymentPNRReference(Key: ns2:typeRef, ProviderReservationLevel: xsd:boolean)
     ns2:typeFormOfRefund
     ns2:typeFreeFormText(xsd:string)
     ns2:typeFuel
     ns2:typeFulfillmentIDType
     ns2:typeFulfillmentType
     ns2:typeGdsAccountingRemark
     ns2:typeGdsRemark
     ns2:typeGender
     ns2:typeGeneralReference(Key: ns2:typeRef)
     ns2:typeGeneralText
     ns2:typeGuaranteeInformation(Type: ns2:Type, AgencyType: ns2:AgencyType, IATANumber: ns2:StringLength1to128)
     ns2:typeHotelChainCode
     ns2:typeHotelCode
     ns2:typeIATA
     ns2:typeIATACode
     ns2:typeImageSize
     ns2:typeIntegerPercentage
     ns2:typeInvoiceRecordCategory
     ns2:typeItineraryCode
     ns2:typeItineraryType
     ns2:typeKeyBasedReference(Key: ns2:typeRef)
     ns2:typeKeyword(SubKey: ns2:typeSubKey[], Text: xsd:string[], Name: ns2:Name, Number: xsd:anyType, Description: xsd:anyType)
     ns2:typeLanguage
     ns2:typeLicenseCode
     ns2:typeLocation(({Airport: ns2:Airport} | {City: ns2:City} | {CityOrAirport: ns2:CityOrAirport}))
     ns2:typeLocatorCode
     ns2:typeLoggingLevel
     ns2:typeMCOFeeType
     ns2:typeMCOStatus
     ns2:typeMCOType
     ns2:typeMaxResults
     ns2:typeMaxResults1to100
     ns2:typeMerchandisingService
     ns2:typeMoney
     ns2:typeMoreResults
     ns2:typeNonAirReservationRef(LocatorCode: ns2:typeLocatorCode)
     ns2:typeNonBlanks
     ns2:typeOTACode
     ns2:typeOTAKeyword(SubKey: ns2:typeOTASubKey[], Text: xsd:string[], Name: ns2:Name, Number: xsd:anyType, Description: xsd:anyType)
     ns2:typeOTASubKey(Text: xsd:string[], Name: ns2:typeOTACode, Description: xsd:string)
     ns2:typeOtherImageSize
     ns2:typePCC
     ns2:typePTC
     ns2:typePassengerType(Name: ns2:Name, LoyaltyCard: ns2:LoyaltyCard[], DiscountCard: ns2:DiscountCard[], PersonalGeography: ns2:PersonalGeography, Code: ns2:typePTC, Age: xsd:integer, DOB: xsd:date, Gender: ns2:typeGender, PricePTCOnly: xsd:boolean, BookingTravelerRef: xsd:string, AccompaniedPassenger: xsd:boolean, ResidencyType: ns2:typeResidency)
     ns2:typePaymentCard(PhoneNumber: ns2:PhoneNumber, BillingAddress: ns2:typeStructuredAddress, Type: ns2:typeCardMerchantType, Number: ns2:typeCreditCardNumber, ExpDate: xsd:gYearMonth, Name: ns2:Name, CVV: ns2:CVV, ApprovalCode: ns2:ApprovalCode)
     ns2:typePercentageWithDecimal
     ns2:typePolicy
     ns2:typePolicyCode
     ns2:typePolicyCodesList(PolicyCode: ns2:PolicyCode[], MinPolicyCode: ns2:MinPolicyCode[], MaxPolicyCode: ns2:MaxPolicyCode[])
     ns2:typePolicyReference
     ns2:typePriceClassOfService
     ns2:typePricingType
     ns2:typePriorityCode
     ns2:typeProduct
     ns2:typeProfileApplicability
     ns2:typeProfileEntityStatus
     ns2:typeProfileEntityStatusWithDelete
     ns2:typeProfileID
     ns2:typeProfileLevel
     ns2:typeProfileLevelWithCredential
     ns2:typeProfileLevelWithSystem
     ns2:typeProfileRef(ProfileEntityID: xsd:string, ProfileLevel: ns2:typeProfileLevel)
     ns2:typeProfileType
     ns2:typeProviderCode
     ns2:typeProviderLocatorCode
     ns2:typeProviderReservationDetail(ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode)
     ns2:typeProviderReservationSpecificInfo(OperatedBy: ns2:OperatedBy[], ProviderReservationInfoRef: ns2:ProviderReservationInfoRef, ProviderReservationLevel: xsd:boolean, ReservationLevel: xsd:boolean)
     ns2:typeProviderToken
     ns2:typeProvisioningCode
     ns2:typePurchaseWindow
     ns2:typeQueueModifyAction
     ns2:typeRailCabin
     ns2:typeRailClass
     ns2:typeRailLocationCode
     ns2:typeRailSearchType
     ns2:typeRateCategory
     ns2:typeRateCode
     ns2:typeRateDescription(Text: ns2:Text[], Name: xsd:string)
     ns2:typeRateGuarantee
     ns2:typeRatePlanType
     ns2:typeRateTimePeriod
     ns2:typeRecordStatus
     ns2:typeRef
     ns2:typeReferencePoint
     ns2:typeRemark(xsd:string, ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode)
     ns2:typeRemarkWithTravelerRef(RemarkData: xsd:string, BookingTravelerRef: ns2:typeRef[], ProviderReservationInfoRef: ns2:typeRef, ProviderCode: ns2:typeProviderCode)
     ns2:typeReqSeat
     ns2:typeReserveRequirement
     ns2:typeResidency
     ns2:typeResultMessage(xsd:string, Code: xsd:integer, Type: ns2:Type)
     ns2:typeRoleId
     ns2:typeSSRCode
     ns2:typeSSRFreeText
     ns2:typeSearchLocation(({Airport: ns2:Airport} | {City: ns2:City} | {CityOrAirport: ns2:CityOrAirport} | {CoordinateLocation: ns2:CoordinateLocation} | {RailLocation: ns2:RailLocation}), Distance: ns2:Distance)
     ns2:typeSearchTimeSpec()
     ns2:typeSeatTypeCode
     ns2:typeSegmentRef(Key: ns2:typeRef)
     ns2:typeSource
     ns2:typeSpecificTime(Time: xsd:string)
     ns2:typeStartFromResult
     ns2:typeState
     ns2:typeStatus
     ns2:typeStatusCode
     ns2:typeStructuredAddress(AddressName: ns2:AddressName, Street: ns2:Street[], City: ns2:City, State: ns2:State, PostalCode: ns2:PostalCode, Country: ns2:Country, ProviderReservationInfoRef: ns2:ProviderReservationInfoRef[], Key: ns2:typeRef, ElStat: ns2:typeElementStatus, KeyOverride: xsd:boolean)
     ns2:typeSubKey(Text: xsd:string[], Name: xsd:string, Description: xsd:string)
     ns2:typeSupplierCode
     ns2:typeTax(Amount: ns2:typeMoney, Code: xsd:string)
     ns2:typeTaxInfo(TaxDetail: ns2:TaxDetail[], IncludedInBase: ns2:IncludedInBase, Key: ns2:typeRef, Category: xsd:string, CarrierDefinedCategory: xsd:string, SegmentRef: ns2:typeRef, FlightDetailsRef: ns2:typeRef, CouponRef: ns2:typeRef, Amount: ns2:typeMoney, OriginAirport: ns2:typeAirport, DestinationAirport: ns2:typeAirport, CountryCode: xsd:string, FareInfoRef: ns2:typeRef, TaxExempted: xsd:boolean, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, Text: ns2:StringLength1to128)
     ns2:typeThirdPartySupplier
     ns2:typeTicketNumber
     ns2:typeTicketStatus
     ns2:typeTimeRange(EarliestTime: xsd:string, LatestTime: xsd:string)
     ns2:typeTimeSpec(({TimeRange: ns2:typeTimeRange} | {SpecificTime: ns2:typeSpecificTime}), PreferredTime: xsd:string)
     ns2:typeTransactionsAllowed(ns2:typeBookingTransactionsAllowed, BookingEnabled: xsd:boolean, ShoppingEnabled: xsd:boolean, PricingEnabled: xsd:boolean)
     ns2:typeTravelerID
     ns2:typeTravelerLastName
     ns2:typeTrinary
     ns2:typeTypeCode
     ns2:typeURVersion
     ns2:typeVehicleCategory
     ns2:typeVehicleClass
     ns2:typeVehicleLocation
     ns2:typeVehicleTransmission
     ns2:typeVendorLocation(ProviderCode: ns2:typeProviderCode, VendorCode: ns2:typeSupplierCode, PreferredOption: xsd:boolean, VendorLocationID: ns2:VendorLocationID, Key: ns2:typeRef, MoreRatesToken: ns2:MoreRatesToken)
     ns2:typeVersion
     ns2:typeVoucherInformation(VoucherType: ns2:typeVoucherType, Amount: ns2:typeMoney, ConfirmationNumber: xsd:string, AccountName: xsd:string, Number: ns2:StringLength1to16)
     ns2:typeVoucherType
     ns2:typeWildcard
     ns2:typeWildcardMax50
     ns5:typeAdaptedRoomGuestAllocation(Child: ns5:typeGuestChildInformation[], NumberOfAdults: xsd:positiveInteger)
     ns5:typeAllImageSize
     ns5:typeAmenity
     ns5:typeAmenityCode
     ns5:typeAmenityLevel
     ns5:typeBedding
     ns5:typeDate
     ns5:typeGuestChildInformation(Age: xsd:nonNegativeInteger)
     ns5:typeGuestRoomInformation(Adults: xsd:positiveInteger, BookingTravelerRef: ns2:BookingTravelerRef[], Child: {BookingTravelerRef: ns2:BookingTravelerRef, Age: xsd:nonNegativeInteger}[])
     ns5:typeHotelAvailability
     ns5:typeHotelConfirmationNumber
     ns5:typeHotelDetails(HotelProperty: ns5:HotelProperty, HotelDetailItem: ns5:HotelDetailItem[], HotelRateDetail: ns5:HotelRateDetail[], MediaItem: ns2:MediaItem[])
     ns5:typeHotelLocation
     ns5:typeHotelLocationCode
     ns5:typeHotelPaymentType
     ns5:typeHotelRateCategory
     ns5:typeHotelRateDescription(Text: ns5:Text[], Name: xsd:string)
     ns5:typeHotelReferencePoint(ns2:typeReferencePoint, Country: ns2:typeCountry, State: ns2:typeState)
     ns5:typeNetTransCommission
     ns5:typePromoCodeString
     ns5:typeRateOfferId
     ns5:typeRateRuleDetail
     ns5:typeRoomDispatch(Room: {Capacity: xsd:positiveInteger, Quantity: xsd:positiveInteger}[])
     ns5:typeRoomView
     ns5:typeSimpleHotelRating
     ns5:typeSourceLink
     ns5:typeTransportationType
     ns5:typeUnstructuredAddress(Address: ns5:Address[])
     ns7:typePassiveSupplierCode
     ns6:typeCoachClassType
     ns6:typeJourneyDirection
     ns6:typeRailDirection
     ns6:typeRailPricingSolution(({RailJourney: ns6:RailJourney[]} | {RailJourneyRef: ns6:RailJourneyRef[]}), RailPricingInfo: ns6:RailPricingInfo[], Key: ns2:typeRef, OfferId: xsd:integer, TotalPrice: ns2:typeMoney, BasePrice: ns2:typeMoney, ApproximateTotalPrice: ns2:typeMoney, ApproximateBasePrice: ns2:typeMoney, EquivalentBasePrice: ns2:typeMoney, Taxes: ns2:typeMoney, Fees: ns2:typeMoney, Services: ns2:typeMoney, ApproximateTaxes: ns2:typeMoney, ApproximateFees: ns2:typeMoney, ProviderCode: ns2:typeProviderCode, SupplierCode: ns2:typeSupplierCode, HostTokenRef: ns2:typeRef, Reference: xsd:string)
     ns6:typeRailSegmentInfo
     ns6:typeRailTicketStatus
     ns6:typeResponseType
     ns6:typeTrainNumber
     ns6:typeTrainType
     ns6:typeTransportMode
     ns1:BaseSearchModifiers(TravelDate: ns1:typeDateSpec, IncludeAllNames: xsd:boolean, IncludeAgentInfo: xsd:boolean, MaxResults: ns2:typeMaxResults, StartFromResult: ns2:typeStartFromResult, ExcludeAir: xsd:boolean, ExcludeVehicle: xsd:boolean, ExcludeHotel: xsd:boolean)
     ns1:PNRDivideInfo(BookingTravelerName: ns2:BookingTravelerName[], ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode)
     ns1:typeDateSpec(({DateRange: ns2:typeDateRange} | {SpecificDate: xsd:date}))
     ns1:typeDisplayDetailName
     ns1:typeExternalSearchIndex
     ns1:typeProductInfo(ProductType: ns2:typeProduct, VendorCode: xsd:string, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string)
     ns1:typeRailCreateReservationRsp(ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, RailSolutionChangedInfo: ns6:RailSolutionChangedInfo[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string)
     ns1:typeReservationTicketed
     ns1:typeRetainReservation
     ns1:typeSavedTripNote(Text: ns1:Text)
     ns1:typeSavedTripProductInfo(ProductType: ns2:typeProduct, VendorCode: xsd:string, ProviderCode: xsd:string)
     ns1:typeSavedTripRecordStatus
     ns1:typeSegmentPolicy(Preference: ns1:Preference[], SegmentRef: ns2:typeRef, InPolicy: xsd:boolean, InContract: xsd:boolean)
     ns1:typeURStatus
     ns4:typeAreaInfo
     ns4:typeDepositGuarantee(Purpose: ns2:typeReserveRequirement, Type: ns4:Type, Amount: ns2:typeMoney, Percent: xsd:decimal, DueDate: xsd:date, NumberOfDays: xsd:integer, OptionType: ns4:OptionType, Required: xsd:boolean, RequirementPassed: xsd:boolean)
     ns4:typePaymentInformation(Voucher: ns2:typeVoucherInformation, BillingNumber: xsd:string, BillingReferenceNumber: xsd:string, PrePayment: ns4:PrePayment)
     ns4:typePickupDateLocation(Date: xsd:date, Location: ns2:typeIATACode, LocationType: ns2:typeVehicleLocation, PickupLocationNumber: xsd:string)
     ns4:typeRateAvailability
     ns4:typeRateHostIndicator(InventoryToken: xsd:string, RateToken: xsd:string)
     ns4:typeRateInfo(RateForPeriod: ns2:typeMoney, NumberOfPeriods: xsd:int, UnlimitedMileage: xsd:boolean, MileageAllowance: xsd:int, Units: ns2:typeDistance, ExtraMileageCharge: ns2:typeMoney)
     ns4:typeRateVariance(Type: xsd:string, Value: xsd:decimal, Apply: xsd:string)
     ns4:typeRentalPeriod(RentalUnit: ns4:RentalUnit, Length: xsd:integer, RequirementPassed: xsd:boolean)
     ns4:typeStartEndTime(Time: xsd:string, RequirementPassed: xsd:boolean, Mon: xsd:boolean, Tue: xsd:boolean, Wed: xsd:boolean, Thu: xsd:boolean, Fri: xsd:boolean, Sat: xsd:boolean, Sun: xsd:boolean)
     ns4:typeVehicleCharge(({Amount: ns2:typeMoney} | {Percentage: ns2:typePercentageWithDecimal}), Category: xsd:string, Name: xsd:string, Description: xsd:string, Type: ns4:Type, IncludedInRate: ns4:IncludedInRate)
     ns4:typeVehicleDisclaimer
     ns4:typeVehicleLocationInformation(Address: ns2:typeStructuredAddress, PhoneNumber: ns2:PhoneNumber[], OperationTime: xsd:string[], LocationName: xsd:string, CounterLocation: xsd:string, VendorCode: ns2:typeSupplierCode, LocationCode: ns2:typeIATACode, LocationType: ns2:typeVehicleLocation, LocationNumber: ns2:StringLength3)
     ns4:typeVehicleRateDescription(Text: ns4:Text[], Name: xsd:string)
     ns4:typeVehicleRates(EstimatedTotalAmount: ns2:typeMoney, BaseRate: ns2:typeMoney, RateForPeriod: ns2:typeMoney, DropOffCharge: ns2:typeMoney, YoungDriverCharge: ns2:typeMoney, SeniorDriverCharge: ns2:typeMoney, FuelSurcharge: ns2:typeMoney, ExtraMileageCharge: ns2:typeMoney, PayNow: ns2:typeMoney, PayLater: ns2:typeMoney)
     ns4:typeVehicleSearchDistance(Units: ns2:typeDistance, Direction: ns4:Direction, MinDistance: ns4:MinDistance, MaxDistance: ns4:MaxDistance)
     ns4:typeVehicleTypes
     ns4:typeVehicleVendorLocation(ns2:typeVendorLocation, ProviderCode: ns2:typeProviderCode, VendorCode: ns2:typeSupplierCode, PreferredOption: xsd:boolean, VendorLocationID: ns2:VendorLocationID, Key: ns2:typeRef, MoreRatesToken: ns2:MoreRatesToken, LocationType: ns2:typeVehicleLocation, LocationCode: ns2:typeIATACode, Type: ns4:Type)
     ns4:vehicleRateModifiers
     xsd:ENTITIES
     xsd:ENTITY
     xsd:ID
     xsd:IDREF
     xsd:IDREFS
     xsd:NCName
     xsd:NMTOKEN
     xsd:NMTOKENS
     xsd:NOTATION
     xsd:Name
     xsd:QName
     xsd:anySimpleType
     xsd:anyURI
     xsd:base64Binary
     xsd:boolean
     xsd:byte
     xsd:date
     xsd:dateTime
     xsd:decimal
     xsd:double
     xsd:duration
     xsd:float
     xsd:gDay
     xsd:gMonth
     xsd:gMonthDay
     xsd:gYear
     xsd:gYearMonth
     xsd:hexBinary
     xsd:int
     xsd:integer
     xsd:language
     xsd:long
     xsd:negativeInteger
     xsd:nonNegativeInteger
     xsd:nonPositiveInteger
     xsd:normalizedString
     xsd:positiveInteger
     xsd:short
     xsd:string
     xsd:time
     xsd:token
     xsd:unsignedByte
     xsd:unsignedInt
     xsd:unsignedLong
     xsd:unsignedShort

Bindings:
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AckScheduleChangeServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirCancelBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirCreateReservationBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirMerchandisingFulfillmentBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}HotelCancelServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}HotelReservationServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}PassiveCancelServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}PassiveReservationServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}ProviderReservationDisplayServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}ProviderReservationDivideServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}RailCreateReservationBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripCreateServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripDeleteServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripModifyServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripRetrieveServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripSearchServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordCancelServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordHistorySearchServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordImportServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordModifyServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordRetrieveServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordSearchServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}VehicleCancelServiceBinding
     Soap11Binding: {http://www.travelport.com/service/universal_v46_0}VehicleReservationServiceBinding

Service: UniversalRecordService
     Port: UniversalRecordRetrieveServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordRetrieveServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ({UniversalRecordLocatorCode: ns2:typeLocatorCode} | {ProviderReservationInfo: {ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode}}), TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ViewOnlyInd: xsd:boolean, TravelerLastName: ns2:typeTravelerLastName, _soapheaders={sessionContext: ns0:SessionContext, supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, Updated: xsd:boolean

Service: UniversalRecordHistorySearchService
     Port: UniversalRecordHistorySearchServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordHistorySearchServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, UniversalRecordHistorySearchModifiers: ns1:UniversalRecordHistorySearchModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecordHistorySearchResult: ns1:UniversalRecordHistorySearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, LastResult: xsd:boolean

Service: UniversalRecordSearchService
     Port: UniversalRecordSearchServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordSearchServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, UniversalRecordSearchModifiers: ns1:UniversalRecordSearchModifiers, TravelerCriteria: ns1:TravelerCriteria, SearchAgent: ns1:SearchAgent, AirReservationCriteria: ns1:AirReservationCriteria, HotelReservationCriteria: ns1:HotelReservationCriteria, VehicleReservationCriteria: ns1:VehicleReservationCriteria, RailReservationCriteria: ns1:RailReservationCriteria, SearchAccount: ns1:SearchAccount, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ActionDate: xsd:date, RecordStatus: ns2:typeRecordStatus, ClientId: xsd:string, ProviderCode: xsd:string, ProviderLocatorCode: xsd:string, ExternalSearchIndex: ns1:typeExternalSearchIndex, RestrictToProfileId: xsd:anyType, PassiveOnly: xsd:boolean, TicketStatus: ns2:URTicketStatus) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecordSearchResult: ns1:UniversalRecordSearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, MoreResults: ns2:typeMoreResults

Service: ScheduleChangeService
     Port: AckScheduleChangeServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AckScheduleChangeServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, ReservationLocatorCode: xsd:string, Version: ns2:typeURVersion, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: UniversalRecordImportService
     Port: UniversalRecordImportServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordImportServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, UniversalRecordLocatorCode: ns2:typeLocatorCode, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: UniversalRecordModifyService
     Port: UniversalRecordModifyServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordModifyServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ContinuityCheckOverride: ns2:ContinuityCheckOverride, RecordIdentifier: ns1:RecordIdentifier, UniversalModifyCmd: ns1:UniversalModifyCmd[], FileFinishingInfo: ns2:FileFinishingInfo, QueueNextModifiers: ns1:QueueNextModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ReturnRecord: xsd:boolean, Version: ns2:typeURVersion, OverrideMCT: xsd:boolean, _soapheaders={sessionContext: ns0:SessionContext, supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, AirSolutionChangedInfo: ns3:AirSolutionChangedInfo[], UniversalModifyFailureInfo: ns1:UniversalModifyFailureInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string, QueueSessionToken: xsd:string

Service: UniversalRecordCancelService
     Port: UniversalRecordCancelServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}UniversalRecordCancelServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, Version: ns2:typeURVersion) -> ResponseMessage: ns2:ResponseMessage[], ProviderReservationStatus: ns1:ProviderReservationStatus[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: ProviderReservationDisplayService
     Port: ProviderReservationDisplayServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}ProviderReservationDisplayServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, ProviderReservationDetail: xsd:boolean, CustomCheck: xsd:boolean, ProviderProfile: xsd:boolean, DivideDetails: xsd:boolean, EnhancedItinModifiers: xsd:boolean, IntegratedContent: xsd:boolean, Cruise: xsd:boolean, RailSegment: xsd:boolean) -> ResponseMessage: ns2:ResponseMessage[], DisplayDetails: ns1:DisplayDetails[], TravelerNameNum: ns1:TravelerNameNum[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: ProviderReservationDivideService
     Port: ProviderReservationDivideServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}ProviderReservationDivideServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, BookingTravelerRef: {Key: ns2:typeRef}[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, CreateChildUniversalRecord: ns1:CreateChildUniversalRecord) -> ResponseMessage: ns2:ResponseMessage[], ParentProviderReservationInfo: ns1:ParentProviderReservationInfo, ChildProviderReservationInfo: ns1:ChildProviderReservationInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: SavedTripCreateService
     Port: SavedTripCreateServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripCreateServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: SavedTripModifyService
     Port: SavedTripModifyServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripModifyServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: SavedTripRetrieveService
     Port: SavedTripRetrieveServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripRetrieveServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, LocatorCode: ns2:typeLocatorCode, TravelerLastName: ns2:typeTravelerLastName, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], SavedTrip: ns1:SavedTrip, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: SavedTripDeleteService
     Port: SavedTripDeleteServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripDeleteServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, LocatorCode: ns2:typeLocatorCode, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: SavedTripSearchService
     Port: SavedTripSearchServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}SavedTripSearchServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, SavedTripSearchModifiers: ns1:SavedTripSearchModifiers, TravelerCriteria: ns1:TravelerCriteria, SearchAgent: ns1:SearchAgent, AirReservationCriteria: ns1:AirReservationCriteria, HotelReservationCriteria: ns1:HotelReservationCriteria, VehicleReservationCriteria: ns1:VehicleReservationCriteria, RailReservationCriteria: ns1:RailReservationCriteria, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RecordStatus: ns1:typeSavedTripRecordStatus, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], SavedTripSearchResult: ns1:SavedTripSearchResult[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: VehicleService
     Port: VehicleReservationServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}VehicleReservationServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], ({VehicleDateLocation: ns4:VehicleDateLocation, Vehicle: ns4:Vehicle, SpecialEquipment: ns2:SpecialEquipment[], VehicleSpecialRequest: ns4:VehicleSpecialRequest, PaymentInformation: ns4:PaymentInformation}), PointOfSale: ns2:PointOfSale, ({DeliveryAddress: ns4:DeliveryAddress, CollectionAddress: ns4:CollectionAddress, FlightArrivalInformation: ns4:FlightArrivalInformation}), Guarantee: ns2:Guarantee, ({AssociatedRemark: ns4:AssociatedRemark[]}), BookingSource: ns2:BookingSource, ReservationName: ns2:ReservationName, ThirdPartyInformation: ns2:ThirdPartyInformation, ActionStatus: ns2:ActionStatus, ReviewBooking: ns2:ReviewBooking[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, MandatoryRateMatch: xsd:boolean, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

     Port: VehicleCancelServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}VehicleCancelServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, VehicleDateLocation: ns4:VehicleDateLocation, Vehicle: ns4:Vehicle, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, SupplierCode: xsd:string, SupplierLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: HotelService
     Port: HotelReservationServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}HotelReservationServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], HotelRateDetail: ns5:HotelRateDetail[], HotelProperty: ns5:HotelProperty, ThirdPartyInformation: ns2:ThirdPartyInformation, HotelStay: ns5:HotelStay, Guarantee: ns2:Guarantee, HotelSpecialRequest: ns2:typeGeneralText, PointOfSale: ns2:PointOfSale, PromotionCode: ns5:PromotionCode, BookingSource: ns2:BookingSource, HotelBedding: ns5:HotelBedding[], GuestInformation: ns5:GuestInformation, AssociatedRemark: ns5:AssociatedRemark[], ReservationName: ns2:ReservationName, ActionStatus: ns2:ActionStatus, HostToken: ns2:HostToken, ReviewBooking: ns2:ReviewBooking[], HotelCommission: xsd:string, BookingGuestInformation: ns5:BookingGuestInformation, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, UserAcceptance: xsd:boolean, MandatoryRateMatch: xsd:boolean, StatusCode: ns2:typeStatusCode, BookingConfirmation: ns5:typeHotelConfirmationNumber, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, HotelRateChangedInfo: {HotelProperty: ns5:HotelProperty, HotelRateDetail: ns5:HotelRateDetail, Reason: xsd:string}, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

     Port: HotelCancelServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}HotelCancelServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, HotelProperty: ns5:HotelProperty, HotelStay: ns5:HotelStay, FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, SupplierCode: xsd:string, SupplierLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: RailService
     Port: RailCreateReservationPort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}RailCreateReservationBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], RailPricingSolution: ns6:RailPricingSolution, Payment: ns2:Payment, RailFareNoteList: ns6:RailFareNoteList, HostTokenList: ns2:HostTokenList, RailAutoSeatAssignment: ns6:RailAutoSeatAssignment[], RailSpecificSeatAssignment: ns6:RailSpecificSeatAssignment[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, BookingActionType: xsd:string) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, RailSolutionChangedInfo: ns6:RailSolutionChangedInfo[], TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: AirService
     Port: AirCreateReservationPort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirCreateReservationBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, FormOfPayment: ns2:FormOfPayment[], SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], PointOfSale: ns2:PointOfSale, AirPricingSolution: ns3:AirPricingSolution[], ActionStatus: ns2:ActionStatus[], Payment: ns2:Payment[], DeliveryInfo: ns2:DeliveryInfo, AutoSeatAssignment: ns3:AutoSeatAssignment[], SpecificSeatAssignment: ns3:SpecificSeatAssignment[], AssociatedRemark: ns3:AssociatedRemark[], PocketItineraryRemark: ns3:PocketItineraryRemark[], ReviewBooking: ns2:ReviewBooking[], AirPricingTicketingModifiers: ns3:AirPricingTicketingModifiers[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, RetainReservation: ns1:typeRetainReservation, Source: ns1:Source, OverrideMCT: xsd:boolean, RestrictWaitlist: xsd:boolean, CreatePassiveForHold: xsd:boolean, ChannelId: ns1:ChannelId, NSCC: ns1:NSCC, CheckPriceVarianceType: ns1:CheckPriceVarianceType, CheckPriceVarianceValue: xsd:decimal, SplitReservation: xsd:boolean, PreferCompleteItinerary: xsd:boolean, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, AirSolutionChangedInfo: ns3:AirSolutionChangedInfo[], AirSegmentSellFailureInfo: ns3:AirSegmentSellFailureInfo, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

     Port: AirCancelPort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirCancelBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AirReservationLocatorCode: ns3:AirReservationLocatorCode, AirSegment: ns3:typeBaseAirSegment[], AirSegmentRef: ns3:AirSegmentRef[], FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, Version: ns2:typeURVersion, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

     Port: AirMerchandisingFulfillmentPort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}AirMerchandisingFulfillmentBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, HostToken: ns2:HostToken[], HostReservation: ns3:HostReservation[], AgencySellInfo: ns2:AgencySellInfo, AirSolution: ns3:AirSolution, CreditCard: ns2:CreditCard, OptionalServices: ns3:OptionalServices, SpecificSeatAssignment: ns3:SpecificSeatAssignment[], GeneralRemark: ns2:GeneralRemark[], ConfirmationEmail: xsd:string, MerchandisingPricingModifiers: ns3:MerchandisingPricingModifiers, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

Service: PassiveService
     Port: PassiveReservationServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}PassiveReservationServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, LinkedUniversalRecord: ns2:LinkedUniversalRecord[], BookingTraveler: ns2:BookingTraveler[], OSI: ns2:OSI[], AccountingRemark: ns2:AccountingRemark[], GeneralRemark: ns2:GeneralRemark[], XMLRemark: ns2:XMLRemark[], UnassociatedRemark: ns2:UnassociatedRemark[], Postscript: ns2:Postscript, PassiveInfo: ns2:PassiveInfo, ContinuityCheckOverride: ns2:ContinuityCheckOverride, AgencyContactInfo: ns2:AgencyContactInfo, CustomerID: ns2:CustomerID, FileFinishingInfo: ns2:FileFinishingInfo, CommissionRemark: ns2:CommissionRemark, ConsolidatorRemark: ns2:ConsolidatorRemark, InvoiceRemark: ns2:InvoiceRemark[], SSR: ns2:SSR[], EmailNotification: ns2:EmailNotification, QueuePlace: ns2:QueuePlace, SupplierLocator: ns2:SupplierLocator[], ThirdPartyInformation: ns2:ThirdPartyInformation[], PassiveSegment: ns7:PassiveSegment[], PassiveRemark: ns7:PassiveRemark[], AssociatedRemark: ns7:AssociatedRemark[], ActionStatus: ns2:ActionStatus, ReviewBooking: ns2:ReviewBooking[], TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, RuleName: ns2:RuleName, UniversalRecordLocatorCode: ns2:typeLocatorCode, ProviderLocatorCode: ns2:typeLocatorCode, ProviderCode: xsd:string, CustomerNumber: xsd:string, Version: xsd:integer, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

     Port: PassiveCancelServicePort (Soap11Binding: {http://www.travelport.com/service/universal_v46_0}PassiveCancelServiceBinding)
         Operations:
            service(BillingPointOfSaleInfo: ns2:BillingPointOfSaleInfo, AgentIDOverride: ns2:AgentIDOverride[], TerminalSessionInfo: xsd:string, OverridePCC: ns2:OverridePCC, PassiveSegmentRef: ns7:PassiveSegmentRef[], FileFinishingInfo: ns2:FileFinishingInfo, TraceId: xsd:string, TokenId: xsd:string, AuthorizedBy: xsd:string, TargetBranch: ns2:typeBranchCode, OverrideLogging: ns2:typeLoggingLevel, LanguageCode: xsd:language, RetrieveProviderReservationDetails: xsd:boolean, PassiveReservationLocatorCode: xsd:string, ProviderCode: ns2:typeProviderCode, ProviderLocatorCode: ns2:typeProviderLocatorCode, Version: ns2:typeURVersion, _soapheaders={supportedVersions: ns1:SupportedVersions}) -> ResponseMessage: ns2:ResponseMessage[], UniversalRecord: ns1:UniversalRecord, TraceId: xsd:string, TransactionId: xsd:string, ResponseTime: xsd:integer, CommandHistory: xsd:string

